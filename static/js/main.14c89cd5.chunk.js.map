{"version":3,"sources":["components/ManageData/index.js","actions/action-constants.js","utils.js","actions/actionDefs.js","containers/manageDataContainer.js","components/AddUser/index.js","containers/addUserContainer.js","components/DisplayUsers/index.js","containers/displayUsersContainer.js","containers/manageUsersContainer.js","components/AddDebt/index.js","containers/addDebtContainer.js","components/DisplayDebts/index.js","containers/displayDebtsContainer.js","containers/manageDebtsContainer.js","components/HomePage/index.js","containers/homePageContainer.js","App.js","reducers/reducer.js","store.js","index.js"],"names":["ManageData","_ref","clearData","uploadData","data","react_default","a","createElement","className","href","download","index_es","icon","faDownload","type","title","id","onChange","e","htmlFor","faUpload","onClick","window","confirm","alert","addUser","addDebt","deleteDebt","deleteUser","deleteDebtMap","addDebtInstance","checkForDebtInstance","debtArray","idOne","idTwo","includes","orderEmails","firstEmail","secondEmail","userOne","userTwo","localeCompare","getIdentifier","email","user","key","value","firstName","lastName","actionConst","payload","_orderEmails2","ownerEmail","slaveEmail","userIDOne","userIDTwo","multiplier","amount","notes","timeStamp","Date","now","ManageDataContainer","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","bind","assertThisInitialized","_this2","file","target","files","reader","FileReader","onload","obj","JSON","parse","result","emails","forEach","props","users","debtList","debt","debtMap","debts","debtItem","existing","existingDebtItem","error","readAsText","File","FileList","Blob","ManageData_ManageData","URL","createObjectURL","stringify","React","Component","connect","dispatch","AddUser","handleFirstName","handleLastName","handleEmail","name","autoComplete","AddUserContainer","AddUser_AddUser","event","setState","DisplayUsers","editUser","modalIsOpen","editEmail","saveEdit","cancelEdit","oldEmail","lib_default","isOpen","onRequestClose","contentLabel","disabled","map","emailTwo","_orderEmails","setTimeout","Modal","setAppElement","DisplayUsers_DisplayUsers","ManageUsersContainer","addUserContainer","displayUsersContainer","AddDebt","handleOwnerEmail","handleSlaveEmail","handleNotes","handleAmount","emailOne","AddDebtContainer","AddDebt_AddDebt","isNaN","DisplayDebts","setTotalDebtMapAmount","setDebtMapData","buildDebtMapTable","debtMapData","debtMapTotal","allDebtsData","allDebtsTotal","handleSingleSlaveEmail","singleSlaveEmail","buildDebtsTable","setDebtsData","setTotalDebtsAmount","handleSingleOwnerEmail","setCreditsData","singleOwnerEmail","allCreditsTotal","allCreditsData","setTotalCreditsAmount","buildCreditsTable","setNumDebts","setNumCredits","reduce","prev","curr","currAmount","countDebts","push","countCredits","DisplayDebtsContainer","numDebts","numCredits","_this3","_this4","index","length","newTotal","newData","splice","_this5","DisplayDebts_DisplayDebts","ManageDebtsContainer","addDebtContainer","displayDebtsContainer","HomePage","HomePageContainer","HomePage_HomePage","App","react_router_dom","basename","activeClassName","exact","to","react_router","path","component","reducer","action","objectSpread","concat","toConsumableArray","defineProperty","slice","newUserMap","filter","newDebtMap","cookiePaths","initialState","getStateFromCookies","store","createStore","composeWithDevTools","applyMiddleware","reduxCookiesMiddleware","ReactDOM","render","es","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.14c89cd5.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./index.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faDownload } from \"@fortawesome/free-solid-svg-icons\";\nimport { faUpload } from \"@fortawesome/free-solid-svg-icons\";\n\nexport const ManageData = ({ clearData, uploadData, data }) => (\n  <div>\n    <div className=\"containers\">\n      <h2 className=\"titles\" >Data, Data Everywhere!</h2>\n      <div>\n        <label className=\"download\">\n          <a href={data} download={\"data.json\"} className=\"download-link\">\n            <FontAwesomeIcon icon={faDownload} /> Download All Data\n          </a>\n        </label>\n        <input\n          type=\"file\"\n          title=\"Upload Data\"\n          className=\"upload-button\"\n          id=\"upload\"\n          onChange={e => {\n            uploadData(e);\n          }}\n        />\n        <label htmlFor=\"upload\" className=\"upload-file\">\n          <FontAwesomeIcon icon={faUpload} /> Upload Data\n        </label>\n        <span\n          onClick={() => {\n            let response = window.confirm(\n              \"Are you sure you want to wipe all data?\"\n            );\n            if (response) {\n              clearData();\n              alert(\"Data Cleared\");\n            }\n          }}\n          className=\"clear\"\n        >\n          Clear Data\n        </span>\n      </div>\n    </div>\n  </div>\n);\n","export const addUser = \"ADD_USER\";\nexport const addDebt = \"ADD_DEBT\";\nexport const clearData = \"CLEAR_DATA\";\nexport const deleteDebt = \"DELETE_DEBT\";\nexport const deleteUser = \"DELETE_USER\";\nexport const deleteDebtMap = \"DELETE_DEBT_MAP\";\nexport const addDebtInstance = \"ADD_DEBT_INSTANCE\";","import React from \"react\";\n\nexport function checkForDebtInstance(debtArray, idOne, idTwo) {\n  return debtArray.includes(idOne + idTwo);\n}\n\nexport function orderEmails(firstEmail, secondEmail) {\n  let userOne = null;\n  let userTwo = null;\n\n  if (firstEmail.localeCompare(secondEmail) < 0) {\n    userOne = firstEmail;\n    userTwo = secondEmail;\n  } else {\n    userOne = secondEmail;\n    userTwo = firstEmail;\n  }\n\n  return {\n    userOne,\n    userTwo\n  };\n}\n\nexport function getIdentifier(email, user) {\n  return (\n    <option key={email} value={email}>\n      {user.firstName + \" \" + user.lastName + \" (\" + email + \")\"}\n    </option>\n  );\n}\n","import * as actionConst from \"./action-constants\";\nimport { orderEmails } from \"../utils\";\n\nexport function addUser(data) {\n  return {\n    type: actionConst.addUser,\n    payload: {\n      firstName: data.firstName,\n      lastName: data.lastName,\n      email: data.email\n    },\n    email: data.email\n  };\n}\n\nexport function clearData() {\n  return {\n    type: actionConst.clearData\n  };\n}\n\nexport function deleteDebt(data) {\n  let { userOne, userTwo } = orderEmails(data.ownerEmail, data.slaveEmail);\n\n  return {\n    type: actionConst.deleteDebt,\n    payload: { userIDOne: userOne, userIDTwo: userTwo, index: data.index }\n  };\n}\n\nexport function deleteUser(data) {\n  return {\n    type: actionConst.deleteUser,\n    payload: {\n      email: data.email\n    }\n  };\n}\n\nexport function deleteDebtMap(data) {\n  let { userOne, userTwo } = orderEmails(data.ownerEmail, data.slaveEmail);\n\n  return {\n    type: actionConst.deleteDebtMap,\n    payload: { userIDOne: userOne, userIDTwo: userTwo }\n  };\n}\n\nexport function addDebt(data) {\n  let userOne = \"\";\n  let userTwo = \"\";\n  let multiplier = 1;\n\n  if (data.userOne.localeCompare(data.userTwo) < 0) {\n    userOne = data.userOne;\n    userTwo = data.userTwo;\n    multiplier = -1;\n  } else {\n    userOne = data.userTwo;\n    userTwo = data.userOne;\n  }\n\n  return {\n    type: actionConst.addDebt,\n    payload: {\n      userIDOne: userOne,\n      userIDTwo: userTwo,\n      amount: data.amount * multiplier,\n      notes: data.notes,\n      timeStamp: Date.now()\n    }\n  };\n}\n\nexport function addDebtInstance(data) {\n  return {\n    type: actionConst.addDebtInstance,\n    payload: {\n      key: data.key,\n      debts: data.debts\n    }\n  };\n}\n","import { ManageData } from \"../components/ManageData/index\";\nimport {\n  clearData,\n  addUser,\n  addDebt,\n  addDebtInstance\n} from \"../actions/actionDefs\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\n\nclass ManageDataContainer extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {};\n\n    this.uploadData = this.uploadData.bind(this);\n  }\n\n  uploadData(e) {\n    let file = e.target.files[0];\n\n    if (!file.type.includes(\"json\")) {\n      alert(\"Invalid file type, only accept json files\");\n      return;\n    }\n\n    let reader = new FileReader();\n\n    reader.onload = (() => {\n      return e => {\n        try {\n          let obj = JSON.parse(e.target.result);\n\n          obj.emails.forEach(email => {\n            if (!this.props.emails.includes(email)) {\n              this.props.addUser({\n                firstName: obj.users[email].firstName,\n                lastName: obj.users[email].lastName,\n                email: obj.users[email].email\n              });\n            }\n          });\n\n          obj.debtList.forEach(debt => {\n            if (!this.props.debtList.includes(debt)) {\n              this.props.addDebtInstance({\n                debts: obj.debtMap[debt].debts,\n                key: debt\n              });\n            } else {\n              obj.debtMap[debt].debts.forEach(debtItem => {\n                let existing = false;\n                this.props.debtMap[debt].debts.forEach(existingDebtItem => {\n                  if (existingDebtItem.timeStamp === debtItem.timeStamp) {\n                    existing = true;\n                  }\n                });\n                if (!existing) {\n                  this.props.addDebt({\n                    userOne: debtItem.userIDOne,\n                    userTwo: debtItem.userIDTwo,\n                    amount: debtItem.amount * -1,\n                    notes: debtItem.notes\n                  });\n                }\n              });\n            }\n          });\n          alert(\"Data Uploaded\");\n        } catch (error) {\n          alert(\"Error parsing json: \" + error);\n        }\n      };\n    })(file);\n    reader.readAsText(file);\n  }\n\n  render() {\n    if (window.File && window.FileReader && window.FileList && window.Blob) {\n      return (\n        <ManageData\n          clearData={this.props.clearData}\n          uploadData={this.uploadData}\n          data={URL.createObjectURL(\n            new Blob(\n              [\n                JSON.stringify({\n                  users: this.props.users,\n                  emails: this.props.emails,\n                  debtList: this.props.debtList,\n                  debtMap: this.props.debtMap\n                })\n              ],\n              {\n                type: \"application/json\"\n              }\n            )\n          )}\n        />\n      );\n    } else {\n      alert(\"File API's are not available\");\n      return(<div></div>);\n    }\n  }\n}\n\nconst mapStateToProps = state => ({\n  users: state.users,\n  emails: state.emails,\n  debtList: state.debtList,\n  debtMap: state.debtMap\n});\n\nconst mapDispatchToProps = dispatch => ({\n  clearData: () => dispatch(clearData()),\n  addUser: data => dispatch(addUser(data)),\n  addDebt: data => dispatch(addDebt(data)),\n  addDebtInstance: data => dispatch(addDebtInstance(data))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ManageDataContainer);\n","import React from \"react\";\n\nexport const AddUser = ({\n  handleFirstName,\n  handleLastName,\n  handleEmail,\n  addUser,\n  emails,\n  firstName,\n  lastName,\n  email\n}) => (\n  <div className=\"containers\">\n    <h2 className=\"titles\">Create User</h2>\n    <form>\n      <div>\n        <div>\n          <h3>FirstName</h3>\n        </div>\n        <input\n          type=\"text\"\n          name=\"firstName\"\n          value={firstName}\n          autoComplete=\"new-password\"\n          className=\"input-boxes\"\n          onChange={e => handleFirstName(e)}\n        />\n        <div>\n          <h3>LastName</h3>\n        </div>\n        <input\n          type=\"text\"\n          name=\"lastName\"\n          value={lastName}\n          autoComplete=\"new-password\"\n          className=\"input-boxes\"\n          onChange={e => handleLastName(e)}\n        />\n      </div>\n      <div>\n        <div>\n          <h3>Email</h3>\n        </div>\n        <input\n          type=\"text\"\n          name=\"email\"\n          value={email}\n          autoComplete=\"new-password\"\n          className=\"input-boxes\"\n          onChange={e => handleEmail(e)}\n        />\n      </div>\n      <input\n        type=\"button\"\n        value=\"Submit\"\n        className=\"submit-button\"\n        onClick={() => {\n          if (!emails.includes(email)) {\n            if (firstName !== \"\" || lastName !== \"\" || email !== \"\") {\n              addUser({\n                firstName: firstName,\n                lastName: lastName,\n                email: email\n              });\n              alert(\"User added\");\n            } else {\n              alert(\"Please fill in all fields\");\n            }\n          } else {\n            alert(\"User with same email already exists\");\n          }\n        }}\n      />\n    </form>\n  </div>\n);\n","import { AddUser } from \"../components/AddUser/index\";\nimport { addUser } from \"../actions/actionDefs\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\n\nclass AddUserContainer extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\"\n    };\n  }\n\n  render() {\n    return (\n      <AddUser\n        email={this.state.email}\n        lastName={this.state.lastName}\n        firstName={this.state.firstName}\n        handleEmail={event => this.setState({ email: event.target.value })}\n        handleLastName={event =>\n          this.setState({ lastName: event.target.value })\n        }\n        handleFirstName={event =>\n          this.setState({ firstName: event.target.value })\n        }\n        emails={this.props.emails}\n        addUser={this.props.addUser}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  emails: state.emails\n});\n\nconst mapDispatchToProps = dispatch => ({\n  addUser: data => dispatch(addUser(data))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AddUserContainer);\n","import React from \"react\";\nimport Modal from \"react-modal\";\nimport \"./index.css\";\n\nexport const DisplayUsers = ({\n  users,\n  emails,\n  debtList,\n  deleteUser,\n  deleteDebtMap,\n  checkForDebtInstance,\n  editUser,\n  orderEmails,\n  modalIsOpen,\n  editEmail,\n  firstName,\n  lastName,\n  email,\n  saveEdit,\n  cancelEdit,\n  handleLastName,\n  handleFirstName,\n  handleEmail,\n  addUser,\n  oldEmail\n}) => (\n  <div>\n    <div>\n      <Modal\n        isOpen={modalIsOpen}\n        onRequestClose={cancelEdit}\n        contentLabel=\"Edit User\"\n        className=\"modal-style\"\n      >\n        <form>\n          <div>\n            <div>\n              <h3>FirstName</h3>\n            </div>\n            <input\n              type=\"text\"\n              name=\"firstName\"\n              value={firstName}\n              autoComplete=\"new-password\"\n              className=\"input-boxes\"\n              onChange={e => handleFirstName(e)}\n            />\n            <div>\n              <h3>LastName</h3>\n            </div>\n            <input\n              type=\"text\"\n              name=\"lastName\"\n              value={lastName}\n              autoComplete=\"new-password\"\n              className=\"input-boxes\"\n              onChange={e => handleLastName(e)}\n            />\n          </div>\n          <div>\n            <div>\n              <h3>Email</h3>\n            </div>\n            <input\n              type=\"text\"\n              name=\"email\"\n              value={email}\n              onChange={e => handleEmail(e)}\n              className=\"input-boxes\"\n              disabled={editEmail ? \"\" : \"disabled\"}\n            />\n          </div>\n          <input\n            type=\"button\"\n            value=\"Save\"\n            className=\"submit-button\"\n            onClick={() => {\n              if (editEmail) {\n                if (!emails.includes(email)) {\n                  deleteUser({ email: oldEmail });\n                  addUser({\n                    firstName: firstName,\n                    lastName: lastName,\n                    email: email\n                  });\n                  saveEdit();\n                } else {\n                  alert(\"User with same email already exists\");\n                }\n              } else {\n                deleteUser({ email: email });\n                addUser({\n                  firstName: firstName,\n                  lastName: lastName,\n                  email: email\n                });\n                saveEdit();\n              }\n            }}\n          />\n          <input\n            type=\"button\"\n            value=\"Cancel\"\n            className=\"submit-button\"\n            onClick={() => {\n              cancelEdit();\n            }}\n          />\n        </form>\n      </Modal>\n    </div>\n    <div className=\"containers\">\n      <h2 className=\"titles\">Current Users</h2>\n      <table className=\"users-table\">\n        <thead>\n          <tr>\n            <th>First Name</th>\n            <th>Last Name</th>\n            <th>Email</th>\n            <th>Manage</th>\n          </tr>\n        </thead>\n        <tbody>\n          {emails.map(email => {\n            return (\n              <tr key={users[email].email}>\n                <td>{users[email].firstName}</td>\n                <td>{users[email].lastName}</td>\n                <td>{users[email].email}</td>\n                <td>\n                  <span\n                    className=\"table-button\"\n                    onClick={() => {\n                      let response = window.confirm(\n                        \"Are you sure you want to delete this user?\"\n                      );\n                      if (response) {\n                        emails.forEach(emailTwo => {\n                          let { userOne, userTwo } = orderEmails(\n                            email,\n                            emailTwo\n                          );\n                          if (\n                            checkForDebtInstance(debtList, userOne, userTwo)\n                          ) {\n                            deleteDebtMap({\n                              ownerEmail: userOne,\n                              slaveEmail: userTwo\n                            });\n                          }\n                        });\n\n                        deleteUser({ email: email });\n                      }\n                    }}\n                  >\n                    Delete\n                  </span>\n                  <span\n                    className=\"table-button\"\n                    onClick={() => {\n                      let editEmail = false;\n                      emails.forEach(emailTwo => {\n                        let { userOne, userTwo } = orderEmails(email, emailTwo);\n                        if (!checkForDebtInstance(debtList, userOne, userTwo)) {\n                          editEmail = true;\n                        } else {\n                          editEmail = false;\n                        }\n                      });\n                      editUser(email, editEmail);\n                      if (!editEmail) {\n                        setTimeout(() => {\n                          alert(\n                            \"Note, only the first and last name can be changed for this user as they are involved in existing debts\"\n                          );\n                        }, 100);\n                      }\n                    }}\n                  >\n                    Edit\n                  </span>\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </div>\n  </div>\n);\n","import { DisplayUsers } from \"../components/DisplayUsers/index\";\nimport React from \"react\";\nimport { deleteUser, deleteDebtMap, addUser } from \"../actions/actionDefs\";\nimport { checkForDebtInstance, orderEmails } from \"../utils\";\nimport { connect } from \"react-redux\";\nimport Modal from \"react-modal\";\n\nModal.setAppElement(\"#root\");\n\nclass AddUserContainer extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      modalIsOpen: false,\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      oldEmail: \"\",\n      editEmail: false\n    };\n\n    this.editUser = this.editUser.bind(this);\n    this.cancelEdit = this.cancelEdit.bind(this);\n    this.saveEdit = this.saveEdit.bind(this);\n  }\n\n  editUser(email, editEmail) {\n    this.setState({\n      modalIsOpen: true,\n      firstName: this.props.users[email].firstName,\n      lastName: this.props.users[email].lastName,\n      email: email,\n      oldEmail: email,\n      editEmail: editEmail\n    });\n  }\n\n  cancelEdit() {\n    this.setState({\n      modalIsOpen: false,\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      editEmail: false,\n      oldEmail: \"\"\n    });\n  }\n\n  saveEdit() {\n    this.setState({\n      modalIsOpen: false,\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      editEmail: false,\n      oldEmail: \"\"\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <DisplayUsers\n          users={this.props.users}\n          emails={this.props.emails}\n          debtList={this.props.debtList}\n          deleteUser={this.props.deleteUser}\n          deleteDebtMap={this.props.deleteDebtMap}\n          checkForDebtInstance={checkForDebtInstance}\n          editUser={this.editUser}\n          orderEmails={orderEmails}\n          modalIsOpen={this.state.modalIsOpen}\n          cancelEdit={this.cancelEdit}\n          editEmail={this.state.editEmail}\n          firstName={this.state.firstName}\n          lastName={this.state.lastName}\n          saveEdit={this.saveEdit}\n          email={this.state.email}\n          handleLastName={event =>\n            this.setState({ lastName: event.target.value })\n          }\n          handleFirstName={event =>\n            this.setState({ firstName: event.target.value })\n          }\n          handleEmail={event => this.setState({ email: event.target.value })}\n          addUser={this.props.addUser}\n          oldEmail={this.state.oldEmail}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  users: state.users,\n  emails: state.emails,\n  debtList: state.debtList\n});\n\nconst mapDispatchToProps = dispatch => ({\n  deleteUser: data => dispatch(deleteUser(data)),\n  deleteDebtMap: data => dispatch(deleteDebtMap(data)),\n  addUser: data => dispatch(addUser(data))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AddUserContainer);\n","import React from \"react\";\nimport AddUserContainer from \"./addUserContainer\";\nimport DisplayUsersContainer from \"./displayUsersContainer\";\n\nexport default class ManageUsersContainer extends React.Component {\n    render() {\n        return (\n          <div>\n            <AddUserContainer />\n            <DisplayUsersContainer />\n          </div>\n        );\n      }\n}","import React from \"react\";\nimport { getIdentifier } from \"../../utils\";\nimport \"./index.css\";\n\nconst defaultDebitor = \"Select the Debitor\";\nconst defaultCreditor = \"Select the Creditor\";\n\nexport const AddDebt = ({\n  emails,\n  users,\n  addDebt,\n  handleOwnerEmail,\n  handleSlaveEmail,\n  handleNotes,\n  handleAmount,\n  amount,\n  notes,\n  emailOne,\n  emailTwo\n}) => (\n  <div className=\"containers\">\n    <h2 className=\"titles\">Add Debt</h2>\n    <form>\n      <div>\n        <select\n          className=\"select-box\"\n          onChange={e => {\n            if (e.target.value !== defaultDebitor) {\n              handleOwnerEmail(e);\n            }\n          }}\n        >\n          <option>Select the Creditor</option>\n          {emails.map(email => {\n            return getIdentifier(email, users[email]);\n          })}\n        </select>\n      </div>\n      <div>\n        <select\n          className=\"select-box select-debitor\"\n          onChange={e => {\n            if (e.target.value !== defaultCreditor) {\n              handleSlaveEmail(e);\n            }\n          }}\n        >\n          <option>Select the Debitor</option>\n          {emails.map(email => {\n            return getIdentifier(email, users[email]);\n          })}\n        </select>\n      </div>\n\n      <h3>Amount</h3>\n      <input\n        type=\"text\"\n        name=\"amount\"\n        value={amount}\n        className=\"input-boxes\"\n        onChange={e => handleAmount(e)}\n      />\n\n      <h3>Notes</h3>\n      <input\n        type=\"text\"\n        name=\"notes\"\n        value={notes}\n        className=\"input-boxes\"\n        onChange={e => handleNotes(e)}\n      />\n      <div>\n        <input\n          type=\"button\"\n          value=\"Submit\"\n          className=\"submit-button\"\n          onClick={() => {\n            if (!emailTwo) {\n              alert(\"Second email either null or the same\");\n            } else {\n              addDebt({\n                userOne: emailOne ? emailOne : emails[0],\n                userTwo: emailTwo,\n                amount: amount,\n                notes: notes\n              });\n              alert(\"User Debt added\");\n            }\n          }}\n        />\n      </div>\n    </form>\n  </div>\n);\n","import { AddDebt } from \"../components/AddDebt/index\";\nimport { addDebt } from \"../actions/actionDefs\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\n\nclass AddDebtContainer extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      amount: \"\",\n      notes: \"\",\n      emailOne: \"\",\n      emailTwo: \"\"\n    };\n  }\n\n  render() {\n    return (\n      <AddDebt\n        emails={this.props.emails}\n        users={this.props.users}\n        notes={this.state.notes}\n        amount={this.state.amount}\n        emailOne={this.state.emailOne}\n        emailTwo={this.state.emailTwo}\n        addDebt={this.props.addDebt}\n        handleOwnerEmail={event =>\n          this.setState({ emailOne: event.target.value })\n        }\n        handleSlaveEmail={event =>\n          this.setState({ emailTwo: event.target.value })\n        }\n        handleNotes={event => this.setState({ notes: event.target.value })}\n        handleAmount={event => {\n          if (!isNaN(event.target.value)) {\n            this.setState({ amount: event.target.value });\n          }\n        }}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  emails: state.emails,\n  users: state.users\n});\n\nconst mapDispatchToProps = dispatch => ({\n  addDebt: data => dispatch(addDebt(data))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AddDebtContainer);\n","import React from \"react\";\nimport { getIdentifier } from \"../../utils\";\n\nexport const DisplayDebts = ({\n  handleOwnerEmail,\n  handleSlaveEmail,\n  setTotalDebtMapAmount,\n  setDebtMapData,\n  buildDebtMapTable,\n  emails,\n  users,\n  debtMap,\n  debtList,\n  ownerEmail,\n  slaveEmail,\n  debtMapData,\n  debtMapTotal,\n  allDebtsData,\n  allDebtsTotal,\n  handleSingleSlaveEmail,\n  singleSlaveEmail,\n  buildDebtsTable,\n  setDebtsData,\n  setTotalDebtsAmount,\n  handleSingleOwnerEmail,\n  setCreditsData,\n  singleOwnerEmail,\n  allCreditsTotal,\n  allCreditsData,\n  setTotalCreditsAmount,\n  buildCreditsTable,\n  setNumDebts,\n  setNumCredits\n}) => (\n  <div>\n    <form>\n      <span>slave</span>\n      <select onChange={e => handleSlaveEmail(e)}>\n        <option>--</option>\n        {emails.map(email => {\n          return getIdentifier(email, users[email]);\n        })}\n      </select>\n      <span>owner</span>\n      <select onChange={e => handleOwnerEmail(e)}>\n        <option>--</option>\n        {emails.map(email => {\n          return getIdentifier(email, users[email]);\n        })}\n      </select>\n      <input\n        type=\"button\"\n        value=\"Submit\"\n        className=\"submit-button\"\n        onClick={() => {\n          let data = null;\n          let amount = 0;\n          if (ownerEmail.localeCompare(slaveEmail) < 0) {\n            if (debtList.includes(ownerEmail + slaveEmail)) {\n              data = buildDebtMapTable(debtMap[ownerEmail + slaveEmail], -1);\n              amount =\n                debtMap[ownerEmail + slaveEmail].debts.reduce(\n                  (prev, curr) => prev + curr.amount,\n                  0\n                ) * -1;\n            }\n          } else {\n            if (debtList.includes(slaveEmail + ownerEmail)) {\n              data = buildDebtMapTable(debtMap[slaveEmail + ownerEmail], 1);\n              amount = debtMap[slaveEmail + ownerEmail].debts.reduce(\n                (prev, curr) => prev + curr.amount,\n                0\n              );\n            }\n          }\n          setTotalDebtMapAmount(amount);\n          setDebtMapData(data);\n        }}\n      />\n    </form>\n    <table>\n      <thead>\n        <tr>\n          <th>User One</th>\n          <th>User Two</th>\n          <th>Amount</th>\n          <th>Notes</th>\n          <th>Delete Debt</th>\n        </tr>\n      </thead>\n      <tbody>{debtMapData}</tbody>\n    </table>\n    <span>{debtMapTotal}</span>\n    <br />\n    <form>\n      <span>slave</span>\n      <select onChange={e => handleSingleSlaveEmail(e)}>\n        <option>--</option>\n        {emails.map(email => {\n          return getIdentifier(email, users[email]);\n        })}\n      </select>\n      <input\n        type=\"button\"\n        value=\"Submit\"\n        className=\"submit-button\"\n        onClick={() => {\n          let data = [];\n          let amount = 0;\n          let currAmount = 0;\n          let countDebts = 0;\n          emails.forEach(email => {\n            if (singleSlaveEmail.localeCompare(email) < 0) {\n              if (debtList.includes(singleSlaveEmail + email)) {\n                currAmount = debtMap[singleSlaveEmail + email].debts.reduce(\n                  (prev, curr) => prev + curr.amount,\n                  0\n                );\n                amount += currAmount;\n                countDebts++;\n                data.push(buildDebtsTable(email, singleSlaveEmail, currAmount));\n              }\n            } else {\n              if (debtList.includes(email + singleSlaveEmail)) {\n                currAmount =\n                  debtMap[email + singleSlaveEmail].debts.reduce(\n                    (prev, curr) => prev + curr.amount,\n                    0\n                  ) * -1;\n                amount += currAmount;\n                countDebts++;\n                data.push(buildDebtsTable(email, singleSlaveEmail, currAmount));\n              }\n            }\n          });\n          setNumDebts(countDebts);\n          if (amount > 0) {\n            setTotalDebtsAmount(amount);\n            setDebtsData(data);\n          } else {\n            setTotalDebtsAmount(0);\n            setDebtsData([]);\n          }\n        }}\n      />\n    </form>\n    <table>\n      <thead>\n        <tr>\n          <th>User One</th>\n          <th>User Two</th>\n          <th>Amount</th>\n          <th>Delete Debt</th>\n        </tr>\n      </thead>\n      <tbody>{allDebtsData}</tbody>\n    </table>\n    <span>{allDebtsTotal}</span>\n    <br />\n    <form>\n      <span>owner</span>\n      <select onChange={e => handleSingleOwnerEmail(e)}>\n        <option>--</option>\n        {emails.map(email => {\n          return getIdentifier(email, users[email]);\n        })}\n      </select>\n      <input\n        type=\"button\"\n        value=\"Submit\"\n        className=\"submit-button\"\n        onClick={() => {\n          let data = [];\n          let amount = 0;\n          let currAmount = 0;\n          let countCredits = 0;\n          emails.forEach(email => {\n            if (singleOwnerEmail.localeCompare(email) < 0) {\n              if (debtList.includes(singleOwnerEmail + email)) {\n                currAmount =\n                  debtMap[singleOwnerEmail + email].debts.reduce(\n                    (prev, curr) => prev + curr.amount,\n                    0\n                  ) * -1;\n                amount += currAmount;\n                countCredits++;\n                data.push(\n                  buildCreditsTable(singleOwnerEmail, email, currAmount)\n                );\n              }\n            } else {\n              if (debtList.includes(email + singleOwnerEmail)) {\n                currAmount = debtMap[email + singleOwnerEmail].debts.reduce(\n                  (prev, curr) => prev + curr.amount,\n                  0\n                );\n                amount += currAmount;\n                countCredits++;\n                data.push(\n                  buildCreditsTable(singleOwnerEmail, email, currAmount)\n                );\n              }\n            }\n          });\n          setNumCredits(countCredits);\n          if (amount > 0) {\n            setTotalCreditsAmount(amount);\n            setCreditsData(data);\n          } else {\n            setTotalCreditsAmount(0);\n            setCreditsData([]);\n          }\n        }}\n      />\n    </form>\n    <table>\n      <thead>\n        <tr>\n          <th>User One</th>\n          <th>User Two</th>\n          <th>Amount</th>\n          <th>Delete Debt</th>\n        </tr>\n      </thead>\n      <tbody>{allCreditsData}</tbody>\n    </table>\n    <span>{allCreditsTotal}</span>\n  </div>\n);\n","import { DisplayDebts } from \"../components/DisplayDebts/index\";\nimport { deleteDebtMap, deleteDebt } from \"../actions/actionDefs\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\n\nclass DisplayDebtsContainer extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      debtMapData: null,\n      ownerEmail: \"\",\n      slaveEmail: \"\",\n      singleSlaveEmail: \"\",\n      debtMapTotal: 0,\n      allDebtsData: null,\n      allDebtsTotal: 0,\n      singleOwnerEmail: \"\",\n      allCreditsTotal: 0,\n      allCreditsData: null,\n      numDebts: 0,\n      numCredits: 0\n    };\n\n    this.buildDebtMapTable = this.buildDebtMapTable.bind(this);\n    this.buildDebtsTable = this.buildDebtsTable.bind(this);\n    this.buildCreditsTable = this.buildCreditsTable.bind(this);\n  }\n\n  buildDebtsTable(ownerEmail, slaveEmail, amount) {\n    return (\n      <tr key={ownerEmail + slaveEmail + amount}>\n        <td>{slaveEmail}</td>\n        <td>{ownerEmail}</td>\n        <td>{amount}</td>\n        <td>\n          <button\n            onClick={() => {\n              this.props.deleteDebtMap({\n                ownerEmail: ownerEmail,\n                slaveEmail: slaveEmail\n              });\n              if (this.state.numDebts === 1) {\n                this.setState({\n                  numDebts: 0,\n                  allDebtsData: null,\n                  allDebtsTotal: 0\n                });\n              } else {\n                this.setState({ numDebts: this.state.numDebts - 1 });\n              }\n            }}\n          />\n        </td>\n      </tr>\n    );\n  }\n\n  buildCreditsTable(ownerEmail, slaveEmail, amount) {\n    return (\n      <tr key={ownerEmail + slaveEmail + amount}>\n        <td>{ownerEmail}</td>\n        <td>{slaveEmail}</td>\n        <td>{amount}</td>\n        <td>\n          <button\n            onClick={() => {\n              this.props.deleteDebtMap({\n                ownerEmail: ownerEmail,\n                slaveEmail: slaveEmail\n              });\n              if (this.state.numCredits === 1) {\n                this.setState({\n                  numCredits: 0,\n                  allCreditsData: null,\n                  allCreditsTotal: 0\n                });\n              } else {\n                this.setState({ numCredits: this.state.numCredits - 1 });\n              }\n            }}\n          />\n        </td>\n      </tr>\n    );\n  }\n\n  buildDebtMapTable(data, multiplier) {\n    if (multiplier === 1) {\n      return data.debts.map((debt, index) => {\n        return (\n          <tr key={index}>\n            <td>{debt.userIDOne}</td>\n            <td>{debt.userIDTwo}</td>\n            <td>{debt.amount}</td>\n            <td>{debt.notes}</td>\n            <td>\n              <button\n                onClick={() => {\n                  if (data.debts.length <= 1) {\n                    this.props.deleteDebtMap({\n                      ownerEmail: debt.userIDTwo,\n                      slaveEmail: debt.userIDOne\n                    });\n                    this.setState({\n                      debtMapData: null,\n                      debtMapTotal: 0\n                    });\n                  } else {\n                    this.props.deleteDebt({\n                      index: index,\n                      ownerEmail: debt.userIDTwo,\n                      slaveEmail: debt.userIDOne\n                    });\n                    let newTotal = this.state.debtMapTotal - debt.amount;\n                    let newData = data;\n                    newData.debts.splice(index, 1);\n                    this.setState({\n                      debtMapData: this.buildDebtMapTable(newData, multiplier),\n                      debtMapTotal: newTotal\n                    });\n                  }\n                }}\n              />\n            </td>\n          </tr>\n        );\n      });\n    } else {\n      return data.debts.map((debt, index) => {\n        return (\n          <tr key={index}>\n            <td>{debt.userIDTwo}</td>\n            <td>{debt.userIDOne}</td>\n            <td>{debt.amount * multiplier}</td>\n            <td>{debt.notes}</td>\n            <td>\n              <button\n                onClick={() => {\n                  if (data.debts.length <= 1) {\n                    this.props.deleteDebtMap({\n                      ownerEmail: debt.userIDTwo,\n                      slaveEmail: debt.userIDOne\n                    });\n                    this.setState({\n                      debtMapData: null,\n                      debtMapTotal: 0\n                    });\n                  } else {\n                    this.props.deleteDebt({\n                      index: index,\n                      ownerEmail: debt.userIDTwo,\n                      slaveEmail: debt.userIDOne\n                    });\n                    let newTotal = this.state.debtMapTotal + debt.amount;\n                    let newData = data;\n                    newData.debts.splice(index, 1);\n                    this.setState({\n                      debtMapData: this.buildDebtMapTable(newData, multiplier),\n                      debtMapTotal: newTotal\n                    });\n                  }\n                }}\n              />\n            </td>\n          </tr>\n        );\n      });\n    }\n  }\n\n  render() {\n    return (\n      <DisplayDebts\n        handleOwnerEmail={event =>\n          this.setState({ ownerEmail: event.target.value })\n        }\n        handleSlaveEmail={event =>\n          this.setState({ slaveEmail: event.target.value })\n        }\n        handleSingleSlaveEmail={event =>\n          this.setState({ singleSlaveEmail: event.target.value })\n        }\n        handleSingleOwnerEmail={event =>\n          this.setState({ singleOwnerEmail: event.target.value })\n        }\n        setTotalDebtMapAmount={debtMapTotal =>\n          this.setState({ debtMapTotal: debtMapTotal })\n        }\n        setDebtMapData={debtMapData =>\n          this.setState({ debtMapData: debtMapData })\n        }\n        setTotalDebtsAmount={allDebtsTotal =>\n          this.setState({ allDebtsTotal: allDebtsTotal })\n        }\n        setTotalCreditsAmount={allCreditsTotal =>\n          this.setState({ allCreditsTotal: allCreditsTotal })\n        }\n        setDebtsData={allDebtsData =>\n          this.setState({ allDebtsData: allDebtsData })\n        }\n        setCreditsData={allCreditsData =>\n          this.setState({ allCreditsData: allCreditsData })\n        }\n        setNumDebts={numDebts => this.setState({ numDebts: numDebts })}\n        setNumCredits={numCredits => this.setState({ numCredits: numCredits })}\n        buildDebtMapTable={this.buildDebtMapTable}\n        buildDebtsTable={this.buildDebtsTable}\n        buildCreditsTable={this.buildCreditsTable}\n        emails={this.props.emails}\n        users={this.props.users}\n        debtMap={this.props.debtMap}\n        debtList={this.props.debtList}\n        ownerEmail={this.state.ownerEmail}\n        slaveEmail={this.state.slaveEmail}\n        debtMapData={this.state.debtMapData}\n        debtMapTotal={this.state.debtMapTotal}\n        allDebtsData={this.state.allDebtsData}\n        allDebtsTotal={this.state.allDebtsTotal}\n        singleSlaveEmail={this.state.singleSlaveEmail}\n        singleOwnerEmail={this.state.singleOwnerEmail}\n        allCreditsTotal={this.state.allCreditsTotal}\n        allCreditsData={this.state.allCreditsData}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  emails: state.emails,\n  users: state.users,\n  debtMap: state.debtMap,\n  debtList: state.debtList\n});\n\nconst mapDispatchToProps = dispatch => ({\n  deleteDebtMap: data => dispatch(deleteDebtMap(data)),\n  deleteDebt: data => dispatch(deleteDebt(data))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(DisplayDebtsContainer);\n","import React from \"react\";\nimport AddDebtContainer from \"./addDebtContainer\";\nimport DisplayDebtsContainer from \"./displayDebtsContainer\";\n\nexport default class ManageDebtsContainer extends React.Component {\n  render() {\n    return (\n      <div>\n        <AddDebtContainer />\n        <DisplayDebtsContainer />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport \"./index.css\";\n\nexport const HomePage = () => (\n  <div className=\"container\">\n    <h3>Welcome to How Much Do I Owe You!</h3>\n    <p>\n      This app allows you to track purchaes you make for others and vice versa\n    </p>\n    <p>\n      To begin, go to the Manage Users page and add some users, then you can add\n      purchases on the Manage Debts page!\n    </p>\n    <p>As a side note, all data is stored in cookies, however, if you would like to get a actual copy of your data refer to the Manage Data page</p>\n  </div>\n);\n","import React from \"react\";\nimport { HomePage } from \"../components/HomePage/index\";\n\nexport default class HomePageContainer extends React.Component {\n  render() {\n    return (\n      <div>\n        <HomePage />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ManageDataContainer from \"./containers/manageDataContainer\";\nimport ManageUsersContainer from \"./containers/manageUsersContainer\";\nimport ManageDebtsContainer from \"./containers/manageDebtsContainer\";\nimport HomePageContainer from \"./containers/homePageContainer\";\nimport { HashRouter, Route, NavLink, Switch } from \"react-router-dom\";\nimport \"./App.css\";\n\nexport default class App extends React.Component {\n  render() {\n    return (\n      <div className=\"app-container\">\n        <h2 className=\"app-title\">How Much Do I Owe You?</h2>\n        <div className=\"main-content-wrapper\">\n          <HashRouter basename=\"/\">\n            <div>\n              <div className=\"nav\">\n                <NavLink\n                  className=\"non-selected-link\"\n                  activeClassName=\"selected\"\n                  exact\n                  to=\"/\"\n                >\n                  Home\n                </NavLink>\n\n                <NavLink\n                  className=\"non-selected-link\"\n                  activeClassName=\"selected\"\n                  exact\n                  to=\"/manageUsers\"\n                >\n                  Manage Users\n                </NavLink>\n\n                <NavLink\n                  className=\"non-selected-link\"\n                  activeClassName=\"selected\"\n                  exact\n                  to=\"/manageDebts\"\n                >\n                  Manage Debts\n                </NavLink>\n\n                <NavLink\n                  className=\"non-selected-link\"\n                  activeClassName=\"selected\"\n                  exact\n                  to=\"/manageData\"\n                >\n                  Manage Data\n                </NavLink>\n              </div>\n              <Switch>\n                <Route path=\"/manageDebts\" component={ManageDebtsContainer} />\n                <Route path=\"/manageUsers\" component={ManageUsersContainer} />\n                <Route path=\"/manageData\" component={ManageDataContainer} />\n                <Route path=\"/\" component={HomePageContainer} />\n              </Switch>\n            </div>\n          </HashRouter>\n        </div>\n      </div>\n    );\n  }\n}\n","import * as actionConst from \"../actions/action-constants\";\n\nimport { checkForDebtInstance } from \"../utils\";\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case actionConst.addDebtInstance: {\n      return {\n        ...state,\n        debtList: [...state.debtList, action.payload.key],\n        debtMap: {\n          ...state.debtMap,\n          [action.payload.key]: {\n            debts: action.payload.debts\n          }\n        }\n      };\n    }\n    case actionConst.deleteDebt: {\n      let id = action.payload.userIDOne + action.payload.userIDTwo;\n      return {\n        ...state,\n        debtMap: {\n          ...state.debtMap,\n          [id]: {\n            debts: [\n              ...state.debtMap[id].debts.slice(0, action.payload.index),\n              ...state.debtMap[id].debts.slice(action.payload.index + 1)\n            ]\n          }\n        }\n      };\n    }\n    case actionConst.deleteUser: {\n      let newUserMap = {};\n      state.emails.forEach(email => {\n        if (email !== action.payload.email) {\n          newUserMap[email] = state.users[email];\n        }\n      });\n      return {\n        ...state,\n        emails: state.emails.filter(email => email !== action.payload.email),\n        users: newUserMap\n      };\n    }\n    case actionConst.deleteDebtMap: {\n      let id = action.payload.userIDOne + action.payload.userIDTwo;\n      let newDebtMap = {};\n      state.debtList.forEach(debt => {\n        if (debt !== id) {\n          newDebtMap[debt] = state.debtMap[debt];\n        }\n      });\n      return {\n        ...state,\n        debtList: state.debtList.filter(debt => debt !== id),\n        debtMap: newDebtMap\n      };\n    }\n    case actionConst.clearData: {\n      return {\n        emails: [],\n        users: {},\n        debtMap: {},\n        debtList: []\n      };\n    }\n    case actionConst.addUser: {\n      return {\n        ...state,\n        emails: [...state.emails, action.email],\n        users: {\n          ...state.users,\n          [action.email]: action.payload\n        }\n      };\n    }\n    case actionConst.addDebt: {\n      let id = action.payload.userIDOne + action.payload.userIDTwo;\n\n      if (\n        checkForDebtInstance(\n          state.debtList,\n          action.payload.userIDOne,\n          action.payload.userIDTwo\n        )\n      ) {\n        return {\n          ...state,\n          debtMap: {\n            ...state.debtMap,\n            [id]: {\n              debts: [...state.debtMap[id].debts, action.payload]\n            }\n          }\n        };\n      } else {\n        return {\n          ...state,\n          debtList: [...state.debtList, id],\n          debtMap: {\n            ...state.debtMap,\n            [id]: {\n              debts: [action.payload]\n            }\n          }\n        };\n      }\n    }\n    default: {\n      return state;\n    }\n  }\n}\n\nexport default reducer;\n","import { createStore, applyMiddleware } from \"redux\";\nimport reducer from \"./reducers/reducer\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport reduxCookiesMiddleware from \"redux-cookies-middleware\";\nimport { getStateFromCookies } from \"redux-cookies-middleware\";\n\nconst defaultState = {\n  emails: [],\n  users: {},\n  debtMap: {},\n  debtList: []\n};\n\n\nconst cookiePaths = {\n    \"emails\": { name: \"HMDIOY_EMAILS\" },\n    \"users\": { name: \"HMDIOY_USERS\" },\n    \"debtMap\": { name: \"HMDIOY_DEBTMAP\" },\n    \"debtList\": { name: \"HMDIOY_DEBTLIST\" },\n}\n\nlet initialState = getStateFromCookies(defaultState, cookiePaths);\n\nif(!initialState.emails) {\n    initialState.emails = [];\n}\n\nif(!initialState.users) {\n    initialState.users = {};\n}\n\nif(!initialState.debtMap) {\n    initialState.debtMap = {};\n}\n\nif(!initialState.debtList) {\n    initialState.debtList = [];\n}\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(reduxCookiesMiddleware(cookiePaths)))\n);\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}