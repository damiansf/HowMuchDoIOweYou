{"version":3,"sources":["components/AddUser/index.js","actions/action-constants.js","containers/addUserContainer.js","actions/actionDefs.js","utils.js","components/AddDebt/index.js","containers/addDebtContainer.js","components/DisplayDebts/index.js","containers/displayDebtsContainer.js","components/DisplayUsers/index.js","containers/displayUsersContainer.js","components/ManageData/index.js","containers/manageDataContainer.js","App.js","reducers/reducer.js","store.js","index.js"],"names":["AddUser","_ref","handleFirstName","handleLastName","handleEmail","addUser","emails","firstName","lastName","email","react_default","a","createElement","type","name","value","onChange","e","onClick","includes","alert","addDebt","AddUserContainer","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","_this2","AddUser_AddUser","event","setState","target","props","React","Component","connect","dispatch","data","actionConst","payload","getIdentifier","user","key","AddDebt","users","handleOwnerEmail","handleSlaveEmail","handleNotes","handleAmount","amount","notes","emailOne","emailTwo","map","userOne","userTwo","AddDebtContainer","AddDebt_AddDebt","isNaN","multiplier","localeCompare","userIDOne","userIDTwo","DisplayDebts","setTotalDebtMapAmount","setDebtMapData","buildDebtMapTable","debtMap","debtList","ownerEmail","slaveEmail","debtMapData","debtMapTotal","allDebtsData","allDebtsTotal","handleSingleSlaveEmail","singleSlaveEmail","buildDebtsTable","setDebtsData","setTotalDebtsAmount","handleSingleOwnerEmail","setCreditsData","singleOwnerEmail","allCreditsTotal","allCreditsData","setTotalCreditsAmount","buildCreditsTable","debts","reduce","prev","curr","currAmount","forEach","push","DisplayDebtsContainer","bind","assertThisInitialized","debt","index","DisplayDebts_DisplayDebts","DisplayUsers","DisplayUsers_DisplayUsers","ManageData","objectDestructuringEmpty","ManageDataContainer","downloadData","uploadData","ManageData_ManageData","App","react_router_dom","basename","to","react_router","path","component","DisplayUsersContainer","reducer","action","objectSpread","concat","toConsumableArray","defineProperty","id","debtArray","idOne","idTwo","cookiePaths","initialState","getStateFromCookies","store","createStore","composeWithDevTools","applyMiddleware","reduxCookiesMiddleware","ReactDOM","render","es","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.ac2b15af.chunk.js","sourcesContent":["import React from \"react\";\n\nexport const AddUser = ({\n  handleFirstName,\n  handleLastName,\n  handleEmail,\n  addUser,\n  emails,\n  firstName,\n  lastName,\n  email\n}) => (\n  <form>\n    <label>\n      FirstName:\n      <input\n        type=\"text\"\n        name=\"firstName\"\n        value={firstName}\n        onChange={e => handleFirstName(e)}\n      />\n    </label>\n    <label>\n      LastName:\n      <input\n        type=\"text\"\n        name=\"lastName\"\n        value={lastName}\n        onChange={e => handleLastName(e)}\n      />\n    </label>\n    <label>\n      Email:\n      <input\n        type=\"text\"\n        name=\"email\"\n        value={email}\n        onChange={e => handleEmail(e)}\n      />\n    </label>\n    <input\n      type=\"button\"\n      value=\"Submit\"\n      onClick={() => {\n        if (!emails.includes(email)) {\n          addUser({\n            firstName: firstName,\n            lastName: lastName,\n            email: email\n          });\n          alert(\"User added\");\n        } else {\n          alert(\"User with same email already exists\");\n        }\n      }}\n    />\n  </form>\n);\n","export const addUser = \"ADD_USER\";\nexport const addDebt = \"ADD_DEBT\";","import { AddUser } from \"../components/AddUser/index\";\nimport { addUser } from \"../actions/actionDefs\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\n\nclass AddUserContainer extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\"\n    };\n  }\n\n  render() {\n    return (\n      <AddUser\n        email={this.state.email}\n        lastName={this.state.lastName}\n        firstName={this.state.firstName}\n        handleEmail={event => this.setState({ email: event.target.value })}\n        handleLastName={event =>\n          this.setState({ lastName: event.target.value })\n        }\n        handleFirstName={event =>\n          this.setState({ firstName: event.target.value })\n        }\n        emails={this.props.emails}\n        addUser={this.props.addUser}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  emails: state.emails\n});\n\nconst mapDispatchToProps = dispatch => ({\n  addUser: data => dispatch(addUser(data))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AddUserContainer);\n","import * as actionConst from \"./action-constants\";\n\nexport function addUser(data) {\n  return {\n    type: actionConst.addUser,\n    payload: {\n      firstName: data.firstName,\n      lastName: data.lastName,\n      email: data.email\n    },\n    email: data.email\n  };\n}\n\nexport function addDebt(data) {\n  let userOne = \"\";\n  let userTwo = \"\";\n  let multiplier = 1;\n\n  if (data.userOne.localeCompare(data.userTwo) < 0) {\n    userOne = data.userOne;    \n    userTwo = data.userTwo;\n    multiplier = -1;\n  } else {\n    userOne = data.userTwo;    \n    userTwo = data.userOne;        \n  }\n\n  return {\n    type: actionConst.addDebt,\n    payload: {\n      userIDOne: userOne,\n      userIDTwo: userTwo,\n      amount: data.amount * multiplier,\n      notes: data.notes\n    }\n  };\n}\n","import React from \"react\";\n\nexport function checkForDebtInstance(debtArray, idOne, idTwo) {\n  return debtArray.includes(idOne + idTwo);\n}\n\nexport function getIdentifier(email, user) {\n  return (\n    <option key={email} value={email}>\n      {user.firstName +\n        \" \" +\n        user.lastName +\n        \" (\" +\n        email +\n        \")\"}\n    </option>\n  );\n}\n","import React from \"react\";\nimport { getIdentifier } from \"../../utils\";\n\nexport const AddDebt = ({\n  emails,\n  users,\n  addDebt,\n  handleOwnerEmail,\n  handleSlaveEmail,\n  handleNotes,\n  handleAmount,\n  amount,\n  notes,\n  emailOne,\n  emailTwo\n}) => (\n  <form>\n    <span>owner</span>\n    <select onChange={e => handleOwnerEmail(e)}>\n      {emails.map(email => {\n        return getIdentifier(email, users[email]);\n      })}\n    </select>\n    <span>slave</span>\n    <select onChange={e => handleSlaveEmail(e)}>\n      {emails.map(email => {\n        return getIdentifier(email, users[email]);\n      })}\n    </select>\n    <label>\n      Amount:\n      <input\n        type=\"text\"\n        name=\"amount\"\n        value={amount}\n        onChange={e => handleAmount(e)}\n      />\n    </label>\n    <label>\n      Notes:\n      <input\n        type=\"text\"\n        name=\"notes\"\n        value={notes}\n        onChange={e => handleNotes(e)}\n      />\n    </label>\n    <input\n      type=\"button\"\n      value=\"Submit\"\n      onClick={() => {\n        if (!emailTwo) {\n          alert(\"Second email either null or the same\");\n        } else {\n          addDebt({\n            userOne: emailOne ? emailOne : emails[0],\n            userTwo: emailTwo,\n            amount: amount,\n            notes: notes\n          });\n          alert(\"User Debt added\");\n        }\n      }}\n    />\n  </form>\n);\n","import { AddDebt } from \"../components/AddDebt/index\";\nimport { addDebt } from \"../actions/actionDefs\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\n\nclass AddDebtContainer extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      amount: \"\",\n      notes: \"\",\n      emailOne: \"\",\n      emailTwo: \"\"\n    };\n  }\n\n  render() {\n    return (\n      <AddDebt\n        emails={this.props.emails}\n        users={this.props.users}\n        notes={this.state.notes}\n        amount={this.state.amount}\n        emailOne={this.state.emailOne}\n        emailTwo={this.state.emailTwo}\n        addDebt={this.props.addDebt}\n        handleOwnerEmail={event =>\n          this.setState({ emailOne: event.target.value })\n        }\n        handleSlaveEmail={event =>\n          this.setState({ emailTwo: event.target.value })\n        }\n        handleNotes={event => this.setState({ notes: event.target.value })}\n        handleAmount={event => {\n          if (!isNaN(event.target.value)) {\n            this.setState({ amount: event.target.value });\n          }\n        }}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  emails: state.emails,\n  users: state.users\n});\n\nconst mapDispatchToProps = dispatch => ({\n  addDebt: data => dispatch(addDebt(data))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AddDebtContainer);\n","import React from \"react\";\nimport { getIdentifier } from \"../../utils\";\n\nexport const DisplayDebts = ({\n  handleOwnerEmail,\n  handleSlaveEmail,\n  setTotalDebtMapAmount,\n  setDebtMapData,\n  buildDebtMapTable,\n  emails,\n  users,\n  debtMap,\n  debtList,\n  ownerEmail,\n  slaveEmail,\n  debtMapData,\n  debtMapTotal,\n  allDebtsData,\n  allDebtsTotal,\n  handleSingleSlaveEmail,\n  singleSlaveEmail,\n  buildDebtsTable,\n  setDebtsData,\n  setTotalDebtsAmount,\n  handleSingleOwnerEmail,\n  setCreditsData,\n  singleOwnerEmail,\n  allCreditsTotal,\n  allCreditsData,\n  setTotalCreditsAmount,\n  buildCreditsTable\n}) => (\n  <div>\n    <form>\n      <span>slave</span>\n      <select onChange={e => handleSlaveEmail(e)}>\n        <option>--</option>\n        {emails.map(email => {\n          return getIdentifier(email, users[email]);\n        })}\n      </select>\n      <span>owner</span>\n      <select onChange={e => handleOwnerEmail(e)}>\n        <option>--</option>\n        {emails.map(email => {\n          return getIdentifier(email, users[email]);\n        })}\n      </select>\n      <input\n        type=\"button\"\n        value=\"Submit\"\n        onClick={() => {\n          let data = null;\n          let amount = 0;\n          if (ownerEmail.localeCompare(slaveEmail) < 0) {\n            if (debtList.includes(ownerEmail + slaveEmail)) {\n              data = buildDebtMapTable(debtMap[ownerEmail + slaveEmail], -1);\n              amount =\n                debtMap[ownerEmail + slaveEmail].debts.reduce(\n                  (prev, curr) => prev + curr.amount,\n                  0\n                ) * -1;\n              setTotalDebtMapAmount(amount);\n              setDebtMapData(data);\n            }\n          } else {\n            if (debtList.includes(slaveEmail + ownerEmail)) {\n              data = buildDebtMapTable(debtMap[slaveEmail + ownerEmail], 1);\n              amount = debtMap[slaveEmail + ownerEmail].debts.reduce(\n                (prev, curr) => prev + curr.amount,\n                0\n              );\n              setTotalDebtMapAmount(amount);\n              setDebtMapData(data);\n            }\n          }\n        }}\n      />\n    </form>\n    <table>\n      <thead>\n        <tr>\n          <th>User One</th>\n          <th>User Two</th>\n          <th>Amount</th>\n          <th>Notes</th>\n          <th>Delete Debt</th>\n        </tr>\n      </thead>\n      <tbody>{debtMapData}</tbody>\n    </table>\n    <span>{debtMapTotal}</span>\n    <br />\n    <form>\n      <span>slave</span>\n      <select onChange={e => handleSingleSlaveEmail(e)}>\n        <option>--</option>\n        {emails.map(email => {\n          return getIdentifier(email, users[email]);\n        })}\n      </select>\n      <input\n        type=\"button\"\n        value=\"Submit\"\n        onClick={() => {\n          let data = [];\n          let amount = 0;\n          let currAmount = 0;\n          emails.forEach(email => {\n            if (singleSlaveEmail.localeCompare(email) < 0) {\n              if (debtList.includes(singleSlaveEmail + email)) {\n                currAmount = debtMap[singleSlaveEmail + email].debts.reduce(\n                  (prev, curr) => prev + curr.amount,\n                  0\n                );\n                amount += currAmount;\n                data.push(buildDebtsTable(email, singleSlaveEmail, currAmount));\n              }\n            } else {\n              if (debtList.includes(email + singleSlaveEmail)) {\n                currAmount =\n                  debtMap[email + singleSlaveEmail].debts.reduce(\n                    (prev, curr) => prev + curr.amount,\n                    0\n                  ) * -1;\n                amount += currAmount;\n                data.push(buildDebtsTable(email, singleSlaveEmail, currAmount));\n              }\n            }\n          });\n          if (amount > 0) {\n            setTotalDebtsAmount(amount);\n            setDebtsData(data);\n          } else {\n            setTotalDebtsAmount(0);\n            setDebtsData([]);\n          }\n        }}\n      />\n    </form>\n    <table>\n      <thead>\n        <tr>\n          <th>User One</th>\n          <th>User Two</th>\n          <th>Amount</th>\n          <th>Delete Debt</th>\n        </tr>\n      </thead>\n      <tbody>{allDebtsData}</tbody>\n    </table>\n    <span>{allDebtsTotal}</span>\n    <br />\n    <form>\n      <span>owner</span>\n      <select onChange={e => handleSingleOwnerEmail(e)}>\n        <option>--</option>\n        {emails.map(email => {\n          return getIdentifier(email, users[email]);\n        })}\n      </select>\n      <input\n        type=\"button\"\n        value=\"Submit\"\n        onClick={() => {\n          let data = [];\n          let amount = 0;\n          let currAmount = 0;\n          emails.forEach(email => {\n            if (singleOwnerEmail.localeCompare(email) < 0) {\n              if (debtList.includes(singleOwnerEmail + email)) {\n                currAmount =\n                  debtMap[singleOwnerEmail + email].debts.reduce(\n                    (prev, curr) => prev + curr.amount,\n                    0\n                  ) * -1;\n                amount += currAmount;\n                data.push(\n                  buildCreditsTable(singleOwnerEmail, email, currAmount)\n                );\n              }\n            } else {\n              if (debtList.includes(email + singleOwnerEmail)) {\n                currAmount = debtMap[email + singleOwnerEmail].debts.reduce(\n                  (prev, curr) => prev + curr.amount,\n                  0\n                );\n                amount += currAmount;\n                data.push(\n                  buildCreditsTable(singleOwnerEmail, email, currAmount)\n                );\n              }\n            }\n          });\n          if (amount > 0) {\n            setTotalCreditsAmount(amount);\n            setCreditsData(data);\n          } else {\n            setTotalCreditsAmount(0);\n            setCreditsData([]);\n          }\n        }}\n      />\n    </form>\n    <table>\n      <thead>\n        <tr>\n          <th>User One</th>\n          <th>User Two</th>\n          <th>Amount</th>\n          <th>Delete Debt</th>\n        </tr>\n      </thead>\n      <tbody>{allCreditsData}</tbody>\n    </table>\n    <span>{allCreditsTotal}</span>\n  </div>\n);\n","import { DisplayDebts } from \"../components/DisplayDebts/index\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\n\nclass DisplayDebtsContainer extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      debtMapData: null,\n      ownerEmail: \"\",\n      slaveEmail: \"\",\n      singleSlaveEmail: \"\",\n      debtMapTotal: 0,\n      allDebtsData: null,\n      allDebtsTotal: 0,\n      singleOwnerEmail: \"\",\n      allCreditsTotal: 0,\n      allCreditsData: null\n    };\n\n    this.buildDebtMapTable = this.buildDebtMapTable.bind(this);\n    this.buildDebtsTable = this.buildDebtsTable.bind(this);\n    this.buildCreditsTable = this.buildCreditsTable.bind(this);\n  }\n\n  buildDebtsTable(ownerEmail, slaveEmail, amount) {\n    return (\n      <tr key={ownerEmail + slaveEmail + amount}>\n        <td>{slaveEmail}</td>\n        <td>{ownerEmail}</td>\n        <td>{amount}</td>\n        <td>\n          <button />\n        </td>\n      </tr>\n    );\n  }\n\n  buildCreditsTable(ownerEmail, slaveEmail, amount) {\n    return (\n      <tr key={ownerEmail + slaveEmail + amount}>\n        <td>{ownerEmail}</td>\n        <td>{slaveEmail}</td>\n        <td>{amount}</td>\n        <td>\n          <button />\n        </td>\n      </tr>\n    );\n  }\n\n  buildDebtMapTable(data, multiplier) {\n    if (multiplier === 1) {\n      return data.debts.map((debt, index) => {\n        return (\n          <tr key={index}>\n            <td>{debt.userIDOne}</td>\n            <td>{debt.userIDTwo}</td>\n            <td>{debt.amount}</td>\n            <td>{debt.notes}</td>\n            <td>\n              <button />\n            </td>\n          </tr>\n        );\n      });\n    } else {\n      return data.debts.map((debt, index) => {\n        return (\n          <tr key={index}>\n            <td>{debt.userIDTwo}</td>\n            <td>{debt.userIDOne}</td>\n            <td>{debt.amount * multiplier}</td>\n            <td>{debt.notes}</td>\n            <td>\n              <button />\n            </td>\n          </tr>\n        );\n      });\n    }\n  }\n\n  render() {\n    return (\n      <DisplayDebts\n        handleOwnerEmail={event =>\n          this.setState({ ownerEmail: event.target.value })\n        }\n        handleSlaveEmail={event =>\n          this.setState({ slaveEmail: event.target.value })\n        }\n        handleSingleSlaveEmail={event =>\n          this.setState({ singleSlaveEmail: event.target.value })\n        }\n        handleSingleOwnerEmail={event =>\n          this.setState({ singleOwnerEmail: event.target.value })\n        }\n        setTotalDebtMapAmount={debtMapTotal =>\n          this.setState({ debtMapTotal: debtMapTotal })\n        }\n        setDebtMapData={debtMapData =>\n          this.setState({ debtMapData: debtMapData })\n        }\n        setTotalDebtsAmount={allDebtsTotal =>\n          this.setState({ allDebtsTotal: allDebtsTotal })\n        }\n        setTotalCreditsAmount={allCreditsTotal =>\n          this.setState({ allCreditsTotal: allCreditsTotal })\n        }\n        setDebtsData={allDebtsData =>\n          this.setState({ allDebtsData: allDebtsData })\n        }\n        setCreditsData={allCreditsData =>\n          this.setState({ allCreditsData: allCreditsData })\n        }\n        buildDebtMapTable={this.buildDebtMapTable}\n        buildDebtsTable={this.buildDebtsTable}\n        buildCreditsTable={this.buildCreditsTable}\n        emails={this.props.emails}\n        users={this.props.users}\n        debtMap={this.props.debtMap}\n        debtList={this.props.debtList}\n        ownerEmail={this.state.ownerEmail}\n        slaveEmail={this.state.slaveEmail}\n        debtMapData={this.state.debtMapData}\n        debtMapTotal={this.state.debtMapTotal}\n        allDebtsData={this.state.allDebtsData}\n        allDebtsTotal={this.state.allDebtsTotal}\n        singleSlaveEmail={this.state.singleSlaveEmail}\n        singleOwnerEmail={this.state.singleOwnerEmail}\n        allCreditsTotal={this.state.allCreditsTotal}\n        allCreditsData={this.state.allCreditsData}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  emails: state.emails,\n  users: state.users,\n  debtMap: state.debtMap,\n  debtList: state.debtList\n});\n\nexport default connect(\n  mapStateToProps,\n  null\n)(DisplayDebtsContainer);\n","import React from \"react\";\n\nexport const DisplayUsers = ({ users, emails }) => (\n  <table>\n    <thead>\n      <tr>\n        <th>First Name</th>\n        <th>Last Name</th>\n        <th>Email</th>\n      </tr>\n    </thead>\n    <tbody>\n      {emails.map(email => {\n        return (\n          <tr key={users[email].email}>\n            <td>{users[email].firstName}</td>\n            <td>{users[email].lastName}</td>\n            <td>{users[email].email}</td>\n            <td>\n              <button />\n            </td>\n          </tr>\n        );\n      })}\n    </tbody>\n  </table>\n);\n","import { DisplayUsers } from \"../components/DisplayUsers/index\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\n\nclass AddUserContainer extends React.Component {\n  render() {\n    return <DisplayUsers users={this.props.users} emails={this.props.emails} />;\n  }\n}\n\nconst mapStateToProps = state => ({\n  users: state.users,\n  emails: state.emails\n});\n\nexport default connect(\n  mapStateToProps,\n  null\n)(AddUserContainer);\n","import React from \"react\";\n\nexport const ManageData = ({  }) => (\n  <div>\n    <button>Download Data</button>\n    <button>Upload Data</button>\n    <button>Clear Data</button>\n  </div>\n);\n","import { ManageData } from \"../components/ManageData/index\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\n\nclass ManageDataContainer extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {};\n\n    this.downloadData = this.downloadData.bind(this);\n    this.uploadData = this.uploadData.bind(this);\n  }\n\n  downloadData() {}\n\n  uploadData() {}\n\n  render() {\n    return (\n      <ManageData></ManageData>\n    );\n  }\n}\n  \n  export default connect(\n    null,\n    null\n  )(ManageDataContainer);\n","import React from \"react\";\nimport AddUserContainer from \"./containers/addUserContainer\";\nimport AddDebtContainer from \"./containers/addDebtContainer\";\nimport DisplayDebtsContainer from \"./containers/displayDebtsContainer\";\nimport DisplayUsersContainer from \"./containers/displayUsersContainer\";\nimport ManageDataContainer from \"./containers/manageDataContainer\";\nimport { HashRouter, Route, Link } from \"react-router-dom\";\n\nexport default class App extends React.Component {\n  render() {\n    return (\n      <div>\n        <header>\n          <p>How Much Do I Owe You?</p>\n        </header>\n        <HashRouter basename=\"/\">\n          <div>\n            <ul>\n              <li>\n                <Link to=\"/\">Home</Link>\n              </li>\n              <li>\n                <Link to=\"/addUser\">Add User</Link>\n              </li>\n              <li>\n                <Link to=\"/addDebt\">Add Debt</Link>\n              </li>\n              <li>\n                <Link to=\"/displayDebts\">Display Debts</Link>\n              </li>\n              <li>\n                <Link to=\"/displayUsers\">Display Users</Link>\n              </li>\n              <li>\n                <Link to=\"/manageData\">Manage Data</Link>\n              </li>\n            </ul>\n            <Route path=\"/addUser\" component={AddUserContainer} />\n            <Route path=\"/addDebt\" component={AddDebtContainer} />\n            <Route path=\"/displayDebts\" component={DisplayDebtsContainer} />\n            <Route path=\"/displayUsers\" component={DisplayUsersContainer} />\n            <Route path=\"/manageData\" component={ManageDataContainer} />\n          </div>\n        </HashRouter>\n      </div>\n    );\n  }\n}\n","import * as actionConst from \"../actions/action-constants\";\n\nimport { checkForDebtInstance } from \"../utils\";\n\nfunction reducer(state , action) {\n  switch (action.type) {\n    case actionConst.addUser: {\n      return {\n        ...state,\n        emails: [...state.emails, action.email],\n        users: {\n          ...state.users,\n          [action.email]: action.payload\n        }\n      };\n    }\n    case actionConst.addDebt: {\n      let id = action.payload.userIDOne + action.payload.userIDTwo;\n\n      if (\n        checkForDebtInstance(\n          state.debtList,\n          action.payload.userIDOne,\n          action.payload.userIDTwo\n        )\n      ) {\n        return {\n          ...state,\n          debtMap: {\n            ...state.debtMap,\n            [id]: {\n              debts: [...state.debtMap[id].debts, action.payload]\n            }\n          }\n        };\n      } else {\n        return {\n          ...state,\n          debtList: [...state.debtList, id],\n          debtMap: {\n            ...state.debtMap,\n            [id]: {\n              debts: [action.payload]\n            }\n          }\n        };\n      }\n    }\n    default: {\n      return state;\n    }\n  }\n}\n\nexport default reducer;\n","import { createStore, applyMiddleware } from \"redux\";\nimport reducer from \"./reducers/reducer\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport reduxCookiesMiddleware from \"redux-cookies-middleware\";\nimport { getStateFromCookies } from \"redux-cookies-middleware\";\n\nconst defaultState = {\n  emails: [],\n  users: {},\n  debtMap: {},\n  debtList: []\n};\n\n\nconst cookiePaths = {\n    \"emails\": { name: \"HMDIOY_EMAILS\" },\n    \"users\": { name: \"HMDIOY_USERS\" },\n    \"debtMap\": { name: \"HMDIOY_DEBTMAP\" },\n    \"debtList\": { name: \"HMDIOY_DEBTLIST\" },\n}\n\nlet initialState = getStateFromCookies(defaultState, cookiePaths);\n\nif(!initialState.emails) {\n    initialState.emails = [];\n}\n\nif(!initialState.users) {\n    initialState.users = {};\n}\n\nif(!initialState.debtMap) {\n    initialState.debtMap = {};\n}\n\nif(!initialState.debtList) {\n    initialState.debtList = [];\n}\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(reduxCookiesMiddleware(cookiePaths)))\n);\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}