{"version":3,"sources":["components/AddUser/index.js","actions/action-constants.js","actions/actionDefs.js","containers/addUserContainer.js","utils.js","components/AddDebt/index.js","containers/addDebtContainer.js","components/DisplayDebts/index.js","containers/displayDebtsContainer.js","components/DisplayUsers/index.js","containers/displayUsersContainer.js","components/ManageData/index.js","containers/manageDataContainer.js","App.js","reducers/reducer.js","store.js","index.js"],"names":["AddUser","_ref","handleFirstName","handleLastName","handleEmail","addUser","emails","firstName","lastName","email","react_default","a","createElement","type","name","value","onChange","e","onClick","includes","alert","addDebt","clearData","deleteDebt","deleteUser","deleteDebtMap","data","userOne","userTwo","ownerEmail","localeCompare","slaveEmail","actionConst","payload","userIDOne","userIDTwo","AddUserContainer","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","_this2","AddUser_AddUser","event","setState","target","props","React","Component","connect","dispatch","checkForDebtInstance","debtArray","idOne","idTwo","getIdentifier","user","key","AddDebt","users","handleOwnerEmail","handleSlaveEmail","handleNotes","handleAmount","amount","notes","emailOne","emailTwo","map","AddDebtContainer","AddDebt_AddDebt","isNaN","multiplier","DisplayDebts","setTotalDebtMapAmount","setDebtMapData","buildDebtMapTable","debtMap","debtList","debtMapData","debtMapTotal","allDebtsData","allDebtsTotal","handleSingleSlaveEmail","singleSlaveEmail","buildDebtsTable","setDebtsData","setTotalDebtsAmount","handleSingleOwnerEmail","setCreditsData","singleOwnerEmail","allCreditsTotal","allCreditsData","setTotalCreditsAmount","buildCreditsTable","debts","reduce","prev","curr","currAmount","forEach","push","DisplayDebtsContainer","bind","assertThisInitialized","_this3","_this4","debt","index","length","_this5","DisplayDebts_DisplayDebts","DisplayUsers","DisplayUsers_DisplayUsers","ManageData","ManageDataContainer","downloadData","uploadData","ManageData_ManageData","App","react_router_dom","basename","to","react_router","path","component","DisplayUsersContainer","reducer","action","id","objectSpread","defineProperty","concat","toConsumableArray","slice","newUserMap","filter","newDebtMap","cookiePaths","initialState","getStateFromCookies","store","createStore","composeWithDevTools","applyMiddleware","reduxCookiesMiddleware","ReactDOM","render","es","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.507af6b3.chunk.js","sourcesContent":["import React from \"react\";\n\nexport const AddUser = ({\n  handleFirstName,\n  handleLastName,\n  handleEmail,\n  addUser,\n  emails,\n  firstName,\n  lastName,\n  email\n}) => (\n  <form>\n    <label>\n      FirstName:\n      <input\n        type=\"text\"\n        name=\"firstName\"\n        value={firstName}\n        onChange={e => handleFirstName(e)}\n      />\n    </label>\n    <label>\n      LastName:\n      <input\n        type=\"text\"\n        name=\"lastName\"\n        value={lastName}\n        onChange={e => handleLastName(e)}\n      />\n    </label>\n    <label>\n      Email:\n      <input\n        type=\"text\"\n        name=\"email\"\n        value={email}\n        onChange={e => handleEmail(e)}\n      />\n    </label>\n    <input\n      type=\"button\"\n      value=\"Submit\"\n      onClick={() => {\n        if (!emails.includes(email)) {\n          addUser({\n            firstName: firstName,\n            lastName: lastName,\n            email: email\n          });\n          alert(\"User added\");\n        } else {\n          alert(\"User with same email already exists\");\n        }\n      }}\n    />\n  </form>\n);\n","export const addUser = \"ADD_USER\";\nexport const addDebt = \"ADD_DEBT\";\nexport const clearData = \"CLEAR_DATA\";\nexport const deleteDebt = \"DELETE_DEBT\";\nexport const deleteUser = \"DELETE_USER\";\nexport const deleteDebtMap = \"DELETE_DEBT_MAP\";","import * as actionConst from \"./action-constants\";\n\nexport function addUser(data) {\n  return {\n    type: actionConst.addUser,\n    payload: {\n      firstName: data.firstName,\n      lastName: data.lastName,\n      email: data.email\n    },\n    email: data.email\n  };\n}\n\nexport function clearData() {\n  return {\n    type: actionConst.clearData\n  };\n}\n\nexport function deleteDebt(data) {\n  let userOne = \"\";\n  let userTwo = \"\";\n\n  if (data.ownerEmail.localeCompare(data.slaveEmail) < 0) {\n    userOne = data.ownerEmail;\n    userTwo = data.slaveEmail;\n  } else {\n    userOne = data.slaveEmail;\n    userTwo = data.ownerEmail;\n  }\n\n  return {\n    type: actionConst.deleteDebt,\n    payload: { userIDOne: userOne, userIDTwo: userTwo, index: data.index }\n  };\n}\n\nexport function deleteUser(data) {\n  return {\n    type: actionConst.deleteUser,\n    payload: {\n      email: data.email\n    }\n  };\n}\n\nexport function deleteDebtMap(data) {\n  let userOne = \"\";\n  let userTwo = \"\";\n\n  if (data.ownerEmail.localeCompare(data.slaveEmail) < 0) {\n    userOne = data.ownerEmail;\n    userTwo = data.slaveEmail;\n  } else {\n    userOne = data.slaveEmail;\n    userTwo = data.ownerEmail;\n  }\n\n  return {\n    type: actionConst.deleteDebtMap,\n    payload: { userIDOne: userOne, userIDTwo: userTwo }\n  };\n}\n\nexport function addDebt(data) {\n  let userOne = \"\";\n  let userTwo = \"\";\n  let multiplier = 1;\n\n  if (data.userOne.localeCompare(data.userTwo) < 0) {\n    userOne = data.userOne;\n    userTwo = data.userTwo;\n    multiplier = -1;\n  } else {\n    userOne = data.userTwo;\n    userTwo = data.userOne;\n  }\n\n  return {\n    type: actionConst.addDebt,\n    payload: {\n      userIDOne: userOne,\n      userIDTwo: userTwo,\n      amount: data.amount * multiplier,\n      notes: data.notes\n    }\n  };\n}\n","import { AddUser } from \"../components/AddUser/index\";\nimport { addUser } from \"../actions/actionDefs\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\n\nclass AddUserContainer extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\"\n    };\n  }\n\n  render() {\n    return (\n      <AddUser\n        email={this.state.email}\n        lastName={this.state.lastName}\n        firstName={this.state.firstName}\n        handleEmail={event => this.setState({ email: event.target.value })}\n        handleLastName={event =>\n          this.setState({ lastName: event.target.value })\n        }\n        handleFirstName={event =>\n          this.setState({ firstName: event.target.value })\n        }\n        emails={this.props.emails}\n        addUser={this.props.addUser}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  emails: state.emails\n});\n\nconst mapDispatchToProps = dispatch => ({\n  addUser: data => dispatch(addUser(data))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AddUserContainer);\n","import React from \"react\";\n\nexport function checkForDebtInstance(debtArray, idOne, idTwo) {\n  return debtArray.includes(idOne + idTwo);\n}\n\nexport function getIdentifier(email, user) {\n  return (\n    <option key={email} value={email}>\n      {user.firstName +\n        \" \" +\n        user.lastName +\n        \" (\" +\n        email +\n        \")\"}\n    </option>\n  );\n}\n","import React from \"react\";\nimport { getIdentifier } from \"../../utils\";\n\nexport const AddDebt = ({\n  emails,\n  users,\n  addDebt,\n  handleOwnerEmail,\n  handleSlaveEmail,\n  handleNotes,\n  handleAmount,\n  amount,\n  notes,\n  emailOne,\n  emailTwo\n}) => (\n  <form>\n    <span>owner</span>\n    <select onChange={e => handleOwnerEmail(e)}>\n      <option>--</option>\n      {emails.map(email => {\n        return getIdentifier(email, users[email]);\n      })}\n    </select>\n    <span>slave</span>\n    <select onChange={e => handleSlaveEmail(e)}>\n      <option>--</option>\n      {emails.map(email => {\n        return getIdentifier(email, users[email]);\n      })}\n    </select>\n    <label>\n      Amount:\n      <input\n        type=\"text\"\n        name=\"amount\"\n        value={amount}\n        onChange={e => handleAmount(e)}\n      />\n    </label>\n    <label>\n      Notes:\n      <input\n        type=\"text\"\n        name=\"notes\"\n        value={notes}\n        onChange={e => handleNotes(e)}\n      />\n    </label>\n    <input\n      type=\"button\"\n      value=\"Submit\"\n      onClick={() => {\n        if (!emailTwo) {\n          alert(\"Second email either null or the same\");\n        } else {\n          addDebt({\n            userOne: emailOne ? emailOne : emails[0],\n            userTwo: emailTwo,\n            amount: amount,\n            notes: notes\n          });\n          alert(\"User Debt added\");\n        }\n      }}\n    />\n  </form>\n);\n","import { AddDebt } from \"../components/AddDebt/index\";\nimport { addDebt } from \"../actions/actionDefs\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\n\nclass AddDebtContainer extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      amount: \"\",\n      notes: \"\",\n      emailOne: \"\",\n      emailTwo: \"\"\n    };\n  }\n\n  render() {\n    return (\n      <AddDebt\n        emails={this.props.emails}\n        users={this.props.users}\n        notes={this.state.notes}\n        amount={this.state.amount}\n        emailOne={this.state.emailOne}\n        emailTwo={this.state.emailTwo}\n        addDebt={this.props.addDebt}\n        handleOwnerEmail={event =>\n          this.setState({ emailOne: event.target.value })\n        }\n        handleSlaveEmail={event =>\n          this.setState({ emailTwo: event.target.value })\n        }\n        handleNotes={event => this.setState({ notes: event.target.value })}\n        handleAmount={event => {\n          if (!isNaN(event.target.value)) {\n            this.setState({ amount: event.target.value });\n          }\n        }}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  emails: state.emails,\n  users: state.users\n});\n\nconst mapDispatchToProps = dispatch => ({\n  addDebt: data => dispatch(addDebt(data))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AddDebtContainer);\n","import React from \"react\";\nimport { getIdentifier } from \"../../utils\";\n\nexport const DisplayDebts = ({\n  handleOwnerEmail,\n  handleSlaveEmail,\n  setTotalDebtMapAmount,\n  setDebtMapData,\n  buildDebtMapTable,\n  emails,\n  users,\n  debtMap,\n  debtList,\n  ownerEmail,\n  slaveEmail,\n  debtMapData,\n  debtMapTotal,\n  allDebtsData,\n  allDebtsTotal,\n  handleSingleSlaveEmail,\n  singleSlaveEmail,\n  buildDebtsTable,\n  setDebtsData,\n  setTotalDebtsAmount,\n  handleSingleOwnerEmail,\n  setCreditsData,\n  singleOwnerEmail,\n  allCreditsTotal,\n  allCreditsData,\n  setTotalCreditsAmount,\n  buildCreditsTable\n}) => (\n  <div>\n    <form>\n      <span>slave</span>\n      <select onChange={e => handleSlaveEmail(e)}>\n        <option>--</option>\n        {emails.map(email => {\n          return getIdentifier(email, users[email]);\n        })}\n      </select>\n      <span>owner</span>\n      <select onChange={e => handleOwnerEmail(e)}>\n        <option>--</option>\n        {emails.map(email => {\n          return getIdentifier(email, users[email]);\n        })}\n      </select>\n      <input\n        type=\"button\"\n        value=\"Submit\"\n        onClick={() => {\n          let data = null;\n          let amount = 0;\n          if (ownerEmail.localeCompare(slaveEmail) < 0) {\n            if (debtList.includes(ownerEmail + slaveEmail)) {\n              data = buildDebtMapTable(debtMap[ownerEmail + slaveEmail], -1);\n              amount =\n                debtMap[ownerEmail + slaveEmail].debts.reduce(\n                  (prev, curr) => prev + curr.amount,\n                  0\n                ) * -1;\n              setTotalDebtMapAmount(amount);\n              setDebtMapData(data);\n            }\n          } else {\n            if (debtList.includes(slaveEmail + ownerEmail)) {\n              data = buildDebtMapTable(debtMap[slaveEmail + ownerEmail], 1);\n              amount = debtMap[slaveEmail + ownerEmail].debts.reduce(\n                (prev, curr) => prev + curr.amount,\n                0\n              );\n              setTotalDebtMapAmount(amount);\n              setDebtMapData(data);\n            }\n          }\n        }}\n      />\n    </form>\n    <table>\n      <thead>\n        <tr>\n          <th>User One</th>\n          <th>User Two</th>\n          <th>Amount</th>\n          <th>Notes</th>\n          <th>Delete Debt</th>\n        </tr>\n      </thead>\n      <tbody>{debtMapData}</tbody>\n    </table>\n    <span>{debtMapTotal}</span>\n    <br />\n    <form>\n      <span>slave</span>\n      <select onChange={e => handleSingleSlaveEmail(e)}>\n        <option>--</option>\n        {emails.map(email => {\n          return getIdentifier(email, users[email]);\n        })}\n      </select>\n      <input\n        type=\"button\"\n        value=\"Submit\"\n        onClick={() => {\n          let data = [];\n          let amount = 0;\n          let currAmount = 0;\n          emails.forEach(email => {\n            if (singleSlaveEmail.localeCompare(email) < 0) {\n              if (debtList.includes(singleSlaveEmail + email)) {\n                currAmount = debtMap[singleSlaveEmail + email].debts.reduce(\n                  (prev, curr) => prev + curr.amount,\n                  0\n                );\n                amount += currAmount;\n                data.push(buildDebtsTable(email, singleSlaveEmail, currAmount));\n              }\n            } else {\n              if (debtList.includes(email + singleSlaveEmail)) {\n                currAmount =\n                  debtMap[email + singleSlaveEmail].debts.reduce(\n                    (prev, curr) => prev + curr.amount,\n                    0\n                  ) * -1;\n                amount += currAmount;\n                data.push(buildDebtsTable(email, singleSlaveEmail, currAmount));\n              }\n            }\n          });\n          if (amount > 0) {\n            setTotalDebtsAmount(amount);\n            setDebtsData(data);\n          } else {\n            setTotalDebtsAmount(0);\n            setDebtsData([]);\n          }\n        }}\n      />\n    </form>\n    <table>\n      <thead>\n        <tr>\n          <th>User One</th>\n          <th>User Two</th>\n          <th>Amount</th>\n          <th>Delete Debt</th>\n        </tr>\n      </thead>\n      <tbody>{allDebtsData}</tbody>\n    </table>\n    <span>{allDebtsTotal}</span>\n    <br />\n    <form>\n      <span>owner</span>\n      <select onChange={e => handleSingleOwnerEmail(e)}>\n        <option>--</option>\n        {emails.map(email => {\n          return getIdentifier(email, users[email]);\n        })}\n      </select>\n      <input\n        type=\"button\"\n        value=\"Submit\"\n        onClick={() => {\n          let data = [];\n          let amount = 0;\n          let currAmount = 0;\n          emails.forEach(email => {\n            if (singleOwnerEmail.localeCompare(email) < 0) {\n              if (debtList.includes(singleOwnerEmail + email)) {\n                currAmount =\n                  debtMap[singleOwnerEmail + email].debts.reduce(\n                    (prev, curr) => prev + curr.amount,\n                    0\n                  ) * -1;\n                amount += currAmount;\n                data.push(\n                  buildCreditsTable(singleOwnerEmail, email, currAmount)\n                );\n              }\n            } else {\n              if (debtList.includes(email + singleOwnerEmail)) {\n                currAmount = debtMap[email + singleOwnerEmail].debts.reduce(\n                  (prev, curr) => prev + curr.amount,\n                  0\n                );\n                amount += currAmount;\n                data.push(\n                  buildCreditsTable(singleOwnerEmail, email, currAmount)\n                );\n              }\n            }\n          });\n          if (amount > 0) {\n            setTotalCreditsAmount(amount);\n            setCreditsData(data);\n          } else {\n            setTotalCreditsAmount(0);\n            setCreditsData([]);\n          }\n        }}\n      />\n    </form>\n    <table>\n      <thead>\n        <tr>\n          <th>User One</th>\n          <th>User Two</th>\n          <th>Amount</th>\n          <th>Delete Debt</th>\n        </tr>\n      </thead>\n      <tbody>{allCreditsData}</tbody>\n    </table>\n    <span>{allCreditsTotal}</span>\n  </div>\n);\n","import { DisplayDebts } from \"../components/DisplayDebts/index\";\nimport { deleteDebtMap, deleteDebt } from \"../actions/actionDefs\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\n\nclass DisplayDebtsContainer extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      debtMapData: null,\n      ownerEmail: \"\",\n      slaveEmail: \"\",\n      singleSlaveEmail: \"\",\n      debtMapTotal: 0,\n      allDebtsData: null,\n      allDebtsTotal: 0,\n      singleOwnerEmail: \"\",\n      allCreditsTotal: 0,\n      allCreditsData: null\n    };\n\n    this.buildDebtMapTable = this.buildDebtMapTable.bind(this);\n    this.buildDebtsTable = this.buildDebtsTable.bind(this);\n    this.buildCreditsTable = this.buildCreditsTable.bind(this);\n  }\n\n  buildDebtsTable(ownerEmail, slaveEmail, amount) {\n    return (\n      <tr key={ownerEmail + slaveEmail + amount}>\n        <td>{slaveEmail}</td>\n        <td>{ownerEmail}</td>\n        <td>{amount}</td>\n        <td>\n          <button\n            onClick={() => {\n              this.props.deleteDebtMap({\n                ownerEmail: ownerEmail,\n                slaveEmail: slaveEmail\n              });\n            }}\n          />\n        </td>\n      </tr>\n    );\n  }\n\n  buildCreditsTable(ownerEmail, slaveEmail, amount) {\n    return (\n      <tr key={ownerEmail + slaveEmail + amount}>\n        <td>{ownerEmail}</td>\n        <td>{slaveEmail}</td>\n        <td>{amount}</td>\n        <td>\n          <button\n            onClick={() => {\n              this.props.deleteDebtMap({\n                ownerEmail: ownerEmail,\n                slaveEmail: slaveEmail\n              });\n            }}\n          />\n        </td>\n      </tr>\n    );\n  }\n\n  buildDebtMapTable(data, multiplier) {\n    if (multiplier === 1) {\n      return data.debts.map((debt, index) => {\n        return (\n          <tr key={index}>\n            <td>{debt.userIDOne}</td>\n            <td>{debt.userIDTwo}</td>\n            <td>{debt.amount}</td>\n            <td>{debt.notes}</td>\n            <td>\n              <button\n                onClick={() => {\n                  if (data.debts.length < 1) {\n                    this.props.deleteDebtMap({\n                      ownerEmail: debt.userIDTwo,\n                      slaveEmail: debt.userIDOne\n                    });\n                  } else {\n                    this.props.deleteDebt({\n                      index: index,\n                      ownerEmail: debt.userIDTwo,\n                      slaveEmail: debt.userIDOne\n                    });\n                  }\n                }}\n              />\n            </td>\n          </tr>\n        );\n      });\n    } else {\n      return data.debts.map((debt, index) => {\n        return (\n          <tr key={index}>\n            <td>{debt.userIDTwo}</td>\n            <td>{debt.userIDOne}</td>\n            <td>{debt.amount * multiplier}</td>\n            <td>{debt.notes}</td>\n            <td>\n              <button\n                onClick={() => {\n                  if (data.debts.length < 1) {\n                    this.props.deleteDebtMap({\n                      ownerEmail: debt.userIDTwo,\n                      slaveEmail: debt.userIDOne\n                    });\n                  } else {\n                    this.props.deleteDebt({\n                      index: index,\n                      ownerEmail: debt.userIDTwo,\n                      slaveEmail: debt.userIDOne\n                    });\n                  }\n                }}\n              />\n            </td>\n          </tr>\n        );\n      });\n    }\n  }\n\n  render() {\n    return (\n      <DisplayDebts\n        handleOwnerEmail={event =>\n          this.setState({ ownerEmail: event.target.value })\n        }\n        handleSlaveEmail={event =>\n          this.setState({ slaveEmail: event.target.value })\n        }\n        handleSingleSlaveEmail={event =>\n          this.setState({ singleSlaveEmail: event.target.value })\n        }\n        handleSingleOwnerEmail={event =>\n          this.setState({ singleOwnerEmail: event.target.value })\n        }\n        setTotalDebtMapAmount={debtMapTotal =>\n          this.setState({ debtMapTotal: debtMapTotal })\n        }\n        setDebtMapData={debtMapData =>\n          this.setState({ debtMapData: debtMapData })\n        }\n        setTotalDebtsAmount={allDebtsTotal =>\n          this.setState({ allDebtsTotal: allDebtsTotal })\n        }\n        setTotalCreditsAmount={allCreditsTotal =>\n          this.setState({ allCreditsTotal: allCreditsTotal })\n        }\n        setDebtsData={allDebtsData =>\n          this.setState({ allDebtsData: allDebtsData })\n        }\n        setCreditsData={allCreditsData =>\n          this.setState({ allCreditsData: allCreditsData })\n        }\n        buildDebtMapTable={this.buildDebtMapTable}\n        buildDebtsTable={this.buildDebtsTable}\n        buildCreditsTable={this.buildCreditsTable}\n        emails={this.props.emails}\n        users={this.props.users}\n        debtMap={this.props.debtMap}\n        debtList={this.props.debtList}\n        ownerEmail={this.state.ownerEmail}\n        slaveEmail={this.state.slaveEmail}\n        debtMapData={this.state.debtMapData}\n        debtMapTotal={this.state.debtMapTotal}\n        allDebtsData={this.state.allDebtsData}\n        allDebtsTotal={this.state.allDebtsTotal}\n        singleSlaveEmail={this.state.singleSlaveEmail}\n        singleOwnerEmail={this.state.singleOwnerEmail}\n        allCreditsTotal={this.state.allCreditsTotal}\n        allCreditsData={this.state.allCreditsData}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  emails: state.emails,\n  users: state.users,\n  debtMap: state.debtMap,\n  debtList: state.debtList,\n  deleteDebtMap: state.deleteDebtMap,\n  deleteDebt: state.deleteDebt\n});\n\nconst mapDispatchToProps = dispatch => ({\n  deleteDebtMap: data => dispatch(deleteDebtMap(data)),\n  deleteDebt: data => dispatch(deleteDebt(data))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(DisplayDebtsContainer);\n","import React from \"react\";\n\nexport const DisplayUsers = ({\n  users,\n  emails,\n  debtList,\n  deleteUser,\n  deleteDebtMap,\n  checkForDebtInstance\n}) => (\n  <table>\n    <thead>\n      <tr>\n        <th>First Name</th>\n        <th>Last Name</th>\n        <th>Email</th>\n      </tr>\n    </thead>\n    <tbody>\n      {emails.map(email => {\n        return (\n          <tr key={users[email].email}>\n            <td>{users[email].firstName}</td>\n            <td>{users[email].lastName}</td>\n            <td>{users[email].email}</td>\n            <td>\n              <button\n                onClick={() => {\n                  let userOne,\n                    userTwo = null;\n                  emails.forEach(emailTwo => {\n                    if (email.localeCompare() < 0) {\n                      userOne = email;\n                      userTwo = emailTwo;\n                    } else {\n                      userOne = emailTwo;\n                      userTwo = email;\n                    }\n                  });\n                  if (checkForDebtInstance(debtList, userOne, userTwo)) {\n                    deleteDebtMap({ ownerEmail: userOne, slaveEmail: userTwo });\n                  }\n                  deleteUser({ email: email });\n                }}\n              />\n            </td>\n          </tr>\n        );\n      })}\n    </tbody>\n  </table>\n);\n","import { DisplayUsers } from \"../components/DisplayUsers/index\";\nimport React from \"react\";\nimport { deleteUser, deleteDebtMap } from \"../actions/actionDefs\";\nimport {checkForDebtInstance} from \"../utils\";\nimport { connect } from \"react-redux\";\n\nclass AddUserContainer extends React.Component {\n  render() {\n    return (\n      <DisplayUsers\n        users={this.props.users}\n        emails={this.props.emails}\n        debtList={this.props.debtList}\n        deleteUser={this.props.deleteUser}\n        deleteDebtMap={this.props.deleteDebtMap}\n        checkForDebtInstance={checkForDebtInstance}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  users: state.users,\n  emails: state.emails,\n  debtList: state.debtList\n});\n\nconst mapDispatchToProps = dispatch => ({\n  deleteUser: data => dispatch(deleteUser(data)),\n  deleteDebtMap: data => dispatch(deleteDebtMap(data))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AddUserContainer);\n","import React from \"react\";\n\nexport const ManageData = ({ clearData }) => (\n  <div>\n    <button>Download Data</button>\n    <button>Upload Data</button>\n    <button onClick={clearData}>Clear Data</button>\n  </div>\n);\n","import { ManageData } from \"../components/ManageData/index\";\nimport { clearData } from \"../actions/actionDefs\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\n\nclass ManageDataContainer extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {};\n\n    this.downloadData = this.downloadData.bind(this);\n    this.uploadData = this.uploadData.bind(this);\n  }\n\n  downloadData() {}\n\n  uploadData() {}\n\n  render() {\n    return <ManageData clearData={this.props.clearData} />;\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  clearData: () => dispatch(clearData())\n});\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(ManageDataContainer);\n","import React from \"react\";\nimport AddUserContainer from \"./containers/addUserContainer\";\nimport AddDebtContainer from \"./containers/addDebtContainer\";\nimport DisplayDebtsContainer from \"./containers/displayDebtsContainer\";\nimport DisplayUsersContainer from \"./containers/displayUsersContainer\";\nimport ManageDataContainer from \"./containers/manageDataContainer\";\nimport { HashRouter, Route, Link } from \"react-router-dom\";\n\nexport default class App extends React.Component {\n  render() {\n    return (\n      <div>\n        <header>\n          <p>How Much Do I Owe You?</p>\n        </header>\n        <HashRouter basename=\"/\">\n          <div>\n            <ul>\n              <li>\n                <Link to=\"/\">Home</Link>\n              </li>\n              <li>\n                <Link to=\"/addUser\">Add User</Link>\n              </li>\n              <li>\n                <Link to=\"/addDebt\">Add Debt</Link>\n              </li>\n              <li>\n                <Link to=\"/displayDebts\">Display Debts</Link>\n              </li>\n              <li>\n                <Link to=\"/displayUsers\">Display Users</Link>\n              </li>\n              <li>\n                <Link to=\"/manageData\">Manage Data</Link>\n              </li>\n            </ul>\n            <Route path=\"/addUser\" component={AddUserContainer} />\n            <Route path=\"/addDebt\" component={AddDebtContainer} />\n            <Route path=\"/displayDebts\" component={DisplayDebtsContainer} />\n            <Route path=\"/displayUsers\" component={DisplayUsersContainer} />\n            <Route path=\"/manageData\" component={ManageDataContainer} />\n          </div>\n        </HashRouter>\n      </div>\n    );\n  }\n}\n","import * as actionConst from \"../actions/action-constants\";\n\nimport { checkForDebtInstance } from \"../utils\";\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case actionConst.deleteDebt: {\n      let id = action.payload.userIDOne + action.payload.userIDTwo;\n      return {\n        ...state,\n        debtMap: {\n          ...state.debtMap,\n          [id]: {\n            debts: [\n              ...state.debtMap[id].debts.slice(0, action.payload.index),\n              ...state.debtMap[id].debts.slice(action.payload.index + 1)\n            ]\n          }\n        }\n      };\n    }\n    case actionConst.deleteUser: {\n      let newUserMap = {};\n      state.emails.forEach(email => {\n        if (email !== action.payload.email) {\n          newUserMap[email] = state.users[email];\n        }\n      });\n      return {\n        ...state,\n        emails: state.emails.filter(email => email !== action.payload.email),\n        users: newUserMap\n      };\n    }\n    case actionConst.deleteDebtMap: {\n      let id = action.payload.userIDOne + action.payload.userIDTwo;\n      let newDebtMap = {};\n      state.debtList.forEach(debt => {\n        if (debt !== id) {\n          newDebtMap[debt] = state.debtMap[debt];\n        }\n      });\n      return {\n        ...state,\n        debtList: state.debtList.filter(debt => debt !== id),\n        debtMap: newDebtMap\n      };\n    }\n    case actionConst.clearData: {\n      return {\n        emails: [],\n        users: {},\n        debtMap: {},\n        debtList: []\n      };\n    }\n    case actionConst.addUser: {\n      return {\n        ...state,\n        emails: [...state.emails, action.email],\n        users: {\n          ...state.users,\n          [action.email]: action.payload\n        }\n      };\n    }\n    case actionConst.addDebt: {\n      let id = action.payload.userIDOne + action.payload.userIDTwo;\n\n      if (\n        checkForDebtInstance(\n          state.debtList,\n          action.payload.userIDOne,\n          action.payload.userIDTwo\n        )\n      ) {\n        return {\n          ...state,\n          debtMap: {\n            ...state.debtMap,\n            [id]: {\n              debts: [...state.debtMap[id].debts, action.payload]\n            }\n          }\n        };\n      } else {\n        return {\n          ...state,\n          debtList: [...state.debtList, id],\n          debtMap: {\n            ...state.debtMap,\n            [id]: {\n              debts: [action.payload]\n            }\n          }\n        };\n      }\n    }\n    default: {\n      return state;\n    }\n  }\n}\n\nexport default reducer;\n","import { createStore, applyMiddleware } from \"redux\";\nimport reducer from \"./reducers/reducer\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport reduxCookiesMiddleware from \"redux-cookies-middleware\";\nimport { getStateFromCookies } from \"redux-cookies-middleware\";\n\nconst defaultState = {\n  emails: [],\n  users: {},\n  debtMap: {},\n  debtList: []\n};\n\n\nconst cookiePaths = {\n    \"emails\": { name: \"HMDIOY_EMAILS\" },\n    \"users\": { name: \"HMDIOY_USERS\" },\n    \"debtMap\": { name: \"HMDIOY_DEBTMAP\" },\n    \"debtList\": { name: \"HMDIOY_DEBTLIST\" },\n}\n\nlet initialState = getStateFromCookies(defaultState, cookiePaths);\n\nif(!initialState.emails) {\n    initialState.emails = [];\n}\n\nif(!initialState.users) {\n    initialState.users = {};\n}\n\nif(!initialState.debtMap) {\n    initialState.debtMap = {};\n}\n\nif(!initialState.debtList) {\n    initialState.debtList = [];\n}\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(reduxCookiesMiddleware(cookiePaths)))\n);\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}