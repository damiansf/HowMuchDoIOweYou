{"version":3,"sources":["components/ManageData/index.js","actions/action-constants.js","utils.js","actions/actionDefs.js","containers/manageDataContainer.js","components/AddUser/index.js","containers/addUserContainer.js","components/DisplayUsers/index.js","containers/displayUsersContainer.js","containers/manageUsersContainer.js","components/AddDebt/index.js","containers/addDebtContainer.js","components/DisplayDebts/index.js","containers/displayDebtsContainer.js","containers/manageDebtsContainer.js","components/HomePage/index.js","containers/homePageContainer.js","App.js","reducers/reducer.js","store.js","index.js"],"names":["ManageData","_ref","clearData","uploadData","data","react_default","a","createElement","className","href","download","index_es","icon","faDownload","type","title","id","onChange","e","htmlFor","faUpload","onClick","alert","addUser","addDebt","deleteDebt","deleteUser","deleteDebtMap","addDebtInstance","checkForDebtInstance","debtArray","idOne","idTwo","includes","orderEmails","firstEmail","secondEmail","userOne","userTwo","localeCompare","getIdentifier","email","user","key","value","firstName","lastName","actionConst","payload","_orderEmails2","ownerEmail","slaveEmail","userIDOne","userIDTwo","multiplier","amount","notes","timeStamp","Date","now","ManageDataContainer","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","bind","assertThisInitialized","_this2","file","target","files","reader","FileReader","onload","obj","JSON","parse","result","emails","forEach","props","users","debtList","debt","debtMap","debts","debtItem","existing","existingDebtItem","error","readAsText","window","File","FileList","Blob","ManageData_ManageData","URL","createObjectURL","stringify","React","Component","connect","dispatch","AddUser","handleFirstName","handleLastName","handleEmail","name","AddUserContainer","AddUser_AddUser","event","setState","DisplayUsers","editUser","modalIsOpen","editEmail","saveEdit","cancelEdit","oldEmail","lib_default","isOpen","onRequestClose","contentLabel","disabled","map","emailTwo","_orderEmails","Modal","setAppElement","DisplayUsers_DisplayUsers","ManageUsersContainer","addUserContainer","displayUsersContainer","AddDebt","handleOwnerEmail","handleSlaveEmail","handleNotes","handleAmount","emailOne","AddDebtContainer","AddDebt_AddDebt","isNaN","DisplayDebts","setTotalDebtMapAmount","setDebtMapData","buildDebtMapTable","debtMapData","debtMapTotal","allDebtsData","allDebtsTotal","handleSingleSlaveEmail","singleSlaveEmail","buildDebtsTable","setDebtsData","setTotalDebtsAmount","handleSingleOwnerEmail","setCreditsData","singleOwnerEmail","allCreditsTotal","allCreditsData","setTotalCreditsAmount","buildCreditsTable","setNumDebts","setNumCredits","reduce","prev","curr","currAmount","countDebts","push","countCredits","DisplayDebtsContainer","numDebts","numCredits","_this3","_this4","index","length","newTotal","newData","splice","_this5","DisplayDebts_DisplayDebts","ManageDebtsContainer","addDebtContainer","displayDebtsContainer","HomePage","HomePageContainer","HomePage_HomePage","App","react_router_dom","basename","activeClassName","exact","to","react_router","path","component","reducer","action","objectSpread","concat","toConsumableArray","defineProperty","slice","newUserMap","filter","newDebtMap","cookiePaths","initialState","getStateFromCookies","store","createStore","composeWithDevTools","applyMiddleware","reduxCookiesMiddleware","ReactDOM","render","es","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.7890ab4f.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./index.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faDownload } from \"@fortawesome/free-solid-svg-icons\";\nimport { faUpload } from \"@fortawesome/free-solid-svg-icons\";\n\nexport const ManageData = ({ clearData, uploadData, data }) => (\n  <div>\n    <div className=\"data-title\">\n      <h2>Data, Data Everywhere!</h2>\n    </div>\n    <div className=\"manage-data-container\">\n      <div>\n        <div className=\"download\">\n          <a href={data} download={\"data.json\"} className=\"download-link\">\n            <FontAwesomeIcon icon={faDownload} /> Download All Data\n          </a>\n        </div>\n        <input\n          type=\"file\"\n          title=\"Upload Data\"\n          className=\"upload-button\"\n          id=\"upload\"\n          onChange={e => {\n            uploadData(e);\n          }}\n        />\n        <label htmlFor=\"upload\" className=\"upload-file\">\n          <FontAwesomeIcon icon={faUpload} /> Upload Data\n        </label>\n        <span\n          onClick={() => {\n            clearData();\n            alert(\"Data Cleared\");\n          }}\n          className=\"clear\"\n        >\n          Clear Data\n        </span>\n      </div>\n    </div>\n  </div>\n);\n","export const addUser = \"ADD_USER\";\nexport const addDebt = \"ADD_DEBT\";\nexport const clearData = \"CLEAR_DATA\";\nexport const deleteDebt = \"DELETE_DEBT\";\nexport const deleteUser = \"DELETE_USER\";\nexport const deleteDebtMap = \"DELETE_DEBT_MAP\";\nexport const addDebtInstance = \"ADD_DEBT_INSTANCE\";","import React from \"react\";\n\nexport function checkForDebtInstance(debtArray, idOne, idTwo) {\n  return debtArray.includes(idOne + idTwo);\n}\n\nexport function orderEmails(firstEmail, secondEmail) {\n  let userOne = null;\n  let userTwo = null;\n\n  if (firstEmail.localeCompare(secondEmail) < 0) {\n    userOne = firstEmail;\n    userTwo = secondEmail;\n  } else {\n    userOne = secondEmail;\n    userTwo = firstEmail;\n  }\n\n  return {\n    userOne,\n    userTwo\n  };\n}\n\nexport function getIdentifier(email, user) {\n  return (\n    <option key={email} value={email}>\n      {user.firstName + \" \" + user.lastName + \" (\" + email + \")\"}\n    </option>\n  );\n}\n","import * as actionConst from \"./action-constants\";\nimport { orderEmails } from \"../utils\";\n\nexport function addUser(data) {\n  return {\n    type: actionConst.addUser,\n    payload: {\n      firstName: data.firstName,\n      lastName: data.lastName,\n      email: data.email\n    },\n    email: data.email\n  };\n}\n\nexport function clearData() {\n  return {\n    type: actionConst.clearData\n  };\n}\n\nexport function deleteDebt(data) {\n  let { userOne, userTwo } = orderEmails(data.ownerEmail, data.slaveEmail);\n\n  return {\n    type: actionConst.deleteDebt,\n    payload: { userIDOne: userOne, userIDTwo: userTwo, index: data.index }\n  };\n}\n\nexport function deleteUser(data) {\n  return {\n    type: actionConst.deleteUser,\n    payload: {\n      email: data.email\n    }\n  };\n}\n\nexport function deleteDebtMap(data) {\n  let { userOne, userTwo } = orderEmails(data.ownerEmail, data.slaveEmail);\n\n  return {\n    type: actionConst.deleteDebtMap,\n    payload: { userIDOne: userOne, userIDTwo: userTwo }\n  };\n}\n\nexport function addDebt(data) {\n  let userOne = \"\";\n  let userTwo = \"\";\n  let multiplier = 1;\n\n  if (data.userOne.localeCompare(data.userTwo) < 0) {\n    userOne = data.userOne;\n    userTwo = data.userTwo;\n    multiplier = -1;\n  } else {\n    userOne = data.userTwo;\n    userTwo = data.userOne;\n  }\n\n  return {\n    type: actionConst.addDebt,\n    payload: {\n      userIDOne: userOne,\n      userIDTwo: userTwo,\n      amount: data.amount * multiplier,\n      notes: data.notes,\n      timeStamp: Date.now()\n    }\n  };\n}\n\nexport function addDebtInstance(data) {\n  return {\n    type: actionConst.addDebtInstance,\n    payload: {\n      key: data.key,\n      debts: data.debts\n    }\n  };\n}\n","import { ManageData } from \"../components/ManageData/index\";\nimport {\n  clearData,\n  addUser,\n  addDebt,\n  addDebtInstance\n} from \"../actions/actionDefs\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\n\nclass ManageDataContainer extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {};\n\n    this.uploadData = this.uploadData.bind(this);\n  }\n\n  uploadData(e) {\n    let file = e.target.files[0];\n\n    if (!file.type.includes(\"json\")) {\n      alert(\"Invalid file type, only accept json files\");\n      return;\n    }\n\n    let reader = new FileReader();\n\n    reader.onload = (() => {\n      return e => {\n        try {\n          let obj = JSON.parse(e.target.result);\n\n          obj.emails.forEach(email => {\n            if (!this.props.emails.includes(email)) {\n              this.props.addUser({\n                firstName: obj.users[email].firstName,\n                lastName: obj.users[email].lastName,\n                email: obj.users[email].email\n              });\n            }\n          });\n\n          obj.debtList.forEach(debt => {\n            if (!this.props.debtList.includes(debt)) {\n              this.props.addDebtInstance({\n                debts: obj.debtMap[debt].debts,\n                key: debt\n              });\n            } else {\n              obj.debtMap[debt].debts.forEach(debtItem => {\n                let existing = false;\n                this.props.debtMap[debt].debts.forEach(existingDebtItem => {\n                  if (existingDebtItem.timeStamp === debtItem.timeStamp) {\n                    existing = true;\n                  }\n                });\n                if (!existing) {\n                  this.props.addDebt({\n                    userOne: debtItem.userIDOne,\n                    userTwo: debtItem.userIDTwo,\n                    amount: debtItem.amount * -1,\n                    notes: debtItem.notes\n                  });\n                }\n              });\n            }\n          });\n          alert(\"Data Uploaded\");\n        } catch (error) {\n          alert(\"Error parsing json: \" + error);\n        }\n      };\n    })(file);\n    reader.readAsText(file);\n  }\n\n  render() {\n    if (window.File && window.FileReader && window.FileList && window.Blob) {\n      return (\n        <ManageData\n          clearData={this.props.clearData}\n          uploadData={this.uploadData}\n          data={URL.createObjectURL(\n            new Blob(\n              [\n                JSON.stringify({\n                  users: this.props.users,\n                  emails: this.props.emails,\n                  debtList: this.props.debtList,\n                  debtMap: this.props.debtMap\n                })\n              ],\n              {\n                type: \"application/json\"\n              }\n            )\n          )}\n        />\n      );\n    } else {\n      return <span>File API's not available</span>;\n    }\n  }\n}\n\nconst mapStateToProps = state => ({\n  users: state.users,\n  emails: state.emails,\n  debtList: state.debtList,\n  debtMap: state.debtMap\n});\n\nconst mapDispatchToProps = dispatch => ({\n  clearData: () => dispatch(clearData()),\n  addUser: data => dispatch(addUser(data)),\n  addDebt: data => dispatch(addDebt(data)),\n  addDebtInstance: data => dispatch(addDebtInstance(data))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ManageDataContainer);\n","import React from \"react\";\n\nexport const AddUser = ({\n  handleFirstName,\n  handleLastName,\n  handleEmail,\n  addUser,\n  emails,\n  firstName,\n  lastName,\n  email\n}) => (\n  <form>\n    <label>\n      FirstName:\n      <input\n        type=\"text\"\n        name=\"firstName\"\n        value={firstName}\n        onChange={e => handleFirstName(e)}\n      />\n    </label>\n    <label>\n      LastName:\n      <input\n        type=\"text\"\n        name=\"lastName\"\n        value={lastName}\n        onChange={e => handleLastName(e)}\n      />\n    </label>\n    <label>\n      Email:\n      <input\n        type=\"text\"\n        name=\"email\"\n        value={email}\n        onChange={e => handleEmail(e)}\n      />\n    </label>\n    <input\n      type=\"button\"\n      value=\"Submit\"\n      onClick={() => {\n        if (!emails.includes(email)) {\n          addUser({\n            firstName: firstName,\n            lastName: lastName,\n            email: email\n          });\n          alert(\"User added\");\n        } else {\n          alert(\"User with same email already exists\");\n        }\n      }}\n    />\n  </form>\n);\n","import { AddUser } from \"../components/AddUser/index\";\nimport { addUser } from \"../actions/actionDefs\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\n\nclass AddUserContainer extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\"\n    };\n  }\n\n  render() {\n    return (\n      <AddUser\n        email={this.state.email}\n        lastName={this.state.lastName}\n        firstName={this.state.firstName}\n        handleEmail={event => this.setState({ email: event.target.value })}\n        handleLastName={event =>\n          this.setState({ lastName: event.target.value })\n        }\n        handleFirstName={event =>\n          this.setState({ firstName: event.target.value })\n        }\n        emails={this.props.emails}\n        addUser={this.props.addUser}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  emails: state.emails\n});\n\nconst mapDispatchToProps = dispatch => ({\n  addUser: data => dispatch(addUser(data))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AddUserContainer);\n","import React from \"react\";\nimport Modal from \"react-modal\";\n\nexport const DisplayUsers = ({\n  users,\n  emails,\n  debtList,\n  deleteUser,\n  deleteDebtMap,\n  checkForDebtInstance,\n  editUser,\n  orderEmails,\n  modalIsOpen,\n  editEmail,\n  firstName,\n  lastName,\n  email,\n  saveEdit,\n  cancelEdit,\n  handleLastName,\n  handleFirstName,\n  handleEmail,\n  addUser,\n  oldEmail\n}) => (\n  <div>\n    <Modal\n      isOpen={modalIsOpen}\n      onRequestClose={cancelEdit}\n      contentLabel=\"Edit User\"\n    >\n      <span>\n        {editEmail\n          ? \"\"\n          : \"Note, only the first and last name can be changed for this user as they are involved in debts\"}\n      </span>\n      <form>\n        <label>\n          FirstName:\n          <input\n            type=\"text\"\n            name=\"firstName\"\n            value={firstName}\n            onChange={e => handleFirstName(e)}\n          />\n        </label>\n        <label>\n          LastName:\n          <input\n            type=\"text\"\n            name=\"lastName\"\n            value={lastName}\n            onChange={e => handleLastName(e)}\n          />\n        </label>\n        <label>\n          Email:\n          <input\n            type=\"text\"\n            name=\"email\"\n            value={email}\n            onChange={e => handleEmail(e)}\n            disabled={editEmail ? \"\" : \"disabled\"}\n          />\n        </label>\n        <input\n          type=\"button\"\n          value=\"Save\"\n          onClick={() => {\n            if (editEmail) {\n              if (!emails.includes(email)) {\n                deleteUser({ email: oldEmail });\n                addUser({\n                  firstName: firstName,\n                  lastName: lastName,\n                  email: email\n                });\n                saveEdit();\n              } else {\n                alert(\"User with same email already exists\");\n              }\n            } else {\n              deleteUser({ email: email });\n              addUser({\n                firstName: firstName,\n                lastName: lastName,\n                email: email\n              });\n              saveEdit();\n            }\n          }}\n        />\n        <input\n          type=\"button\"\n          value=\"Cancel\"\n          onClick={() => {\n            cancelEdit();\n          }}\n        />\n      </form>\n    </Modal>\n    <table>\n      <thead>\n        <tr>\n          <th>First Name</th>\n          <th>Last Name</th>\n          <th>Email</th>\n        </tr>\n      </thead>\n      <tbody>\n        {emails.map(email => {\n          return (\n            <tr key={users[email].email}>\n              <td>{users[email].firstName}</td>\n              <td>{users[email].lastName}</td>\n              <td>{users[email].email}</td>\n              <td>\n                <button\n                  onClick={() => {\n                    emails.forEach(emailTwo => {\n                      let { userOne, userTwo } = orderEmails(email, emailTwo);\n                      if (checkForDebtInstance(debtList, userOne, userTwo)) {\n                        deleteDebtMap({\n                          ownerEmail: userOne,\n                          slaveEmail: userTwo\n                        });\n                      }\n                    });\n\n                    deleteUser({ email: email });\n                  }}\n                />\n                <button\n                  onClick={() => {\n                    let editEmail = false;\n                    emails.forEach(emailTwo => {\n                      let { userOne, userTwo } = orderEmails(email, emailTwo);\n                      if (!checkForDebtInstance(debtList, userOne, userTwo)) {\n                        editEmail = true;\n                      } else {\n                        editEmail = false;\n                      }\n                    });\n                    editUser(email, editEmail);\n                  }}\n                >\n                  Edit\n                </button>\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  </div>\n);\n","import { DisplayUsers } from \"../components/DisplayUsers/index\";\nimport React from \"react\";\nimport { deleteUser, deleteDebtMap, addUser } from \"../actions/actionDefs\";\nimport { checkForDebtInstance, orderEmails } from \"../utils\";\nimport { connect } from \"react-redux\";\nimport Modal from \"react-modal\";\n\nModal.setAppElement(\"#root\");\n\nclass AddUserContainer extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      modalIsOpen: false,\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      oldEmail: \"\",\n      editEmail: false\n    };\n\n    this.editUser = this.editUser.bind(this);\n    this.cancelEdit = this.cancelEdit.bind(this);\n    this.saveEdit = this.saveEdit.bind(this);\n  }\n\n  editUser(email, editEmail) {\n    this.setState({\n      modalIsOpen: true,\n      firstName: this.props.users[email].firstName,\n      lastName: this.props.users[email].lastName,\n      email: email,\n      oldEmail: email,\n      editEmail: editEmail\n    });\n  }\n\n  cancelEdit() {\n    this.setState({\n      modalIsOpen: false,\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      editEmail: false,\n      oldEmail: \"\"\n    });\n  }\n\n  saveEdit() {\n    this.setState({\n      modalIsOpen: false,\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      editEmail: false,\n      oldEmail: \"\"\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <DisplayUsers\n          users={this.props.users}\n          emails={this.props.emails}\n          debtList={this.props.debtList}\n          deleteUser={this.props.deleteUser}\n          deleteDebtMap={this.props.deleteDebtMap}\n          checkForDebtInstance={checkForDebtInstance}\n          editUser={this.editUser}\n          orderEmails={orderEmails}\n          modalIsOpen={this.state.modalIsOpen}\n          cancelEdit={this.cancelEdit}\n          editEmail={this.state.editEmail}\n          firstName={this.state.firstName}\n          lastName={this.state.lastName}\n          saveEdit={this.saveEdit}\n          email={this.state.email}\n          handleLastName={event =>\n            this.setState({ lastName: event.target.value })\n          }\n          handleFirstName={event =>\n            this.setState({ firstName: event.target.value })\n          }\n          handleEmail={event => this.setState({ email: event.target.value })}\n          addUser={this.props.addUser}\n          oldEmail={this.state.oldEmail}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  users: state.users,\n  emails: state.emails,\n  debtList: state.debtList\n});\n\nconst mapDispatchToProps = dispatch => ({\n  deleteUser: data => dispatch(deleteUser(data)),\n  deleteDebtMap: data => dispatch(deleteDebtMap(data)),\n  addUser: data => dispatch(addUser(data))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AddUserContainer);\n","import React from \"react\";\nimport AddUserContainer from \"./addUserContainer\";\nimport DisplayUsersContainer from \"./displayUsersContainer\";\n\nexport default class ManageUsersContainer extends React.Component {\n    render() {\n        return (\n          <div>\n            <AddUserContainer />\n            <DisplayUsersContainer />\n          </div>\n        );\n      }\n}","import React from \"react\";\nimport { getIdentifier } from \"../../utils\";\n\nexport const AddDebt = ({\n  emails,\n  users,\n  addDebt,\n  handleOwnerEmail,\n  handleSlaveEmail,\n  handleNotes,\n  handleAmount,\n  amount,\n  notes,\n  emailOne,\n  emailTwo\n}) => (\n  <form>\n    <span>owner</span>\n    <select onChange={e => handleOwnerEmail(e)}>\n      <option>--</option>\n      {emails.map(email => {\n        return getIdentifier(email, users[email]);\n      })}\n    </select>\n    <span>slave</span>\n    <select onChange={e => handleSlaveEmail(e)}>\n      <option>--</option>\n      {emails.map(email => {\n        return getIdentifier(email, users[email]);\n      })}\n    </select>\n    <label>\n      Amount:\n      <input\n        type=\"text\"\n        name=\"amount\"\n        value={amount}\n        onChange={e => handleAmount(e)}\n      />\n    </label>\n    <label>\n      Notes:\n      <input\n        type=\"text\"\n        name=\"notes\"\n        value={notes}\n        onChange={e => handleNotes(e)}\n      />\n    </label>\n    <input\n      type=\"button\"\n      value=\"Submit\"\n      onClick={() => {\n        if (!emailTwo) {\n          alert(\"Second email either null or the same\");\n        } else {\n          addDebt({\n            userOne: emailOne ? emailOne : emails[0],\n            userTwo: emailTwo,\n            amount: amount,\n            notes: notes\n          });\n          alert(\"User Debt added\");\n        }\n      }}\n    />\n  </form>\n);\n","import { AddDebt } from \"../components/AddDebt/index\";\nimport { addDebt } from \"../actions/actionDefs\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\n\nclass AddDebtContainer extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      amount: \"\",\n      notes: \"\",\n      emailOne: \"\",\n      emailTwo: \"\"\n    };\n  }\n\n  render() {\n    return (\n      <AddDebt\n        emails={this.props.emails}\n        users={this.props.users}\n        notes={this.state.notes}\n        amount={this.state.amount}\n        emailOne={this.state.emailOne}\n        emailTwo={this.state.emailTwo}\n        addDebt={this.props.addDebt}\n        handleOwnerEmail={event =>\n          this.setState({ emailOne: event.target.value })\n        }\n        handleSlaveEmail={event =>\n          this.setState({ emailTwo: event.target.value })\n        }\n        handleNotes={event => this.setState({ notes: event.target.value })}\n        handleAmount={event => {\n          if (!isNaN(event.target.value)) {\n            this.setState({ amount: event.target.value });\n          }\n        }}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  emails: state.emails,\n  users: state.users\n});\n\nconst mapDispatchToProps = dispatch => ({\n  addDebt: data => dispatch(addDebt(data))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AddDebtContainer);\n","import React from \"react\";\nimport { getIdentifier } from \"../../utils\";\n\nexport const DisplayDebts = ({\n  handleOwnerEmail,\n  handleSlaveEmail,\n  setTotalDebtMapAmount,\n  setDebtMapData,\n  buildDebtMapTable,\n  emails,\n  users,\n  debtMap,\n  debtList,\n  ownerEmail,\n  slaveEmail,\n  debtMapData,\n  debtMapTotal,\n  allDebtsData,\n  allDebtsTotal,\n  handleSingleSlaveEmail,\n  singleSlaveEmail,\n  buildDebtsTable,\n  setDebtsData,\n  setTotalDebtsAmount,\n  handleSingleOwnerEmail,\n  setCreditsData,\n  singleOwnerEmail,\n  allCreditsTotal,\n  allCreditsData,\n  setTotalCreditsAmount,\n  buildCreditsTable,\n  setNumDebts,\n  setNumCredits\n}) => (\n  <div>\n    <form>\n      <span>slave</span>\n      <select onChange={e => handleSlaveEmail(e)}>\n        <option>--</option>\n        {emails.map(email => {\n          return getIdentifier(email, users[email]);\n        })}\n      </select>\n      <span>owner</span>\n      <select onChange={e => handleOwnerEmail(e)}>\n        <option>--</option>\n        {emails.map(email => {\n          return getIdentifier(email, users[email]);\n        })}\n      </select>\n      <input\n        type=\"button\"\n        value=\"Submit\"\n        onClick={() => {\n          let data = null;\n          let amount = 0;\n          if (ownerEmail.localeCompare(slaveEmail) < 0) {\n            if (debtList.includes(ownerEmail + slaveEmail)) {\n              data = buildDebtMapTable(debtMap[ownerEmail + slaveEmail], -1);\n              amount =\n                debtMap[ownerEmail + slaveEmail].debts.reduce(\n                  (prev, curr) => prev + curr.amount,\n                  0\n                ) * -1;\n            }\n          } else {\n            if (debtList.includes(slaveEmail + ownerEmail)) {\n              data = buildDebtMapTable(debtMap[slaveEmail + ownerEmail], 1);\n              amount = debtMap[slaveEmail + ownerEmail].debts.reduce(\n                (prev, curr) => prev + curr.amount,\n                0\n              );\n            }\n          }\n          setTotalDebtMapAmount(amount);\n          setDebtMapData(data);\n        }}\n      />\n    </form>\n    <table>\n      <thead>\n        <tr>\n          <th>User One</th>\n          <th>User Two</th>\n          <th>Amount</th>\n          <th>Notes</th>\n          <th>Delete Debt</th>\n        </tr>\n      </thead>\n      <tbody>{debtMapData}</tbody>\n    </table>\n    <span>{debtMapTotal}</span>\n    <br />\n    <form>\n      <span>slave</span>\n      <select onChange={e => handleSingleSlaveEmail(e)}>\n        <option>--</option>\n        {emails.map(email => {\n          return getIdentifier(email, users[email]);\n        })}\n      </select>\n      <input\n        type=\"button\"\n        value=\"Submit\"\n        onClick={() => {\n          let data = [];\n          let amount = 0;\n          let currAmount = 0;\n          let countDebts = 0;\n          emails.forEach(email => {\n            if (singleSlaveEmail.localeCompare(email) < 0) {\n              if (debtList.includes(singleSlaveEmail + email)) {\n                currAmount = debtMap[singleSlaveEmail + email].debts.reduce(\n                  (prev, curr) => prev + curr.amount,\n                  0\n                );\n                amount += currAmount;\n                countDebts++;\n                data.push(buildDebtsTable(email, singleSlaveEmail, currAmount));\n              }\n            } else {\n              if (debtList.includes(email + singleSlaveEmail)) {\n                currAmount =\n                  debtMap[email + singleSlaveEmail].debts.reduce(\n                    (prev, curr) => prev + curr.amount,\n                    0\n                  ) * -1;\n                amount += currAmount;\n                countDebts++;\n                data.push(buildDebtsTable(email, singleSlaveEmail, currAmount));\n              }\n            }\n          });\n          setNumDebts(countDebts);\n          if (amount > 0) {\n            setTotalDebtsAmount(amount);\n            setDebtsData(data);\n          } else {\n            setTotalDebtsAmount(0);\n            setDebtsData([]);\n          }\n        }}\n      />\n    </form>\n    <table>\n      <thead>\n        <tr>\n          <th>User One</th>\n          <th>User Two</th>\n          <th>Amount</th>\n          <th>Delete Debt</th>\n        </tr>\n      </thead>\n      <tbody>{allDebtsData}</tbody>\n    </table>\n    <span>{allDebtsTotal}</span>\n    <br />\n    <form>\n      <span>owner</span>\n      <select onChange={e => handleSingleOwnerEmail(e)}>\n        <option>--</option>\n        {emails.map(email => {\n          return getIdentifier(email, users[email]);\n        })}\n      </select>\n      <input\n        type=\"button\"\n        value=\"Submit\"\n        onClick={() => {\n          let data = [];\n          let amount = 0;\n          let currAmount = 0;\n          let countCredits = 0;\n          emails.forEach(email => {\n            if (singleOwnerEmail.localeCompare(email) < 0) {\n              if (debtList.includes(singleOwnerEmail + email)) {\n                currAmount =\n                  debtMap[singleOwnerEmail + email].debts.reduce(\n                    (prev, curr) => prev + curr.amount,\n                    0\n                  ) * -1;\n                amount += currAmount;\n                countCredits++;\n                data.push(\n                  buildCreditsTable(singleOwnerEmail, email, currAmount)\n                );\n              }\n            } else {\n              if (debtList.includes(email + singleOwnerEmail)) {\n                currAmount = debtMap[email + singleOwnerEmail].debts.reduce(\n                  (prev, curr) => prev + curr.amount,\n                  0\n                );\n                amount += currAmount;\n                countCredits++;\n                data.push(\n                  buildCreditsTable(singleOwnerEmail, email, currAmount)\n                );\n              }\n            }\n          });\n          setNumCredits(countCredits);\n          if (amount > 0) {\n            setTotalCreditsAmount(amount);\n            setCreditsData(data);\n          } else {\n            setTotalCreditsAmount(0);\n            setCreditsData([]);\n          }\n        }}\n      />\n    </form>\n    <table>\n      <thead>\n        <tr>\n          <th>User One</th>\n          <th>User Two</th>\n          <th>Amount</th>\n          <th>Delete Debt</th>\n        </tr>\n      </thead>\n      <tbody>{allCreditsData}</tbody>\n    </table>\n    <span>{allCreditsTotal}</span>\n  </div>\n);\n","import { DisplayDebts } from \"../components/DisplayDebts/index\";\nimport { deleteDebtMap, deleteDebt } from \"../actions/actionDefs\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\n\nclass DisplayDebtsContainer extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      debtMapData: null,\n      ownerEmail: \"\",\n      slaveEmail: \"\",\n      singleSlaveEmail: \"\",\n      debtMapTotal: 0,\n      allDebtsData: null,\n      allDebtsTotal: 0,\n      singleOwnerEmail: \"\",\n      allCreditsTotal: 0,\n      allCreditsData: null,\n      numDebts: 0,\n      numCredits: 0\n    };\n\n    this.buildDebtMapTable = this.buildDebtMapTable.bind(this);\n    this.buildDebtsTable = this.buildDebtsTable.bind(this);\n    this.buildCreditsTable = this.buildCreditsTable.bind(this);\n  }\n\n  buildDebtsTable(ownerEmail, slaveEmail, amount) {\n    return (\n      <tr key={ownerEmail + slaveEmail + amount}>\n        <td>{slaveEmail}</td>\n        <td>{ownerEmail}</td>\n        <td>{amount}</td>\n        <td>\n          <button\n            onClick={() => {\n              this.props.deleteDebtMap({\n                ownerEmail: ownerEmail,\n                slaveEmail: slaveEmail\n              });\n              if (this.state.numDebts === 1) {\n                this.setState({\n                  numDebts: 0,\n                  allDebtsData: null,\n                  allDebtsTotal: 0\n                });\n              } else {\n                this.setState({ numDebts: this.state.numDebts - 1 });\n              }\n            }}\n          />\n        </td>\n      </tr>\n    );\n  }\n\n  buildCreditsTable(ownerEmail, slaveEmail, amount) {\n    return (\n      <tr key={ownerEmail + slaveEmail + amount}>\n        <td>{ownerEmail}</td>\n        <td>{slaveEmail}</td>\n        <td>{amount}</td>\n        <td>\n          <button\n            onClick={() => {\n              this.props.deleteDebtMap({\n                ownerEmail: ownerEmail,\n                slaveEmail: slaveEmail\n              });\n              if (this.state.numCredits === 1) {\n                this.setState({\n                  numCredits: 0,\n                  allCreditsData: null,\n                  allCreditsTotal: 0\n                });\n              } else {\n                this.setState({ numCredits: this.state.numCredits - 1 });\n              }\n            }}\n          />\n        </td>\n      </tr>\n    );\n  }\n\n  buildDebtMapTable(data, multiplier) {\n    if (multiplier === 1) {\n      return data.debts.map((debt, index) => {\n        return (\n          <tr key={index}>\n            <td>{debt.userIDOne}</td>\n            <td>{debt.userIDTwo}</td>\n            <td>{debt.amount}</td>\n            <td>{debt.notes}</td>\n            <td>\n              <button\n                onClick={() => {\n                  if (data.debts.length <= 1) {\n                    this.props.deleteDebtMap({\n                      ownerEmail: debt.userIDTwo,\n                      slaveEmail: debt.userIDOne\n                    });\n                    this.setState({\n                      debtMapData: null,\n                      debtMapTotal: 0\n                    });\n                  } else {\n                    this.props.deleteDebt({\n                      index: index,\n                      ownerEmail: debt.userIDTwo,\n                      slaveEmail: debt.userIDOne\n                    });\n                    let newTotal = this.state.debtMapTotal - debt.amount;\n                    let newData = data;\n                    newData.debts.splice(index, 1);\n                    this.setState({\n                      debtMapData: this.buildDebtMapTable(newData, multiplier),\n                      debtMapTotal: newTotal\n                    });\n                  }\n                }}\n              />\n            </td>\n          </tr>\n        );\n      });\n    } else {\n      return data.debts.map((debt, index) => {\n        return (\n          <tr key={index}>\n            <td>{debt.userIDTwo}</td>\n            <td>{debt.userIDOne}</td>\n            <td>{debt.amount * multiplier}</td>\n            <td>{debt.notes}</td>\n            <td>\n              <button\n                onClick={() => {\n                  if (data.debts.length <= 1) {\n                    this.props.deleteDebtMap({\n                      ownerEmail: debt.userIDTwo,\n                      slaveEmail: debt.userIDOne\n                    });\n                    this.setState({\n                      debtMapData: null,\n                      debtMapTotal: 0\n                    });\n                  } else {\n                    this.props.deleteDebt({\n                      index: index,\n                      ownerEmail: debt.userIDTwo,\n                      slaveEmail: debt.userIDOne\n                    });\n                    let newTotal = this.state.debtMapTotal + debt.amount;\n                    let newData = data;\n                    newData.debts.splice(index, 1);\n                    this.setState({\n                      debtMapData: this.buildDebtMapTable(newData, multiplier),\n                      debtMapTotal: newTotal\n                    });\n                  }\n                }}\n              />\n            </td>\n          </tr>\n        );\n      });\n    }\n  }\n\n  render() {\n    return (\n      <DisplayDebts\n        handleOwnerEmail={event =>\n          this.setState({ ownerEmail: event.target.value })\n        }\n        handleSlaveEmail={event =>\n          this.setState({ slaveEmail: event.target.value })\n        }\n        handleSingleSlaveEmail={event =>\n          this.setState({ singleSlaveEmail: event.target.value })\n        }\n        handleSingleOwnerEmail={event =>\n          this.setState({ singleOwnerEmail: event.target.value })\n        }\n        setTotalDebtMapAmount={debtMapTotal =>\n          this.setState({ debtMapTotal: debtMapTotal })\n        }\n        setDebtMapData={debtMapData =>\n          this.setState({ debtMapData: debtMapData })\n        }\n        setTotalDebtsAmount={allDebtsTotal =>\n          this.setState({ allDebtsTotal: allDebtsTotal })\n        }\n        setTotalCreditsAmount={allCreditsTotal =>\n          this.setState({ allCreditsTotal: allCreditsTotal })\n        }\n        setDebtsData={allDebtsData =>\n          this.setState({ allDebtsData: allDebtsData })\n        }\n        setCreditsData={allCreditsData =>\n          this.setState({ allCreditsData: allCreditsData })\n        }\n        setNumDebts={numDebts => this.setState({ numDebts: numDebts })}\n        setNumCredits={numCredits => this.setState({ numCredits: numCredits })}\n        buildDebtMapTable={this.buildDebtMapTable}\n        buildDebtsTable={this.buildDebtsTable}\n        buildCreditsTable={this.buildCreditsTable}\n        emails={this.props.emails}\n        users={this.props.users}\n        debtMap={this.props.debtMap}\n        debtList={this.props.debtList}\n        ownerEmail={this.state.ownerEmail}\n        slaveEmail={this.state.slaveEmail}\n        debtMapData={this.state.debtMapData}\n        debtMapTotal={this.state.debtMapTotal}\n        allDebtsData={this.state.allDebtsData}\n        allDebtsTotal={this.state.allDebtsTotal}\n        singleSlaveEmail={this.state.singleSlaveEmail}\n        singleOwnerEmail={this.state.singleOwnerEmail}\n        allCreditsTotal={this.state.allCreditsTotal}\n        allCreditsData={this.state.allCreditsData}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  emails: state.emails,\n  users: state.users,\n  debtMap: state.debtMap,\n  debtList: state.debtList\n});\n\nconst mapDispatchToProps = dispatch => ({\n  deleteDebtMap: data => dispatch(deleteDebtMap(data)),\n  deleteDebt: data => dispatch(deleteDebt(data))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(DisplayDebtsContainer);\n","import React from \"react\";\nimport AddDebtContainer from \"./addDebtContainer\";\nimport DisplayDebtsContainer from \"./displayDebtsContainer\";\n\nexport default class ManageDebtsContainer extends React.Component {\n  render() {\n    return (\n      <div>\n        <AddDebtContainer />\n        <DisplayDebtsContainer />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport \"./index.css\";\n\nexport const HomePage = () => (\n  <div className=\"container\">\n    <h3>Welcome to How Much Do I Owe You!</h3>\n    <p>\n      This app allows you to track purchaes you make for others and vice versa\n    </p>\n    <p>\n      To begin, go to the Manage Users page and add some users, then you can add\n      purchases on the Manage Debts page!\n    </p>\n    <p>As a side note, all data is stored in cookies, however, if you would like to get a actual copy of your data refer to the Manage Data page</p>\n  </div>\n);\n","import React from \"react\";\nimport { HomePage } from \"../components/HomePage/index\";\n\nexport default class HomePageContainer extends React.Component {\n  render() {\n    return (\n      <div>\n        <HomePage />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ManageDataContainer from \"./containers/manageDataContainer\";\nimport ManageUsersContainer from \"./containers/manageUsersContainer\";\nimport ManageDebtsContainer from \"./containers/manageDebtsContainer\";\nimport HomePageContainer from \"./containers/homePageContainer\";\nimport { HashRouter, Route, NavLink, Switch } from \"react-router-dom\";\nimport \"./App.css\";\n\nexport default class App extends React.Component {\n  render() {\n    return (\n      <div className=\"app-container\">\n        <h2 className=\"app-title\">How Much Do I Owe You?</h2>\n        <HashRouter basename=\"/\">\n          <div>\n            <div className=\"nav\">\n              <NavLink\n                className=\"non-selected-link\"\n                activeClassName=\"selected\"\n                exact\n                to=\"/\"\n              >\n                Home\n              </NavLink>\n\n              <NavLink\n                className=\"non-selected-link\"\n                activeClassName=\"selected\"\n                exact\n                to=\"/manageUsers\"\n              >\n                Manage Users\n              </NavLink>\n\n              <NavLink\n                className=\"non-selected-link\"\n                activeClassName=\"selected\"\n                exact\n                to=\"/manageDebts\"\n              >\n                Manage Debts\n              </NavLink>\n\n              <NavLink\n                className=\"non-selected-link\"\n                activeClassName=\"selected\"\n                exact\n                to=\"/manageData\"\n              >\n                Manage Data\n              </NavLink>\n            </div>\n            <Switch>\n              <Route path=\"/manageDebts\" component={ManageDebtsContainer} />\n              <Route path=\"/manageUsers\" component={ManageUsersContainer} />\n              <Route path=\"/manageData\" component={ManageDataContainer} />\n              <Route path=\"/\" component={HomePageContainer} />\n            </Switch>\n          </div>\n        </HashRouter>\n        <p className=\"creator-info\">Created by Damian Sandhu-Franceschi</p>\n        <a\n          className=\"bug creator-info\"\n          href=\"https://github.com/damiansf/HowMuchDoIOweYou/issues\"\n        >\n          Report a bug\n        </a>\n      </div>\n    );\n  }\n}\n","import * as actionConst from \"../actions/action-constants\";\n\nimport { checkForDebtInstance } from \"../utils\";\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case actionConst.addDebtInstance: {\n      return {\n        ...state,\n        debtList: [...state.debtList, action.payload.key],\n        debtMap: {\n          ...state.debtMap,\n          [action.payload.key]: {\n            debts: action.payload.debts\n          }\n        }\n      };\n    }\n    case actionConst.deleteDebt: {\n      let id = action.payload.userIDOne + action.payload.userIDTwo;\n      return {\n        ...state,\n        debtMap: {\n          ...state.debtMap,\n          [id]: {\n            debts: [\n              ...state.debtMap[id].debts.slice(0, action.payload.index),\n              ...state.debtMap[id].debts.slice(action.payload.index + 1)\n            ]\n          }\n        }\n      };\n    }\n    case actionConst.deleteUser: {\n      let newUserMap = {};\n      state.emails.forEach(email => {\n        if (email !== action.payload.email) {\n          newUserMap[email] = state.users[email];\n        }\n      });\n      return {\n        ...state,\n        emails: state.emails.filter(email => email !== action.payload.email),\n        users: newUserMap\n      };\n    }\n    case actionConst.deleteDebtMap: {\n      let id = action.payload.userIDOne + action.payload.userIDTwo;\n      let newDebtMap = {};\n      state.debtList.forEach(debt => {\n        if (debt !== id) {\n          newDebtMap[debt] = state.debtMap[debt];\n        }\n      });\n      return {\n        ...state,\n        debtList: state.debtList.filter(debt => debt !== id),\n        debtMap: newDebtMap\n      };\n    }\n    case actionConst.clearData: {\n      return {\n        emails: [],\n        users: {},\n        debtMap: {},\n        debtList: []\n      };\n    }\n    case actionConst.addUser: {\n      return {\n        ...state,\n        emails: [...state.emails, action.email],\n        users: {\n          ...state.users,\n          [action.email]: action.payload\n        }\n      };\n    }\n    case actionConst.addDebt: {\n      let id = action.payload.userIDOne + action.payload.userIDTwo;\n\n      if (\n        checkForDebtInstance(\n          state.debtList,\n          action.payload.userIDOne,\n          action.payload.userIDTwo\n        )\n      ) {\n        return {\n          ...state,\n          debtMap: {\n            ...state.debtMap,\n            [id]: {\n              debts: [...state.debtMap[id].debts, action.payload]\n            }\n          }\n        };\n      } else {\n        return {\n          ...state,\n          debtList: [...state.debtList, id],\n          debtMap: {\n            ...state.debtMap,\n            [id]: {\n              debts: [action.payload]\n            }\n          }\n        };\n      }\n    }\n    default: {\n      return state;\n    }\n  }\n}\n\nexport default reducer;\n","import { createStore, applyMiddleware } from \"redux\";\nimport reducer from \"./reducers/reducer\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport reduxCookiesMiddleware from \"redux-cookies-middleware\";\nimport { getStateFromCookies } from \"redux-cookies-middleware\";\n\nconst defaultState = {\n  emails: [],\n  users: {},\n  debtMap: {},\n  debtList: []\n};\n\n\nconst cookiePaths = {\n    \"emails\": { name: \"HMDIOY_EMAILS\" },\n    \"users\": { name: \"HMDIOY_USERS\" },\n    \"debtMap\": { name: \"HMDIOY_DEBTMAP\" },\n    \"debtList\": { name: \"HMDIOY_DEBTLIST\" },\n}\n\nlet initialState = getStateFromCookies(defaultState, cookiePaths);\n\nif(!initialState.emails) {\n    initialState.emails = [];\n}\n\nif(!initialState.users) {\n    initialState.users = {};\n}\n\nif(!initialState.debtMap) {\n    initialState.debtMap = {};\n}\n\nif(!initialState.debtList) {\n    initialState.debtList = [];\n}\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(reduxCookiesMiddleware(cookiePaths)))\n);\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}