{"version":3,"sources":["components/ManageData/index.js","actions/action-constants.js","utils.js","actions/actionDefs.js","containers/manageDataContainer.js","components/AddUser/index.js","containers/addUserContainer.js","components/DisplayUsers/index.js","containers/displayUsersContainer.js","containers/manageUsersContainer.js","components/AddDebt/index.js","containers/addDebtContainer.js","components/DisplayDebts/index.js","containers/displayDebtsContainer.js","containers/manageDebtsContainer.js","components/HomePage/index.js","containers/homePageContainer.js","App.js","reducers/reducer.js","store.js","index.js"],"names":["ManageData","_ref","clearData","uploadData","data","react_default","a","createElement","className","href","download","index_es","icon","faDownload","type","title","id","onChange","e","htmlFor","faUpload","onClick","window","confirm","alert","addUser","addDebt","deleteDebt","deleteUser","deleteDebtMap","addDebtInstance","checkForDebtInstance","debtArray","idOne","idTwo","includes","orderEmails","firstEmail","secondEmail","userOne","userTwo","localeCompare","getIdentifier","email","user","key","value","firstName","lastName","getIdentifierString","actionConst","payload","_orderEmails2","ownerEmail","slaveEmail","userIDOne","userIDTwo","multiplier","amount","notes","timeStamp","Date","now","ManageDataContainer","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","bind","assertThisInitialized","_this2","file","target","files","reader","FileReader","onload","obj","JSON","parse","result","emails","forEach","props","users","debtList","debt","debtMap","debts","debtItem","existing","existingDebtItem","error","readAsText","File","FileList","Blob","ManageData_ManageData","URL","createObjectURL","stringify","React","Component","connect","dispatch","AddUser","handleFirstName","handleLastName","handleEmail","name","autoComplete","AddUserContainer","AddUser_AddUser","event","setState","DisplayUsers","editUser","modalIsOpen","editEmail","saveEdit","cancelEdit","oldEmail","tableHead","noUsers","lib_default","isOpen","onRequestClose","contentLabel","disabled","map","emailTwo","_orderEmails","setTimeout","Modal","setAppElement","DisplayUsers_DisplayUsers","length","ManageUsersContainer","addUserContainer","displayUsersContainer","AddDebt","handleOwnerEmail","handleSlaveEmail","handleNotes","handleAmount","debtChangeCounter","AddDebtContainer","AddDebt_AddDebt","isNaN","DisplayDebts","setTotalDebtMapAmount","setDebtMapData","buildDebtMapTable","debtMapData","debtMapTotal","allDebtsData","allDebtsTotal","handleSingleSlaveEmail","singleSlaveEmail","handleSingleOwnerEmail","singleOwnerEmail","allCreditsTotal","allCreditsData","noTransactions","debtMapTableHead","setNoTransactionExisting","noTransactionsExisting","noDebtsExisiting","noDebts","noCreditsExisting","noCredits","debtTableHead","creditTableHead","buildDebtsData","buildCreditsData","reduce","prev","curr","DisplayDebtsContainer","numDebts","numCredits","debtsArray","creditsArray","buildDebtsTable","buildCreditsTable","currAmount","countCredits","push","_this3","countDebts","_this4","newDebtsArray","newDebtsData","newDebtsTotal","_this5","newCreditsArray","newCreditsData","newCreditsTotal","credit","identifierOrder","_this6","index","Math","abs","newTotal","newData","splice","_this7","DisplayDebts_DisplayDebts","ManageDebtsContainer","addDebtContainer","displayDebtsContainer","HomePage","HomePageContainer","HomePage_HomePage","App","react_router_dom","basename","activeClassName","exact","to","react_router","path","component","reducer","action","objectSpread","concat","toConsumableArray","defineProperty","slice","newUserMap","filter","newDebtMap","cookiePaths","initialState","getStateFromCookies","store","createStore","composeWithDevTools","applyMiddleware","reduxCookiesMiddleware","ReactDOM","render","es","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.b0f925b9.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./index.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faDownload } from \"@fortawesome/free-solid-svg-icons\";\nimport { faUpload } from \"@fortawesome/free-solid-svg-icons\";\n\nexport const ManageData = ({ clearData, uploadData, data }) => (\n  <div>\n    <div className=\"containers\">\n      <h2 className=\"titles\" >Data, Data Everywhere!</h2>\n      <div>\n        <label className=\"download\">\n          <a href={data} download={\"data.json\"} className=\"download-link\">\n            <FontAwesomeIcon icon={faDownload} /> Download All Data\n          </a>\n        </label>\n        <input\n          type=\"file\"\n          title=\"Upload Data\"\n          className=\"upload-button\"\n          id=\"upload\"\n          onChange={e => {\n            uploadData(e);\n          }}\n        />\n        <label htmlFor=\"upload\" className=\"upload-file\">\n          <FontAwesomeIcon icon={faUpload} /> Upload Data\n        </label>\n        <span\n          onClick={() => {\n            let response = window.confirm(\n              \"Are you sure you want to wipe all data?\"\n            );\n            if (response) {\n              clearData();\n              alert(\"Data Cleared\");\n            }\n          }}\n          className=\"clear\"\n        >\n          Clear Data\n        </span>\n      </div>\n    </div>\n  </div>\n);\n","export const addUser = \"ADD_USER\";\nexport const addDebt = \"ADD_DEBT\";\nexport const clearData = \"CLEAR_DATA\";\nexport const deleteDebt = \"DELETE_DEBT\";\nexport const deleteUser = \"DELETE_USER\";\nexport const deleteDebtMap = \"DELETE_DEBT_MAP\";\nexport const addDebtInstance = \"ADD_DEBT_INSTANCE\";","import React from \"react\";\n\nexport function checkForDebtInstance(debtArray, idOne, idTwo) {\n  return debtArray.includes(idOne + idTwo);\n}\n\nexport function orderEmails(firstEmail, secondEmail) {\n  let userOne = null;\n  let userTwo = null;\n\n  if (firstEmail.localeCompare(secondEmail) < 0) {\n    userOne = firstEmail;\n    userTwo = secondEmail;\n  } else {\n    userOne = secondEmail;\n    userTwo = firstEmail;\n  }\n\n  return {\n    userOne,\n    userTwo\n  };\n}\n\nexport function getIdentifier(email, user) {\n  return (\n    <option key={email} value={email}>\n      {user.firstName + \" \" + user.lastName + \" (\" + email + \")\"}\n    </option>\n  );\n}\n\nexport function getIdentifierString(email, user) {\n  return user.firstName + \" \" + user.lastName + \" (\" + email + \")\";\n}\n","import * as actionConst from \"./action-constants\";\nimport { orderEmails } from \"../utils\";\n\nexport function addUser(data) {\n  return {\n    type: actionConst.addUser,\n    payload: {\n      firstName: data.firstName,\n      lastName: data.lastName,\n      email: data.email\n    },\n    email: data.email\n  };\n}\n\nexport function clearData() {\n  return {\n    type: actionConst.clearData\n  };\n}\n\nexport function deleteDebt(data) {\n  let { userOne, userTwo } = orderEmails(data.ownerEmail, data.slaveEmail);\n\n  return {\n    type: actionConst.deleteDebt,\n    payload: { userIDOne: userOne, userIDTwo: userTwo, index: data.index }\n  };\n}\n\nexport function deleteUser(data) {\n  return {\n    type: actionConst.deleteUser,\n    payload: {\n      email: data.email\n    }\n  };\n}\n\nexport function deleteDebtMap(data) {\n  let { userOne, userTwo } = orderEmails(data.ownerEmail, data.slaveEmail);\n\n  return {\n    type: actionConst.deleteDebtMap,\n    payload: { userIDOne: userOne, userIDTwo: userTwo }\n  };\n}\n\nexport function addDebt(data) {\n  let userOne = \"\";\n  let userTwo = \"\";\n  let multiplier = 1;\n\n  if (data.userOne.localeCompare(data.userTwo) < 0) {\n    userOne = data.userOne;\n    userTwo = data.userTwo;\n    multiplier = -1;\n  } else {\n    userOne = data.userTwo;\n    userTwo = data.userOne;\n  }\n\n  return {\n    type: actionConst.addDebt,\n    payload: {\n      userIDOne: userOne,\n      userIDTwo: userTwo,\n      amount: data.amount * multiplier,\n      notes: data.notes,\n      timeStamp: Date.now()\n    }\n  };\n}\n\nexport function addDebtInstance(data) {\n  return {\n    type: actionConst.addDebtInstance,\n    payload: {\n      key: data.key,\n      debts: data.debts\n    }\n  };\n}\n","import { ManageData } from \"../components/ManageData/index\";\nimport {\n  clearData,\n  addUser,\n  addDebt,\n  addDebtInstance\n} from \"../actions/actionDefs\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\n\nclass ManageDataContainer extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {};\n\n    this.uploadData = this.uploadData.bind(this);\n  }\n\n  uploadData(e) {\n    let file = e.target.files[0];\n\n    if (!file.type.includes(\"json\")) {\n      alert(\"Invalid file type, only accept json files\");\n      return;\n    }\n\n    let reader = new FileReader();\n\n    reader.onload = (() => {\n      return e => {\n        try {\n          let obj = JSON.parse(e.target.result);\n\n          obj.emails.forEach(email => {\n            if (!this.props.emails.includes(email)) {\n              this.props.addUser({\n                firstName: obj.users[email].firstName,\n                lastName: obj.users[email].lastName,\n                email: obj.users[email].email\n              });\n            }\n          });\n\n          obj.debtList.forEach(debt => {\n            if (!this.props.debtList.includes(debt)) {\n              this.props.addDebtInstance({\n                debts: obj.debtMap[debt].debts,\n                key: debt\n              });\n            } else {\n              obj.debtMap[debt].debts.forEach(debtItem => {\n                let existing = false;\n                this.props.debtMap[debt].debts.forEach(existingDebtItem => {\n                  if (existingDebtItem.timeStamp === debtItem.timeStamp) {\n                    existing = true;\n                  }\n                });\n                if (!existing) {\n                  this.props.addDebt({\n                    userOne: debtItem.userIDOne,\n                    userTwo: debtItem.userIDTwo,\n                    amount: debtItem.amount * -1,\n                    notes: debtItem.notes\n                  });\n                }\n              });\n            }\n          });\n          alert(\"Data Uploaded\");\n        } catch (error) {\n          alert(\"Error parsing json: \" + error);\n        }\n      };\n    })(file);\n    reader.readAsText(file);\n  }\n\n  render() {\n    if (window.File && window.FileReader && window.FileList && window.Blob) {\n      return (\n        <ManageData\n          clearData={this.props.clearData}\n          uploadData={this.uploadData}\n          data={URL.createObjectURL(\n            new Blob(\n              [\n                JSON.stringify({\n                  users: this.props.users,\n                  emails: this.props.emails,\n                  debtList: this.props.debtList,\n                  debtMap: this.props.debtMap\n                })\n              ],\n              {\n                type: \"application/json\"\n              }\n            )\n          )}\n        />\n      );\n    } else {\n      alert(\"File API's are not available\");\n      return(<div></div>);\n    }\n  }\n}\n\nconst mapStateToProps = state => ({\n  users: state.users,\n  emails: state.emails,\n  debtList: state.debtList,\n  debtMap: state.debtMap\n});\n\nconst mapDispatchToProps = dispatch => ({\n  clearData: () => dispatch(clearData()),\n  addUser: data => dispatch(addUser(data)),\n  addDebt: data => dispatch(addDebt(data)),\n  addDebtInstance: data => dispatch(addDebtInstance(data))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ManageDataContainer);\n","import React from \"react\";\n\nexport const AddUser = ({\n  handleFirstName,\n  handleLastName,\n  handleEmail,\n  addUser,\n  emails,\n  firstName,\n  lastName,\n  email\n}) => (\n  <div className=\"containers\">\n    <h2 className=\"titles\">Create User</h2>\n    <form>\n      <div>\n        <div>\n          <h3>FirstName</h3>\n        </div>\n        <input\n          type=\"text\"\n          name=\"firstName\"\n          value={firstName}\n          autoComplete=\"new-password\"\n          className=\"input-boxes\"\n          onChange={e => handleFirstName(e)}\n        />\n        <div>\n          <h3>LastName</h3>\n        </div>\n        <input\n          type=\"text\"\n          name=\"lastName\"\n          value={lastName}\n          autoComplete=\"new-password\"\n          className=\"input-boxes\"\n          onChange={e => handleLastName(e)}\n        />\n      </div>\n      <div>\n        <div>\n          <h3>Email</h3>\n        </div>\n        <input\n          type=\"text\"\n          name=\"email\"\n          value={email}\n          autoComplete=\"new-password\"\n          className=\"input-boxes\"\n          onChange={e => handleEmail(e)}\n        />\n      </div>\n      <input\n        type=\"button\"\n        value=\"Submit\"\n        className=\"submit-button\"\n        onClick={() => {\n          if (!emails.includes(email)) {\n            if (firstName !== \"\" || lastName !== \"\" || email !== \"\") {\n              addUser({\n                firstName: firstName,\n                lastName: lastName,\n                email: email\n              });\n              alert(\"User added\");\n            } else {\n              alert(\"Please fill in all fields\");\n            }\n          } else {\n            alert(\"User with same email already exists\");\n          }\n        }}\n      />\n    </form>\n  </div>\n);\n","import { AddUser } from \"../components/AddUser/index\";\nimport { addUser } from \"../actions/actionDefs\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\n\nclass AddUserContainer extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\"\n    };\n  }\n\n  render() {\n    return (\n      <AddUser\n        email={this.state.email}\n        lastName={this.state.lastName}\n        firstName={this.state.firstName}\n        handleEmail={event => this.setState({ email: event.target.value })}\n        handleLastName={event =>\n          this.setState({ lastName: event.target.value })\n        }\n        handleFirstName={event =>\n          this.setState({ firstName: event.target.value })\n        }\n        emails={this.props.emails}\n        addUser={this.props.addUser}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  emails: state.emails\n});\n\nconst mapDispatchToProps = dispatch => ({\n  addUser: data => dispatch(addUser(data))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AddUserContainer);\n","import React from \"react\";\nimport Modal from \"react-modal\";\nimport \"./index.css\";\n\nexport const DisplayUsers = ({\n  users,\n  emails,\n  debtList,\n  deleteUser,\n  deleteDebtMap,\n  checkForDebtInstance,\n  editUser,\n  orderEmails,\n  modalIsOpen,\n  editEmail,\n  firstName,\n  lastName,\n  email,\n  saveEdit,\n  cancelEdit,\n  handleLastName,\n  handleFirstName,\n  handleEmail,\n  addUser,\n  oldEmail,\n  tableHead,\n  noUsers\n}) => (\n  <div>\n    <div>\n      <Modal\n        isOpen={modalIsOpen}\n        onRequestClose={cancelEdit}\n        contentLabel=\"Edit User\"\n        className=\"modal-style\"\n      >\n        <form>\n          <div>\n            <div>\n              <h3>FirstName</h3>\n            </div>\n            <input\n              type=\"text\"\n              name=\"firstName\"\n              value={firstName}\n              autoComplete=\"new-password\"\n              className=\"input-boxes\"\n              onChange={e => handleFirstName(e)}\n            />\n            <div>\n              <h3>LastName</h3>\n            </div>\n            <input\n              type=\"text\"\n              name=\"lastName\"\n              value={lastName}\n              autoComplete=\"new-password\"\n              className=\"input-boxes\"\n              onChange={e => handleLastName(e)}\n            />\n          </div>\n          <div>\n            <div>\n              <h3>Email</h3>\n            </div>\n            <input\n              type=\"text\"\n              name=\"email\"\n              value={email}\n              onChange={e => handleEmail(e)}\n              className=\"input-boxes\"\n              disabled={editEmail ? \"\" : \"disabled\"}\n            />\n          </div>\n          <input\n            type=\"button\"\n            value=\"Save\"\n            className=\"submit-button\"\n            onClick={() => {\n              if (editEmail) {\n                if (!emails.includes(email) || email === oldEmail) {\n                  deleteUser({ email: oldEmail });\n                  addUser({\n                    firstName: firstName,\n                    lastName: lastName,\n                    email: email\n                  });\n                  saveEdit();\n                } else {\n                  alert(\"User with same email already exists\");\n                }\n              } else {\n                deleteUser({ email: email });\n                addUser({\n                  firstName: firstName,\n                  lastName: lastName,\n                  email: email\n                });\n                saveEdit();\n              }\n            }}\n          />\n          <input\n            type=\"button\"\n            value=\"Cancel\"\n            className=\"submit-button\"\n            onClick={() => {\n              cancelEdit();\n            }}\n          />\n        </form>\n      </Modal>\n    </div>\n    <div className=\"containers\">\n      <h2 className=\"titles\">Current Users</h2>\n      {noUsers}\n      <table className=\"users-table\">\n        {tableHead}\n        <tbody>\n          {emails.map(email => {\n            return (\n              <tr key={users[email].email}>\n                <td>{users[email].firstName}</td>\n                <td>{users[email].lastName}</td>\n                <td>{users[email].email}</td>\n                <td>\n                  <span\n                    className=\"table-button\"\n                    onClick={() => {\n                      let response = window.confirm(\n                        \"Are you sure you want to delete this user?\"\n                      );\n                      if (response) {\n                        emails.forEach(emailTwo => {\n                          let { userOne, userTwo } = orderEmails(\n                            email,\n                            emailTwo\n                          );\n                          if (\n                            checkForDebtInstance(debtList, userOne, userTwo)\n                          ) {\n                            deleteDebtMap({\n                              ownerEmail: userOne,\n                              slaveEmail: userTwo\n                            });\n                          }\n                        });\n\n                        deleteUser({ email: email });\n                      }\n                    }}\n                  >\n                    Delete\n                  </span>\n                  <span\n                    className=\"table-button\"\n                    onClick={() => {\n                      let editEmail = true;\n                      emails.forEach(emailTwo => {\n                        let { userOne, userTwo } = orderEmails(email, emailTwo);\n                        if (checkForDebtInstance(debtList, userOne, userTwo)) {\n                          editEmail = false;\n                        }\n                      });\n                      editUser(email, editEmail);\n                      if (!editEmail) {\n                        setTimeout(() => {\n                          alert(\n                            \"Note, only the first and last name can be changed for this user as they are involved in existing debts\"\n                          );\n                        }, 100);\n                      }\n                    }}\n                  >\n                    Edit\n                  </span>\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </div>\n  </div>\n);\n","import { DisplayUsers } from \"../components/DisplayUsers/index\";\nimport React from \"react\";\nimport { deleteUser, deleteDebtMap, addUser } from \"../actions/actionDefs\";\nimport { checkForDebtInstance, orderEmails } from \"../utils\";\nimport { connect } from \"react-redux\";\nimport Modal from \"react-modal\";\n\nModal.setAppElement(\"#root\");\n\nconst noUsers = <h3>No Users</h3>;\nconst tableHead = (\n  <thead>\n    <tr>\n      <th>First Name</th>\n      <th>Last Name</th>\n      <th>Email</th>\n      <th>Manage</th>\n    </tr>\n  </thead>\n);\n\nclass AddUserContainer extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      modalIsOpen: false,\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      oldEmail: \"\",\n      editEmail: false\n    };\n\n    this.editUser = this.editUser.bind(this);\n    this.cancelEdit = this.cancelEdit.bind(this);\n    this.saveEdit = this.saveEdit.bind(this);\n  }\n\n  editUser(email, editEmail) {\n    this.setState({\n      modalIsOpen: true,\n      firstName: this.props.users[email].firstName,\n      lastName: this.props.users[email].lastName,\n      email: email,\n      oldEmail: email,\n      editEmail: editEmail\n    });\n  }\n\n  cancelEdit() {\n    this.setState({\n      modalIsOpen: false,\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      editEmail: false,\n      oldEmail: \"\"\n    });\n  }\n\n  saveEdit() {\n    this.setState({\n      modalIsOpen: false,\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      editEmail: false,\n      oldEmail: \"\"\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <DisplayUsers\n          users={this.props.users}\n          emails={this.props.emails}\n          debtList={this.props.debtList}\n          deleteUser={this.props.deleteUser}\n          deleteDebtMap={this.props.deleteDebtMap}\n          checkForDebtInstance={checkForDebtInstance}\n          editUser={this.editUser}\n          orderEmails={orderEmails}\n          modalIsOpen={this.state.modalIsOpen}\n          cancelEdit={this.cancelEdit}\n          editEmail={this.state.editEmail}\n          firstName={this.state.firstName}\n          lastName={this.state.lastName}\n          saveEdit={this.saveEdit}\n          email={this.state.email}\n          handleLastName={event =>\n            this.setState({ lastName: event.target.value })\n          }\n          handleFirstName={event =>\n            this.setState({ firstName: event.target.value })\n          }\n          handleEmail={event => this.setState({ email: event.target.value })}\n          addUser={this.props.addUser}\n          oldEmail={this.state.oldEmail}\n          tableHead={this.props.emails.length > 0 ? tableHead : null}\n          noUsers={this.props.emails.length > 0 ? null : noUsers}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  users: state.users,\n  emails: state.emails,\n  debtList: state.debtList\n});\n\nconst mapDispatchToProps = dispatch => ({\n  deleteUser: data => dispatch(deleteUser(data)),\n  deleteDebtMap: data => dispatch(deleteDebtMap(data)),\n  addUser: data => dispatch(addUser(data))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AddUserContainer);\n","import React from \"react\";\nimport AddUserContainer from \"./addUserContainer\";\nimport DisplayUsersContainer from \"./displayUsersContainer\";\n\nexport default class ManageUsersContainer extends React.Component {\n    render() {\n        return (\n          <div>\n            <AddUserContainer />\n            <DisplayUsersContainer />\n          </div>\n        );\n      }\n}","import React from \"react\";\nimport { getIdentifier } from \"../../utils\";\nimport \"./index.css\";\n\nconst defaultDebitor = \"Select the Debitor\";\nconst defaultCreditor = \"Select the Creditor\";\n\nexport const AddDebt = ({\n  emails,\n  users,\n  addDebt,\n  handleOwnerEmail,\n  handleSlaveEmail,\n  handleNotes,\n  handleAmount,\n  amount,\n  notes,\n  ownerEmail,\n  slaveEmail,\n  debtChangeCounter\n}) => (\n  <div className=\"containers\">\n    <h2 className=\"titles\">Add Debt</h2>\n    <form>\n      <div>\n        <select\n          className=\"select-box\"\n          onChange={e => {\n            handleOwnerEmail(e);\n          }}\n        >\n          <option>{defaultCreditor}</option>\n          {emails.map(email => {\n            return getIdentifier(email, users[email]);\n          })}\n        </select>\n      </div>\n      <div>\n        <select\n          className=\"select-box select-debitor\"\n          onChange={e => {\n            handleSlaveEmail(e);\n          }}\n        >\n          <option>{defaultDebitor}</option>\n          {emails.map(email => {\n            return getIdentifier(email, users[email]);\n          })}\n        </select>\n      </div>\n\n      <h3>Amount ($)</h3>\n      <input\n        type=\"text\"\n        name=\"amount\"\n        value={amount}\n        className=\"input-boxes\"\n        onChange={e => handleAmount(e)}\n      />\n\n      <h3>Notes</h3>\n      <input\n        type=\"text\"\n        name=\"notes\"\n        value={notes}\n        className=\"input-boxes\"\n        onChange={e => handleNotes(e)}\n      />\n      <div>\n        <input\n          type=\"button\"\n          value=\"Submit\"\n          className=\"submit-button\"\n          onClick={() => {\n            if (\n              ownerEmail !== defaultCreditor &&\n              slaveEmail !== defaultDebitor\n            ) {\n              if (slaveEmail === ownerEmail) {\n                alert(\"Debitor cannot be the same as the Creditor\");\n              } else {\n                addDebt({\n                  userOne: ownerEmail,\n                  userTwo: slaveEmail,\n                  amount: amount,\n                  notes: notes\n                });\n                debtChangeCounter();\n                alert(\"Debt record added\");\n              }\n            } else {\n              alert(\"Please select a debitor and a creditor\");\n            }\n          }}\n        />\n      </div>\n    </form>\n  </div>\n);\n","import { AddDebt } from \"../components/AddDebt/index\";\nimport { addDebt } from \"../actions/actionDefs\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\n\nclass AddDebtContainer extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      amount: \"\",\n      notes: \"\",\n      ownerEmail: \"Select the Creditor\",\n      slaveEmail: \"Select the Debitor\"\n    };\n  }\n\n  render() {\n    return (\n      <AddDebt\n        emails={this.props.emails}\n        users={this.props.users}\n        notes={this.state.notes}\n        amount={this.state.amount}\n        ownerEmail={this.state.ownerEmail}\n        slaveEmail={this.state.slaveEmail}\n        addDebt={this.props.addDebt}\n        handleOwnerEmail={event =>\n          this.setState({ ownerEmail: event.target.value })\n        }\n        handleSlaveEmail={event =>\n          this.setState({ slaveEmail: event.target.value })\n        }\n        handleNotes={event => this.setState({ notes: event.target.value })}\n        handleAmount={event => {\n          if (!isNaN(event.target.value)) {\n            this.setState({ amount: event.target.value });\n          }\n        }}\n        debtChangeCounter={this.props.debtChangeCounter}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  emails: state.emails,\n  users: state.users\n});\n\nconst mapDispatchToProps = dispatch => ({\n  addDebt: data => dispatch(addDebt(data))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AddDebtContainer);\n","import React from \"react\";\nimport { getIdentifier, getIdentifierString } from \"../../utils\";\nimport \"./index.css\";\n\nconst defaultDebitor = \"Select First User\";\nconst defaultCreditor = \"Select Second User\";\nconst defaultSingleDebitor = \"Select a Debitor\";\nconst defaultSingleCreditor = \"Select a Creditor\";\n\nexport const DisplayDebts = ({\n  handleOwnerEmail,\n  handleSlaveEmail,\n  setTotalDebtMapAmount,\n  setDebtMapData,\n  buildDebtMapTable,\n  emails,\n  users,\n  debtMap,\n  debtList,\n  ownerEmail,\n  slaveEmail,\n  debtMapData,\n  debtMapTotal,\n  allDebtsData,\n  allDebtsTotal,\n  handleSingleSlaveEmail,\n  singleSlaveEmail,\n  handleSingleOwnerEmail,\n  singleOwnerEmail,\n  allCreditsTotal,\n  allCreditsData,\n  noTransactions,\n  debtMapTableHead,\n  setNoTransactionExisting,\n  noTransactionsExisting,\n  noDebtsExisiting,\n  noDebts,\n  noCreditsExisting,\n  noCredits,\n  debtTableHead,\n  creditTableHead,\n  buildDebtsData,\n  buildCreditsData\n}) => (\n  <div className=\"containers\">\n    <h2 className=\"titles\">View Debts/Credits Between 2 Users</h2>\n    <form>\n      <select\n        onChange={e => {\n          handleSlaveEmail(e);\n        }}\n        className=\"select-box-data\"\n      >\n        <option>{defaultDebitor}</option>\n        {emails.map(email => {\n          return getIdentifier(email, users[email]);\n        })}\n      </select>\n      <select\n        onChange={e => {\n          handleOwnerEmail(e);\n        }}\n        className=\"select-box-data\"\n      >\n        <option>{defaultCreditor}</option>\n        {emails.map(email => {\n          return getIdentifier(email, users[email]);\n        })}\n      </select>\n      <input\n        type=\"button\"\n        value=\"Submit\"\n        className=\"submit-button horizontal-submit\"\n        onClick={() => {\n          let data = null;\n          let amount = 0;\n          if (defaultCreditor !== ownerEmail && defaultDebitor !== slaveEmail) {\n            if (ownerEmail === slaveEmail) {\n              alert(\"Debitor email cannot be the same as the Creditor email\");\n            } else {\n              if (ownerEmail.localeCompare(slaveEmail) < 0) {\n                if (debtList.includes(ownerEmail + slaveEmail)) {\n                  data = buildDebtMapTable(\n                    debtMap[ownerEmail + slaveEmail],\n                    -1\n                  );\n                  amount =\n                    debtMap[ownerEmail + slaveEmail].debts.reduce(\n                      (prev, curr) => prev + curr.amount,\n                      0\n                    ) * -1;\n                } else {\n                  setNoTransactionExisting(true);\n                }\n              } else {\n                if (debtList.includes(slaveEmail + ownerEmail)) {\n                  data = buildDebtMapTable(debtMap[slaveEmail + ownerEmail], 1);\n                  amount = debtMap[slaveEmail + ownerEmail].debts.reduce(\n                    (prev, curr) => prev + curr.amount,\n                    0\n                  );\n                } else {\n                  setNoTransactionExisting(true);\n                }\n              }\n              setTotalDebtMapAmount(amount);\n              setDebtMapData(data);\n            }\n          } else {\n            alert(\"Please select a debitor email and a creditor email\");\n          }\n        }}\n      />\n    </form>\n    {noTransactions}\n    <table className=\"tables\">\n      {debtMapTableHead}\n      <tbody>{debtMapData}</tbody>\n    </table>\n    <h3>\n      {noTransactionsExisting\n        ? null\n        : debtMapData === null\n        ? null\n        : debtMapTotal >= 0\n        ? getIdentifierString(slaveEmail, users[slaveEmail]) +\n          \" owes \" +\n          getIdentifierString(ownerEmail, users[ownerEmail]) +\n          \" \" +\n          debtMapTotal +\n          \"$\"\n        : getIdentifierString(ownerEmail, users[ownerEmail]) +\n          \" owes \" +\n          getIdentifierString(slaveEmail, users[slaveEmail]) +\n          \" \" +\n          debtMapTotal * -1 +\n          \"$\"}\n    </h3>\n    <h2 className=\"titles\">View Users Debts</h2>\n    <form>\n      <select\n        className=\"select-box-data\"\n        onChange={e => handleSingleSlaveEmail(e)}\n      >\n        <option>{defaultSingleDebitor}</option>\n        {emails.map(email => {\n          return getIdentifier(email, users[email]);\n        })}\n      </select>\n      <input\n        type=\"button\"\n        value=\"Submit\"\n        className=\"submit-button horizontal-submit\"\n        onClick={() => {\n          if (defaultSingleDebitor === singleSlaveEmail) {\n            alert(\"Please Select a Debitor\");\n          } else {\n            buildDebtsData(singleSlaveEmail);\n          }\n        }}\n      />\n    </form>\n    {noDebts}\n    <table className=\"tables\">\n      {debtTableHead}\n      <tbody>{allDebtsData}</tbody>\n    </table>\n    <h3>\n      {noDebtsExisiting\n        ? null\n        : allDebtsTotal === 0\n        ? null\n        : \"You are in debt! you owe a total of: \" + allDebtsTotal + \"$\"}\n    </h3>\n    <h2 className=\"titles\">View Users Credits</h2>\n    <form>\n      <select\n        className=\"select-box-data\"\n        onChange={e => handleSingleOwnerEmail(e)}\n      >\n        <option>{defaultSingleCreditor}</option>\n        {emails.map(email => {\n          return getIdentifier(email, users[email]);\n        })}\n      </select>\n      <input\n        type=\"button\"\n        value=\"Submit\"\n        className=\"submit-button horizontal-submit\"\n        onClick={() => {\n          if (singleOwnerEmail === defaultSingleCreditor) {\n            alert(\"Please Select a Creditor\");\n          } else {\n            buildCreditsData(singleOwnerEmail);\n          }\n        }}\n      />\n    </form>\n    {noCredits}\n    <table className=\"tables\">\n      {creditTableHead}\n      <tbody>{allCreditsData}</tbody>\n    </table>\n    <h3>\n      {noCreditsExisting\n        ? null\n        : allCreditsTotal === 0\n        ? null\n        : \"People owe you \" +\n          allCreditsTotal +\n          \"$, maybe consider charging interest\"}\n    </h3>\n  </div>\n);\n","import { DisplayDebts } from \"../components/DisplayDebts/index\";\nimport { deleteDebtMap, deleteDebt } from \"../actions/actionDefs\";\nimport { getIdentifierString } from \"../utils\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\n\nconst noTransactions = <h3 className=\"no-outstanding\">No Unpaid Debts</h3>;\nconst debtMapTableHead = (\n  <thead>\n    <tr>\n      <th className=\"name-cell\">Debitor</th>\n      <th className=\"name-cell\">Creditor</th>\n      <th>Amount</th>\n      <th className=\"notes-cell\">Notes</th>\n      <th>Delete Entry</th>\n    </tr>\n  </thead>\n);\n\nconst noDebts = <h3 className=\"no-outstanding\">You Don't Owe Anyone Money!</h3>;\nconst debtTableHead = (\n  <thead>\n    <tr>\n      <th className=\"name-cell\">Debitor</th>\n      <th className=\"name-cell\">Creditor</th>\n      <th>Total Amount</th>\n      <th>Delete Debts</th>\n    </tr>\n  </thead>\n);\n\nconst noCredits = <h3 className=\"no-outstanding\">No One Owes You Money</h3>;\nconst creditTableHead = (\n  <thead>\n    <tr>\n      <th className=\"name-cell\">Creditor</th>\n      <th className=\"name-cell\">Debitor</th>\n      <th>Total Amount</th>\n      <th>Delete Credi</th>\n    </tr>\n  </thead>\n);\n\nclass DisplayDebtsContainer extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      debtMapData: null,\n      ownerEmail: \"Select Second User\",\n      slaveEmail: \"Select First User\",\n      singleSlaveEmail: \"Select a Debitor\",\n      debtMapTotal: 0,\n      allDebtsData: null,\n      noTransactionsExisting: false,\n      noCreditsExisting: false,\n      noDebtsExisiting: false,\n      allDebtsTotal: 0,\n      singleOwnerEmail: \"Select a Creditor\",\n      allCreditsTotal: 0,\n      allCreditsData: null,\n      numDebts: 0,\n      numCredits: 0,\n      debtsArray: [],\n      creditsArray: []\n    };\n\n    this.buildDebtMapTable = this.buildDebtMapTable.bind(this);\n    this.buildDebtsTable = this.buildDebtsTable.bind(this);\n    this.buildCreditsTable = this.buildCreditsTable.bind(this);\n    this.buildCreditsData = this.buildCreditsData.bind(this);\n    this.buildDebtsData = this.buildDebtsData.bind(this);\n  }\n\n  buildCreditsData(singleOwnerEmail) {\n    let data = [];\n    let amount = 0;\n    let currAmount = 0;\n    let countCredits = 0;\n    let creditsArray = [];\n    this.props.emails.forEach(email => {\n      if (singleOwnerEmail.localeCompare(email) < 0) {\n        if (this.props.debtList.includes(singleOwnerEmail + email)) {\n          currAmount =\n            this.props.debtMap[singleOwnerEmail + email].debts.reduce(\n              (prev, curr) => prev + curr.amount,\n              0\n            ) * -1;\n          amount += currAmount;\n          countCredits++;\n          data.push(\n            this.buildCreditsTable(singleOwnerEmail, email, currAmount)\n          );\n          creditsArray.push({ singleOwnerEmail, email, currAmount });\n        }\n      } else {\n        if (this.props.debtList.includes(email + singleOwnerEmail)) {\n          currAmount = this.props.debtMap[\n            email + singleOwnerEmail\n          ].debts.reduce((prev, curr) => prev + curr.amount, 0);\n          amount += currAmount;\n          countCredits++;\n          data.push(\n            this.buildCreditsTable(singleOwnerEmail, email, currAmount)\n          );\n          creditsArray.push({ singleOwnerEmail, email, currAmount });\n        }\n      }\n    });\n\n    if (amount > 0) {\n      this.setState({\n        allCreditsData: data,\n        allCreditsTotal: amount,\n        numCredits: countCredits,\n        creditsArray: creditsArray,\n        debtMapData: null,\n        debtMapTotal: 0,\n        noTransactionsExisting: false,\n        allDebtsData: null,\n        allDebtsTotal: 0,\n        noDebtsExisiting: false,\n        numDebts: 0,\n        debtsArray: []\n      });\n    } else {\n      this.setState({\n        noCreditsExisting: true,\n        allCreditsData: null,\n        allCreditsTotal: 0,\n        numCredits: countCredits,\n        creditsArray: [],\n        debtMapData: null,\n        debtMapTotal: 0,\n        noTransactionsExisting: false,\n        allDebtsData: null,\n        allDebtsTotal: 0,\n        noDebtsExisiting: false,\n        numDebts: 0,\n        debtsArray: []\n      });\n    }\n  }\n\n  buildDebtsData(singleSlaveEmail) {\n    let data = [];\n    let amount = 0;\n    let currAmount = 0;\n    let countDebts = 0;\n    let debtsArray = [];\n    this.props.emails.forEach(email => {\n      if (singleSlaveEmail.localeCompare(email) < 0) {\n        if (this.props.debtList.includes(singleSlaveEmail + email)) {\n          currAmount = this.props.debtMap[\n            singleSlaveEmail + email\n          ].debts.reduce((prev, curr) => prev + curr.amount, 0);\n          amount += currAmount;\n          countDebts++;\n          data.push(this.buildDebtsTable(email, singleSlaveEmail, currAmount));\n          debtsArray.push({ email, singleSlaveEmail, currAmount });\n        }\n      } else {\n        if (this.props.debtList.includes(email + singleSlaveEmail)) {\n          currAmount =\n            this.props.debtMap[email + singleSlaveEmail].debts.reduce(\n              (prev, curr) => prev + curr.amount,\n              0\n            ) * -1;\n          amount += currAmount;\n          countDebts++;\n          data.push(this.buildDebtsTable(email, singleSlaveEmail, currAmount));\n          debtsArray.push({ email, singleSlaveEmail, currAmount });\n        }\n      }\n    });\n\n    if (amount > 0) {\n      this.setState({\n        allDebtsTotal: amount,\n        allDebtsData: data,\n        numDebts: countDebts,\n        debtsArray: debtsArray,\n        debtMapData: null,\n        debtMapTotal: 0,\n        noTransactionsExisting: false,\n        allCreditsData: null,\n        allCreditsTotal: 0,\n        noCreditsExisting: false,\n        numCredits: 0,\n        creditsArray: []\n      });\n    } else {\n      this.setState({\n        noDebtsExisiting: true,\n        allDebtsTotal: 0,\n        allDebtsData: null,\n        numDebts: countDebts,\n        debtsArray: [],\n        debtMapData: null,\n        debtMapTotal: 0,\n        noTransactionsExisting: false,\n        allCreditsData: null,\n        allCreditsTotal: 0,\n        noCreditsExisting: false,\n        numCredits: 0,\n        creditsArray: []\n      });\n    }\n  }\n\n  buildDebtsTable(ownerEmail, slaveEmail, amount) {\n    return (\n      <tr key={ownerEmail + slaveEmail + amount}>\n        <td>{getIdentifierString(slaveEmail, this.props.users[slaveEmail])}</td>\n        <td>{getIdentifierString(ownerEmail, this.props.users[ownerEmail])}</td>\n        <td>{amount + \"$\"}</td>\n        <td>\n          <span\n            className=\"table-button\"\n            onClick={() => {\n              let response = window.confirm(\n                \"Are you sure you want to delete this debt record?\"\n              );\n\n              if (response) {\n                this.props.deleteDebtMap({\n                  ownerEmail: ownerEmail,\n                  slaveEmail: slaveEmail\n                });\n                if (this.state.numDebts === 1) {\n                  this.setState({\n                    numDebts: 0,\n                    allDebtsData: null,\n                    allDebtsTotal: 0,\n                    noDebtsExisiting: true\n                  });\n                } else {\n                  let newDebtsArray = [];\n                  let newDebtsData = [];\n                  let newDebtsTotal = 0;\n                  this.state.debtsArray.forEach(debt => {\n                    if (debt.email !== ownerEmail) {\n                      newDebtsTotal += debt.currAmount;\n                      newDebtsArray.push(debt);\n                      newDebtsData.push(\n                        this.buildCreditsTable(\n                          debt.email,\n                          slaveEmail,\n                          debt.currAmount\n                        )\n                      );\n                    }\n                  });\n                  this.setState({\n                    numDebts: this.state.numDebts - 1,\n                    debtsArray: newDebtsArray,\n                    allDebtsData: newDebtsData,\n                    allDebtsTotal: newDebtsTotal\n                  });\n                }\n              }\n            }}\n          >\n            Delete\n          </span>\n        </td>\n      </tr>\n    );\n  }\n\n  buildCreditsTable(ownerEmail, slaveEmail, amount) {\n    return (\n      <tr key={ownerEmail + slaveEmail + amount}>\n        <td>{getIdentifierString(ownerEmail, this.props.users[ownerEmail])}</td>\n        <td>{getIdentifierString(slaveEmail, this.props.users[slaveEmail])}</td>\n        <td>{amount + \"$\"}</td>\n        <td>\n          <span\n            className=\"table-button\"\n            onClick={() => {\n              let response = window.confirm(\n                \"Are you sure you want to delete this credit record?\"\n              );\n\n              if (response) {\n                this.props.deleteDebtMap({\n                  ownerEmail: ownerEmail,\n                  slaveEmail: slaveEmail\n                });\n                if (this.state.numCredits === 1) {\n                  this.setState({\n                    numCredits: 0,\n                    allCreditsData: null,\n                    allCreditsTotal: 0,\n                    noCreditsExisting: true\n                  });\n                } else {\n                  let newCreditsArray = [];\n                  let newCreditsData = [];\n                  let newCreditsTotal = 0;\n                  this.state.creditsArray.forEach(credit => {\n                    if (credit.email !== slaveEmail) {\n                      newCreditsTotal += credit.currAmount;\n                      newCreditsArray.push(credit);\n                      newCreditsData.push(\n                        this.buildCreditsTable(\n                          ownerEmail,\n                          credit.email,\n                          credit.currAmount\n                        )\n                      );\n                    }\n                  });\n                  this.setState({\n                    numCredits: this.state.numCredits - 1,\n                    creditsArray: newCreditsArray,\n                    allCreditsData: newCreditsData,\n                    allCreditsTotal: newCreditsTotal\n                  });\n                }\n              }\n            }}\n          >\n            Delete\n          </span>\n        </td>\n      </tr>\n    );\n  }\n\n  buildDebtMapTable(data, identifierOrder) {\n    this.setState({\n      allCreditsData: null,\n      allCreditsTotal: 0,\n      noCreditsExisting: false,\n      numCredits: 0,\n      creditsArray: [],\n      allDebtsData: null,\n      allDebtsTotal: 0,\n      noDebtsExisiting: false,\n      numDebts: 0,\n      debtsArray: []\n    });\n    return data.debts.map((debt, index) => {\n      return (\n        <tr key={index}>\n          <td>\n            {debt.amount >= 0\n              ? getIdentifierString(\n                  debt.userIDOne,\n                  this.props.users[debt.userIDOne]\n                )\n              : getIdentifierString(\n                  debt.userIDTwo,\n                  this.props.users[debt.userIDTwo]\n                )}\n          </td>\n          <td>\n            {debt.amount >= 0\n              ? getIdentifierString(\n                  debt.userIDTwo,\n                  this.props.users[debt.userIDTwo]\n                )\n              : getIdentifierString(\n                  debt.userIDOne,\n                  this.props.users[debt.userIDOne]\n                )}\n          </td>\n          <td>{Math.abs(debt.amount) + \"$\"}</td>\n          <td>{debt.notes}</td>\n          <td>\n            <span\n              className=\"table-button\"\n              onClick={() => {\n                let response = window.confirm(\n                  \"Are you sure you want to delete this debt?\"\n                );\n\n                if (response) {\n                  if (data.debts.length <= 1) {\n                    this.props.deleteDebtMap({\n                      ownerEmail: debt.userIDTwo,\n                      slaveEmail: debt.userIDOne\n                    });\n                    this.setState({\n                      debtMapData: null,\n                      debtMapTotal: 0\n                    });\n                  } else {\n                    this.props.deleteDebt({\n                      index: index,\n                      ownerEmail: debt.userIDTwo,\n                      slaveEmail: debt.userIDOne\n                    });\n                    let newTotal =\n                      identifierOrder === 1\n                        ? this.state.debtMapTotal - debt.amount\n                        : this.state.debtMapTotal + debt.amount;\n                    let newData = data;\n                    newData.debts.splice(index, 1);\n                    this.setState({\n                      debtMapData: this.buildDebtMapTable(\n                        newData,\n                        identifierOrder\n                      ),\n                      debtMapTotal: newTotal\n                    });\n                  }\n                }\n              }}\n            >\n              Delete\n            </span>\n          </td>\n        </tr>\n      );\n    });\n  }\n\n  render() {\n    return (\n      <DisplayDebts\n        handleOwnerEmail={event =>\n          this.setState({\n            ownerEmail: event.target.value,\n            debtMapData: null,\n            debtMapTotal: 0,\n            noTransactionsExisting: false\n          })\n        }\n        handleSlaveEmail={event =>\n          this.setState({\n            slaveEmail: event.target.value,\n            debtMapData: null,\n            debtMapTotal: 0,\n            noTransactionsExisting: false\n          })\n        }\n        handleSingleSlaveEmail={event =>\n          this.setState({\n            singleSlaveEmail: event.target.value,\n            allDebtsData: null,\n            allDebtsTotal: 0,\n            noDebtsExisiting: false,\n            numDebts: 0,\n            debtsArray: []\n          })\n        }\n        handleSingleOwnerEmail={event =>\n          this.setState({\n            singleOwnerEmail: event.target.value,\n            allCreditsData: null,\n            allCreditsTotal: 0,\n            noCreditsExisting: false,\n            numCredits: 0,\n            creditsArray: []\n          })\n        }\n        setTotalDebtMapAmount={debtMapTotal =>\n          this.setState({ debtMapTotal: debtMapTotal })\n        }\n        setDebtMapData={debtMapData =>\n          this.setState({ debtMapData: debtMapData })\n        }\n        setNoTransactionExisting={noTransactionsExisting =>\n          this.setState({ noTransactionsExisting: noTransactionsExisting })\n        }\n        buildDebtMapTable={this.buildDebtMapTable}\n        emails={this.props.emails}\n        users={this.props.users}\n        debtMap={this.props.debtMap}\n        debtList={this.props.debtList}\n        ownerEmail={this.state.ownerEmail}\n        slaveEmail={this.state.slaveEmail}\n        debtMapData={this.state.debtMapData}\n        debtMapTotal={this.state.debtMapTotal}\n        allDebtsData={this.state.allDebtsData}\n        allDebtsTotal={this.state.allDebtsTotal}\n        singleSlaveEmail={this.state.singleSlaveEmail}\n        singleOwnerEmail={this.state.singleOwnerEmail}\n        allCreditsTotal={this.state.allCreditsTotal}\n        allCreditsData={this.state.allCreditsData}\n        noTransactionsExisting={this.state.noTransactionsExisting}\n        noTransactions={\n          this.state.noTransactionsExisting ? noTransactions : null\n        }\n        noDebtsExisiting={this.state.noDebtsExisiting}\n        noDebts={this.state.noDebtsExisiting ? noDebts : null}\n        noCreditsExisting={this.state.noCreditsExisting}\n        noCredits={this.state.noCreditsExisting ? noCredits : null}\n        debtMapTableHead={this.state.debtMapData ? debtMapTableHead : null}\n        debtTableHead={this.state.allDebtsData ? debtTableHead : null}\n        creditTableHead={this.state.allCreditsData ? creditTableHead : null}\n        buildCreditsData={this.buildCreditsData}\n        buildDebtsData={this.buildDebtsData}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  emails: state.emails,\n  users: state.users,\n  debtMap: state.debtMap,\n  debtList: state.debtList\n});\n\nconst mapDispatchToProps = dispatch => ({\n  deleteDebtMap: data => dispatch(deleteDebtMap(data)),\n  deleteDebt: data => dispatch(deleteDebt(data))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(DisplayDebtsContainer);\n","import React from \"react\";\nimport AddDebtContainer from \"./addDebtContainer\";\nimport DisplayDebtsContainer from \"./displayDebtsContainer\";\n\nexport default class ManageDebtsContainer extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      id: 0\n    };\n  }\n\n  render() {\n    return (\n      <div>\n        <AddDebtContainer\n          debtChangeCounter={() => this.setState({ id: this.state.id + 1 })}\n        />\n        <DisplayDebtsContainer key={this.state.id} />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport \"./index.css\";\n\nexport const HomePage = () => (\n  <div className=\"container\">\n    <h3>Welcome to How Much Do I Owe You!</h3>\n    <p>\n      This app allows you to track purchaes you make for others and vice versa\n    </p>\n    <p>\n      To begin, go to the Manage Users page and add some users, then you can add\n      purchases on the Manage Debts page!\n    </p>\n    <p>As a side note, all data is stored in cookies, however, if you would like to get a actual copy of your data refer to the Manage Data page</p>\n  </div>\n);\n","import React from \"react\";\nimport { HomePage } from \"../components/HomePage/index\";\n\nexport default class HomePageContainer extends React.Component {\n  render() {\n    return (\n      <div>\n        <HomePage />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ManageDataContainer from \"./containers/manageDataContainer\";\nimport ManageUsersContainer from \"./containers/manageUsersContainer\";\nimport ManageDebtsContainer from \"./containers/manageDebtsContainer\";\nimport HomePageContainer from \"./containers/homePageContainer\";\nimport { HashRouter, Route, NavLink, Switch } from \"react-router-dom\";\nimport \"./App.css\";\n\nexport default class App extends React.Component {\n  render() {\n    return (\n      <div className=\"app-container\">\n        <h2 className=\"app-title\">How Much Do I Owe You?</h2>\n        <div className=\"main-content-wrapper\">\n          <HashRouter basename=\"/\">\n            <div>\n              <div className=\"nav\">\n                <NavLink\n                  className=\"non-selected-link\"\n                  activeClassName=\"selected\"\n                  exact\n                  to=\"/\"\n                >\n                  Home\n                </NavLink>\n\n                <NavLink\n                  className=\"non-selected-link\"\n                  activeClassName=\"selected\"\n                  exact\n                  to=\"/manageUsers\"\n                >\n                  Manage Users\n                </NavLink>\n\n                <NavLink\n                  className=\"non-selected-link\"\n                  activeClassName=\"selected\"\n                  exact\n                  to=\"/manageDebts\"\n                >\n                  Manage Debts\n                </NavLink>\n\n                <NavLink\n                  className=\"non-selected-link\"\n                  activeClassName=\"selected\"\n                  exact\n                  to=\"/manageData\"\n                >\n                  Manage Data\n                </NavLink>\n              </div>\n              <Switch>\n                <Route path=\"/manageDebts\" component={ManageDebtsContainer} />\n                <Route path=\"/manageUsers\" component={ManageUsersContainer} />\n                <Route path=\"/manageData\" component={ManageDataContainer} />\n                <Route path=\"/\" component={HomePageContainer} />\n              </Switch>\n            </div>\n          </HashRouter>\n        </div>\n      </div>\n    );\n  }\n}\n","import * as actionConst from \"../actions/action-constants\";\n\nimport { checkForDebtInstance } from \"../utils\";\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case actionConst.addDebtInstance: {\n      return {\n        ...state,\n        debtList: [...state.debtList, action.payload.key],\n        debtMap: {\n          ...state.debtMap,\n          [action.payload.key]: {\n            debts: action.payload.debts\n          }\n        }\n      };\n    }\n    case actionConst.deleteDebt: {\n      let id = action.payload.userIDOne + action.payload.userIDTwo;\n      return {\n        ...state,\n        debtMap: {\n          ...state.debtMap,\n          [id]: {\n            debts: [\n              ...state.debtMap[id].debts.slice(0, action.payload.index),\n              ...state.debtMap[id].debts.slice(action.payload.index + 1)\n            ]\n          }\n        }\n      };\n    }\n    case actionConst.deleteUser: {\n      let newUserMap = {};\n      state.emails.forEach(email => {\n        if (email !== action.payload.email) {\n          newUserMap[email] = state.users[email];\n        }\n      });\n      return {\n        ...state,\n        emails: state.emails.filter(email => email !== action.payload.email),\n        users: newUserMap\n      };\n    }\n    case actionConst.deleteDebtMap: {\n      let id = action.payload.userIDOne + action.payload.userIDTwo;\n      let newDebtMap = {};\n      state.debtList.forEach(debt => {\n        if (debt !== id) {\n          newDebtMap[debt] = state.debtMap[debt];\n        }\n      });\n      return {\n        ...state,\n        debtList: state.debtList.filter(debt => debt !== id),\n        debtMap: newDebtMap\n      };\n    }\n    case actionConst.clearData: {\n      return {\n        emails: [],\n        users: {},\n        debtMap: {},\n        debtList: []\n      };\n    }\n    case actionConst.addUser: {\n      return {\n        ...state,\n        emails: [...state.emails, action.email],\n        users: {\n          ...state.users,\n          [action.email]: action.payload\n        }\n      };\n    }\n    case actionConst.addDebt: {\n      let id = action.payload.userIDOne + action.payload.userIDTwo;\n\n      if (\n        checkForDebtInstance(\n          state.debtList,\n          action.payload.userIDOne,\n          action.payload.userIDTwo\n        )\n      ) {\n        return {\n          ...state,\n          debtMap: {\n            ...state.debtMap,\n            [id]: {\n              debts: [...state.debtMap[id].debts, action.payload]\n            }\n          }\n        };\n      } else {\n        return {\n          ...state,\n          debtList: [...state.debtList, id],\n          debtMap: {\n            ...state.debtMap,\n            [id]: {\n              debts: [action.payload]\n            }\n          }\n        };\n      }\n    }\n    default: {\n      return state;\n    }\n  }\n}\n\nexport default reducer;\n","import { createStore, applyMiddleware } from \"redux\";\nimport reducer from \"./reducers/reducer\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport reduxCookiesMiddleware from \"redux-cookies-middleware\";\nimport { getStateFromCookies } from \"redux-cookies-middleware\";\n\nconst defaultState = {\n  emails: [],\n  users: {},\n  debtMap: {},\n  debtList: []\n};\n\n\nconst cookiePaths = {\n    \"emails\": { name: \"HMDIOY_EMAILS\" },\n    \"users\": { name: \"HMDIOY_USERS\" },\n    \"debtMap\": { name: \"HMDIOY_DEBTMAP\" },\n    \"debtList\": { name: \"HMDIOY_DEBTLIST\" },\n}\n\nlet initialState = getStateFromCookies(defaultState, cookiePaths);\n\nif(!initialState.emails) {\n    initialState.emails = [];\n}\n\nif(!initialState.users) {\n    initialState.users = {};\n}\n\nif(!initialState.debtMap) {\n    initialState.debtMap = {};\n}\n\nif(!initialState.debtList) {\n    initialState.debtList = [];\n}\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(reduxCookiesMiddleware(cookiePaths)))\n);\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}