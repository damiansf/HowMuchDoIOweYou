{"version":3,"sources":["components/AddUser/index.js","actions/action-constants.js","actions/actionDefs.js","containers/addUserContainer.js","utils.js","components/AddDebt/index.js","containers/addDebtContainer.js","components/DisplayDebts/index.js","containers/displayDebtsContainer.js","components/DisplayUsers/index.js","containers/displayUsersContainer.js","components/ManageData/index.js","containers/manageDataContainer.js","App.js","reducers/reducer.js","store.js","index.js"],"names":["AddUser","_ref","handleFirstName","handleLastName","handleEmail","addUser","emails","firstName","lastName","email","react_default","a","createElement","type","name","value","onChange","e","onClick","includes","alert","addDebt","clearData","deleteDebt","deleteUser","deleteDebtMap","addDebtInstance","data","actionConst","payload","userOne","userTwo","ownerEmail","localeCompare","slaveEmail","userIDOne","userIDTwo","multiplier","amount","notes","timeStamp","Date","now","AddUserContainer","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","_this2","AddUser_AddUser","event","setState","target","props","React","Component","connect","dispatch","checkForDebtInstance","debtArray","idOne","idTwo","getIdentifier","user","key","AddDebt","users","handleOwnerEmail","handleSlaveEmail","handleNotes","handleAmount","emailOne","emailTwo","map","AddDebtContainer","AddDebt_AddDebt","isNaN","DisplayDebts","setTotalDebtMapAmount","setDebtMapData","buildDebtMapTable","debtMap","debtList","debtMapData","debtMapTotal","allDebtsData","allDebtsTotal","handleSingleSlaveEmail","singleSlaveEmail","buildDebtsTable","setDebtsData","setTotalDebtsAmount","handleSingleOwnerEmail","setCreditsData","singleOwnerEmail","allCreditsTotal","allCreditsData","setTotalCreditsAmount","buildCreditsTable","debts","reduce","prev","curr","currAmount","forEach","push","DisplayDebtsContainer","bind","assertThisInitialized","_this3","_this4","debt","index","length","_this5","DisplayDebts_DisplayDebts","DisplayUsers","DisplayUsers_DisplayUsers","ManageData","uploadData","href","download","title","ManageDataContainer","file","files","reader","FileReader","onload","obj","JSON","parse","result","debtItem","existing","existingDebtItem","error","readAsText","window","File","FileList","Blob","ManageData_ManageData","URL","createObjectURL","stringify","App","react_router_dom","basename","to","react_router","path","component","DisplayUsersContainer","reducer","action","objectSpread","concat","toConsumableArray","defineProperty","id","slice","newUserMap","filter","newDebtMap","cookiePaths","initialState","getStateFromCookies","store","createStore","composeWithDevTools","applyMiddleware","reduxCookiesMiddleware","ReactDOM","render","es","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.0ed6b751.chunk.js","sourcesContent":["import React from \"react\";\n\nexport const AddUser = ({\n  handleFirstName,\n  handleLastName,\n  handleEmail,\n  addUser,\n  emails,\n  firstName,\n  lastName,\n  email\n}) => (\n  <form>\n    <label>\n      FirstName:\n      <input\n        type=\"text\"\n        name=\"firstName\"\n        value={firstName}\n        onChange={e => handleFirstName(e)}\n      />\n    </label>\n    <label>\n      LastName:\n      <input\n        type=\"text\"\n        name=\"lastName\"\n        value={lastName}\n        onChange={e => handleLastName(e)}\n      />\n    </label>\n    <label>\n      Email:\n      <input\n        type=\"text\"\n        name=\"email\"\n        value={email}\n        onChange={e => handleEmail(e)}\n      />\n    </label>\n    <input\n      type=\"button\"\n      value=\"Submit\"\n      onClick={() => {\n        if (!emails.includes(email)) {\n          addUser({\n            firstName: firstName,\n            lastName: lastName,\n            email: email\n          });\n          alert(\"User added\");\n        } else {\n          alert(\"User with same email already exists\");\n        }\n      }}\n    />\n  </form>\n);\n","export const addUser = \"ADD_USER\";\nexport const addDebt = \"ADD_DEBT\";\nexport const clearData = \"CLEAR_DATA\";\nexport const deleteDebt = \"DELETE_DEBT\";\nexport const deleteUser = \"DELETE_USER\";\nexport const deleteDebtMap = \"DELETE_DEBT_MAP\";\nexport const addDebtInstance = \"ADD_DEBT_INSTANCE\";","import * as actionConst from \"./action-constants\";\n\nexport function addUser(data) {\n  return {\n    type: actionConst.addUser,\n    payload: {\n      firstName: data.firstName,\n      lastName: data.lastName,\n      email: data.email\n    },\n    email: data.email\n  };\n}\n\nexport function clearData() {\n  return {\n    type: actionConst.clearData\n  };\n}\n\nexport function deleteDebt(data) {\n  let userOne = \"\";\n  let userTwo = \"\";\n\n  if (data.ownerEmail.localeCompare(data.slaveEmail) < 0) {\n    userOne = data.ownerEmail;\n    userTwo = data.slaveEmail;\n  } else {\n    userOne = data.slaveEmail;\n    userTwo = data.ownerEmail;\n  }\n\n  return {\n    type: actionConst.deleteDebt,\n    payload: { userIDOne: userOne, userIDTwo: userTwo, index: data.index }\n  };\n}\n\nexport function deleteUser(data) {\n  return {\n    type: actionConst.deleteUser,\n    payload: {\n      email: data.email\n    }\n  };\n}\n\nexport function deleteDebtMap(data) {\n  let userOne = \"\";\n  let userTwo = \"\";\n\n  if (data.ownerEmail.localeCompare(data.slaveEmail) < 0) {\n    userOne = data.ownerEmail;\n    userTwo = data.slaveEmail;\n  } else {\n    userOne = data.slaveEmail;\n    userTwo = data.ownerEmail;\n  }\n\n  return {\n    type: actionConst.deleteDebtMap,\n    payload: { userIDOne: userOne, userIDTwo: userTwo }\n  };\n}\n\nexport function addDebt(data) {\n  let userOne = \"\";\n  let userTwo = \"\";\n  let multiplier = 1;\n\n  if (data.userOne.localeCompare(data.userTwo) < 0) {\n    userOne = data.userOne;\n    userTwo = data.userTwo;\n    multiplier = -1;\n  } else {\n    userOne = data.userTwo;\n    userTwo = data.userOne;\n  }\n\n  return {\n    type: actionConst.addDebt,\n    payload: {\n      userIDOne: userOne,\n      userIDTwo: userTwo,\n      amount: data.amount * multiplier,\n      notes: data.notes,\n      timeStamp: Date.now()\n    }\n  };\n}\n\nexport function addDebtInstance(data) {\n  return {\n    type: actionConst.addDebtInstance,\n    payload: {\n      key: data.key,\n      debts: data.debts\n    }\n  };\n}\n","import { AddUser } from \"../components/AddUser/index\";\nimport { addUser } from \"../actions/actionDefs\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\n\nclass AddUserContainer extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\"\n    };\n  }\n\n  render() {\n    return (\n      <AddUser\n        email={this.state.email}\n        lastName={this.state.lastName}\n        firstName={this.state.firstName}\n        handleEmail={event => this.setState({ email: event.target.value })}\n        handleLastName={event =>\n          this.setState({ lastName: event.target.value })\n        }\n        handleFirstName={event =>\n          this.setState({ firstName: event.target.value })\n        }\n        emails={this.props.emails}\n        addUser={this.props.addUser}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  emails: state.emails\n});\n\nconst mapDispatchToProps = dispatch => ({\n  addUser: data => dispatch(addUser(data))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AddUserContainer);\n","import React from \"react\";\n\nexport function checkForDebtInstance(debtArray, idOne, idTwo) {\n  return debtArray.includes(idOne + idTwo);\n}\n\nexport function getIdentifier(email, user) {\n  return (\n    <option key={email} value={email}>\n      {user.firstName +\n        \" \" +\n        user.lastName +\n        \" (\" +\n        email +\n        \")\"}\n    </option>\n  );\n}\n","import React from \"react\";\nimport { getIdentifier } from \"../../utils\";\n\nexport const AddDebt = ({\n  emails,\n  users,\n  addDebt,\n  handleOwnerEmail,\n  handleSlaveEmail,\n  handleNotes,\n  handleAmount,\n  amount,\n  notes,\n  emailOne,\n  emailTwo\n}) => (\n  <form>\n    <span>owner</span>\n    <select onChange={e => handleOwnerEmail(e)}>\n      <option>--</option>\n      {emails.map(email => {\n        return getIdentifier(email, users[email]);\n      })}\n    </select>\n    <span>slave</span>\n    <select onChange={e => handleSlaveEmail(e)}>\n      <option>--</option>\n      {emails.map(email => {\n        return getIdentifier(email, users[email]);\n      })}\n    </select>\n    <label>\n      Amount:\n      <input\n        type=\"text\"\n        name=\"amount\"\n        value={amount}\n        onChange={e => handleAmount(e)}\n      />\n    </label>\n    <label>\n      Notes:\n      <input\n        type=\"text\"\n        name=\"notes\"\n        value={notes}\n        onChange={e => handleNotes(e)}\n      />\n    </label>\n    <input\n      type=\"button\"\n      value=\"Submit\"\n      onClick={() => {\n        if (!emailTwo) {\n          alert(\"Second email either null or the same\");\n        } else {\n          addDebt({\n            userOne: emailOne ? emailOne : emails[0],\n            userTwo: emailTwo,\n            amount: amount,\n            notes: notes\n          });\n          alert(\"User Debt added\");\n        }\n      }}\n    />\n  </form>\n);\n","import { AddDebt } from \"../components/AddDebt/index\";\nimport { addDebt } from \"../actions/actionDefs\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\n\nclass AddDebtContainer extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      amount: \"\",\n      notes: \"\",\n      emailOne: \"\",\n      emailTwo: \"\"\n    };\n  }\n\n  render() {\n    return (\n      <AddDebt\n        emails={this.props.emails}\n        users={this.props.users}\n        notes={this.state.notes}\n        amount={this.state.amount}\n        emailOne={this.state.emailOne}\n        emailTwo={this.state.emailTwo}\n        addDebt={this.props.addDebt}\n        handleOwnerEmail={event =>\n          this.setState({ emailOne: event.target.value })\n        }\n        handleSlaveEmail={event =>\n          this.setState({ emailTwo: event.target.value })\n        }\n        handleNotes={event => this.setState({ notes: event.target.value })}\n        handleAmount={event => {\n          if (!isNaN(event.target.value)) {\n            this.setState({ amount: event.target.value });\n          }\n        }}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  emails: state.emails,\n  users: state.users\n});\n\nconst mapDispatchToProps = dispatch => ({\n  addDebt: data => dispatch(addDebt(data))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AddDebtContainer);\n","import React from \"react\";\nimport { getIdentifier } from \"../../utils\";\n\nexport const DisplayDebts = ({\n  handleOwnerEmail,\n  handleSlaveEmail,\n  setTotalDebtMapAmount,\n  setDebtMapData,\n  buildDebtMapTable,\n  emails,\n  users,\n  debtMap,\n  debtList,\n  ownerEmail,\n  slaveEmail,\n  debtMapData,\n  debtMapTotal,\n  allDebtsData,\n  allDebtsTotal,\n  handleSingleSlaveEmail,\n  singleSlaveEmail,\n  buildDebtsTable,\n  setDebtsData,\n  setTotalDebtsAmount,\n  handleSingleOwnerEmail,\n  setCreditsData,\n  singleOwnerEmail,\n  allCreditsTotal,\n  allCreditsData,\n  setTotalCreditsAmount,\n  buildCreditsTable\n}) => (\n  <div>\n    <form>\n      <span>slave</span>\n      <select onChange={e => handleSlaveEmail(e)}>\n        <option>--</option>\n        {emails.map(email => {\n          return getIdentifier(email, users[email]);\n        })}\n      </select>\n      <span>owner</span>\n      <select onChange={e => handleOwnerEmail(e)}>\n        <option>--</option>\n        {emails.map(email => {\n          return getIdentifier(email, users[email]);\n        })}\n      </select>\n      <input\n        type=\"button\"\n        value=\"Submit\"\n        onClick={() => {\n          let data = null;\n          let amount = 0;\n          if (ownerEmail.localeCompare(slaveEmail) < 0) {\n            if (debtList.includes(ownerEmail + slaveEmail)) {\n              data = buildDebtMapTable(debtMap[ownerEmail + slaveEmail], -1);\n              amount =\n                debtMap[ownerEmail + slaveEmail].debts.reduce(\n                  (prev, curr) => prev + curr.amount,\n                  0\n                ) * -1;\n              setTotalDebtMapAmount(amount);\n              setDebtMapData(data);\n            }\n          } else {\n            if (debtList.includes(slaveEmail + ownerEmail)) {\n              data = buildDebtMapTable(debtMap[slaveEmail + ownerEmail], 1);\n              amount = debtMap[slaveEmail + ownerEmail].debts.reduce(\n                (prev, curr) => prev + curr.amount,\n                0\n              );\n              setTotalDebtMapAmount(amount);\n              setDebtMapData(data);\n            }\n          }\n        }}\n      />\n    </form>\n    <table>\n      <thead>\n        <tr>\n          <th>User One</th>\n          <th>User Two</th>\n          <th>Amount</th>\n          <th>Notes</th>\n          <th>Delete Debt</th>\n        </tr>\n      </thead>\n      <tbody>{debtMapData}</tbody>\n    </table>\n    <span>{debtMapTotal}</span>\n    <br />\n    <form>\n      <span>slave</span>\n      <select onChange={e => handleSingleSlaveEmail(e)}>\n        <option>--</option>\n        {emails.map(email => {\n          return getIdentifier(email, users[email]);\n        })}\n      </select>\n      <input\n        type=\"button\"\n        value=\"Submit\"\n        onClick={() => {\n          let data = [];\n          let amount = 0;\n          let currAmount = 0;\n          emails.forEach(email => {\n            if (singleSlaveEmail.localeCompare(email) < 0) {\n              if (debtList.includes(singleSlaveEmail + email)) {\n                currAmount = debtMap[singleSlaveEmail + email].debts.reduce(\n                  (prev, curr) => prev + curr.amount,\n                  0\n                );\n                amount += currAmount;\n                data.push(buildDebtsTable(email, singleSlaveEmail, currAmount));\n              }\n            } else {\n              if (debtList.includes(email + singleSlaveEmail)) {\n                currAmount =\n                  debtMap[email + singleSlaveEmail].debts.reduce(\n                    (prev, curr) => prev + curr.amount,\n                    0\n                  ) * -1;\n                amount += currAmount;\n                data.push(buildDebtsTable(email, singleSlaveEmail, currAmount));\n              }\n            }\n          });\n          if (amount > 0) {\n            setTotalDebtsAmount(amount);\n            setDebtsData(data);\n          } else {\n            setTotalDebtsAmount(0);\n            setDebtsData([]);\n          }\n        }}\n      />\n    </form>\n    <table>\n      <thead>\n        <tr>\n          <th>User One</th>\n          <th>User Two</th>\n          <th>Amount</th>\n          <th>Delete Debt</th>\n        </tr>\n      </thead>\n      <tbody>{allDebtsData}</tbody>\n    </table>\n    <span>{allDebtsTotal}</span>\n    <br />\n    <form>\n      <span>owner</span>\n      <select onChange={e => handleSingleOwnerEmail(e)}>\n        <option>--</option>\n        {emails.map(email => {\n          return getIdentifier(email, users[email]);\n        })}\n      </select>\n      <input\n        type=\"button\"\n        value=\"Submit\"\n        onClick={() => {\n          let data = [];\n          let amount = 0;\n          let currAmount = 0;\n          emails.forEach(email => {\n            if (singleOwnerEmail.localeCompare(email) < 0) {\n              if (debtList.includes(singleOwnerEmail + email)) {\n                currAmount =\n                  debtMap[singleOwnerEmail + email].debts.reduce(\n                    (prev, curr) => prev + curr.amount,\n                    0\n                  ) * -1;\n                amount += currAmount;\n                data.push(\n                  buildCreditsTable(singleOwnerEmail, email, currAmount)\n                );\n              }\n            } else {\n              if (debtList.includes(email + singleOwnerEmail)) {\n                currAmount = debtMap[email + singleOwnerEmail].debts.reduce(\n                  (prev, curr) => prev + curr.amount,\n                  0\n                );\n                amount += currAmount;\n                data.push(\n                  buildCreditsTable(singleOwnerEmail, email, currAmount)\n                );\n              }\n            }\n          });\n          if (amount > 0) {\n            setTotalCreditsAmount(amount);\n            setCreditsData(data);\n          } else {\n            setTotalCreditsAmount(0);\n            setCreditsData([]);\n          }\n        }}\n      />\n    </form>\n    <table>\n      <thead>\n        <tr>\n          <th>User One</th>\n          <th>User Two</th>\n          <th>Amount</th>\n          <th>Delete Debt</th>\n        </tr>\n      </thead>\n      <tbody>{allCreditsData}</tbody>\n    </table>\n    <span>{allCreditsTotal}</span>\n  </div>\n);\n","import { DisplayDebts } from \"../components/DisplayDebts/index\";\nimport { deleteDebtMap, deleteDebt } from \"../actions/actionDefs\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\n\nclass DisplayDebtsContainer extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      debtMapData: null,\n      ownerEmail: \"\",\n      slaveEmail: \"\",\n      singleSlaveEmail: \"\",\n      debtMapTotal: 0,\n      allDebtsData: null,\n      allDebtsTotal: 0,\n      singleOwnerEmail: \"\",\n      allCreditsTotal: 0,\n      allCreditsData: null\n    };\n\n    this.buildDebtMapTable = this.buildDebtMapTable.bind(this);\n    this.buildDebtsTable = this.buildDebtsTable.bind(this);\n    this.buildCreditsTable = this.buildCreditsTable.bind(this);\n  }\n\n  buildDebtsTable(ownerEmail, slaveEmail, amount) {\n    return (\n      <tr key={ownerEmail + slaveEmail + amount}>\n        <td>{slaveEmail}</td>\n        <td>{ownerEmail}</td>\n        <td>{amount}</td>\n        <td>\n          <button\n            onClick={() => {\n              this.props.deleteDebtMap({\n                ownerEmail: ownerEmail,\n                slaveEmail: slaveEmail\n              });\n            }}\n          />\n        </td>\n      </tr>\n    );\n  }\n\n  buildCreditsTable(ownerEmail, slaveEmail, amount) {\n    return (\n      <tr key={ownerEmail + slaveEmail + amount}>\n        <td>{ownerEmail}</td>\n        <td>{slaveEmail}</td>\n        <td>{amount}</td>\n        <td>\n          <button\n            onClick={() => {\n              this.props.deleteDebtMap({\n                ownerEmail: ownerEmail,\n                slaveEmail: slaveEmail\n              });\n            }}\n          />\n        </td>\n      </tr>\n    );\n  }\n\n  buildDebtMapTable(data, multiplier) {\n    if (multiplier === 1) {\n      return data.debts.map((debt, index) => {\n        return (\n          <tr key={index}>\n            <td>{debt.userIDOne}</td>\n            <td>{debt.userIDTwo}</td>\n            <td>{debt.amount}</td>\n            <td>{debt.notes}</td>\n            <td>\n              <button\n                onClick={() => {\n                  if (data.debts.length < 1) {\n                    this.props.deleteDebtMap({\n                      ownerEmail: debt.userIDTwo,\n                      slaveEmail: debt.userIDOne\n                    });\n                  } else {\n                    this.props.deleteDebt({\n                      index: index,\n                      ownerEmail: debt.userIDTwo,\n                      slaveEmail: debt.userIDOne\n                    });\n                  }\n                }}\n              />\n            </td>\n          </tr>\n        );\n      });\n    } else {\n      return data.debts.map((debt, index) => {\n        return (\n          <tr key={index}>\n            <td>{debt.userIDTwo}</td>\n            <td>{debt.userIDOne}</td>\n            <td>{debt.amount * multiplier}</td>\n            <td>{debt.notes}</td>\n            <td>\n              <button\n                onClick={() => {\n                  if (data.debts.length < 1) {\n                    this.props.deleteDebtMap({\n                      ownerEmail: debt.userIDTwo,\n                      slaveEmail: debt.userIDOne\n                    });\n                  } else {\n                    this.props.deleteDebt({\n                      index: index,\n                      ownerEmail: debt.userIDTwo,\n                      slaveEmail: debt.userIDOne\n                    });\n                  }\n                }}\n              />\n            </td>\n          </tr>\n        );\n      });\n    }\n  }\n\n  render() {\n    return (\n      <DisplayDebts\n        handleOwnerEmail={event =>\n          this.setState({ ownerEmail: event.target.value })\n        }\n        handleSlaveEmail={event =>\n          this.setState({ slaveEmail: event.target.value })\n        }\n        handleSingleSlaveEmail={event =>\n          this.setState({ singleSlaveEmail: event.target.value })\n        }\n        handleSingleOwnerEmail={event =>\n          this.setState({ singleOwnerEmail: event.target.value })\n        }\n        setTotalDebtMapAmount={debtMapTotal =>\n          this.setState({ debtMapTotal: debtMapTotal })\n        }\n        setDebtMapData={debtMapData =>\n          this.setState({ debtMapData: debtMapData })\n        }\n        setTotalDebtsAmount={allDebtsTotal =>\n          this.setState({ allDebtsTotal: allDebtsTotal })\n        }\n        setTotalCreditsAmount={allCreditsTotal =>\n          this.setState({ allCreditsTotal: allCreditsTotal })\n        }\n        setDebtsData={allDebtsData =>\n          this.setState({ allDebtsData: allDebtsData })\n        }\n        setCreditsData={allCreditsData =>\n          this.setState({ allCreditsData: allCreditsData })\n        }\n        buildDebtMapTable={this.buildDebtMapTable}\n        buildDebtsTable={this.buildDebtsTable}\n        buildCreditsTable={this.buildCreditsTable}\n        emails={this.props.emails}\n        users={this.props.users}\n        debtMap={this.props.debtMap}\n        debtList={this.props.debtList}\n        ownerEmail={this.state.ownerEmail}\n        slaveEmail={this.state.slaveEmail}\n        debtMapData={this.state.debtMapData}\n        debtMapTotal={this.state.debtMapTotal}\n        allDebtsData={this.state.allDebtsData}\n        allDebtsTotal={this.state.allDebtsTotal}\n        singleSlaveEmail={this.state.singleSlaveEmail}\n        singleOwnerEmail={this.state.singleOwnerEmail}\n        allCreditsTotal={this.state.allCreditsTotal}\n        allCreditsData={this.state.allCreditsData}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  emails: state.emails,\n  users: state.users,\n  debtMap: state.debtMap,\n  debtList: state.debtList\n});\n\nconst mapDispatchToProps = dispatch => ({\n  deleteDebtMap: data => dispatch(deleteDebtMap(data)),\n  deleteDebt: data => dispatch(deleteDebt(data))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(DisplayDebtsContainer);\n","import React from \"react\";\n\nexport const DisplayUsers = ({\n  users,\n  emails,\n  debtList,\n  deleteUser,\n  deleteDebtMap,\n  checkForDebtInstance\n}) => (\n  <table>\n    <thead>\n      <tr>\n        <th>First Name</th>\n        <th>Last Name</th>\n        <th>Email</th>\n      </tr>\n    </thead>\n    <tbody>\n      {emails.map(email => {\n        return (\n          <tr key={users[email].email}>\n            <td>{users[email].firstName}</td>\n            <td>{users[email].lastName}</td>\n            <td>{users[email].email}</td>\n            <td>\n              <button\n                onClick={() => {\n                  let userOne,\n                    userTwo = null;\n                  emails.forEach(emailTwo => {\n                    if (email.localeCompare() < 0) {\n                      userOne = email;\n                      userTwo = emailTwo;\n                    } else {\n                      userOne = emailTwo;\n                      userTwo = email;\n                    }\n                  });\n                  if (checkForDebtInstance(debtList, userOne, userTwo)) {\n                    deleteDebtMap({ ownerEmail: userOne, slaveEmail: userTwo });\n                  }\n                  deleteUser({ email: email });\n                }}\n              />\n            </td>\n          </tr>\n        );\n      })}\n    </tbody>\n  </table>\n);\n","import { DisplayUsers } from \"../components/DisplayUsers/index\";\nimport React from \"react\";\nimport { deleteUser, deleteDebtMap } from \"../actions/actionDefs\";\nimport {checkForDebtInstance} from \"../utils\";\nimport { connect } from \"react-redux\";\n\nclass AddUserContainer extends React.Component {\n  render() {\n    return (\n      <DisplayUsers\n        users={this.props.users}\n        emails={this.props.emails}\n        debtList={this.props.debtList}\n        deleteUser={this.props.deleteUser}\n        deleteDebtMap={this.props.deleteDebtMap}\n        checkForDebtInstance={checkForDebtInstance}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  users: state.users,\n  emails: state.emails,\n  debtList: state.debtList\n});\n\nconst mapDispatchToProps = dispatch => ({\n  deleteUser: data => dispatch(deleteUser(data)),\n  deleteDebtMap: data => dispatch(deleteDebtMap(data))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AddUserContainer);\n","import React from \"react\";\n\nexport const ManageData = ({ clearData, uploadData, data }) => (\n  <div>\n    <a href={data} download={\"data.json\"}>\n      Download Data\n    </a>\n    <span>Upload Data</span>\n    <input\n      type=\"file\"\n      title=\"Upload Data\"\n      onChange={e => {\n        uploadData(e);\n      }}\n    />\n    <button onClick={clearData}>Clear Data</button>\n  </div>\n);\n","import { ManageData } from \"../components/ManageData/index\";\nimport {\n  clearData,\n  addUser,\n  addDebt,\n  addDebtInstance\n} from \"../actions/actionDefs\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\n\nclass ManageDataContainer extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {};\n\n    this.uploadData = this.uploadData.bind(this);\n  }\n\n  uploadData(e) {\n    let file = e.target.files[0];\n\n    if (!file.type.includes(\"json\")) {\n      alert(\"Invalid file type, only accept json files\");\n      return;\n    }\n\n    let reader = new FileReader();\n\n    reader.onload = (() => {\n      return e => {\n        try {\n          let obj = JSON.parse(e.target.result);\n\n          obj.emails.forEach(email => {\n            if (!this.props.emails.includes(email)) {\n              this.props.addUser({\n                firstName: obj.users[email].firstName,\n                lastName: obj.users[email].lastName,\n                email: obj.users[email].email\n              });\n            }\n          });\n\n          obj.debtList.forEach(debt => {\n            if (!this.props.debtList.includes(debt)) {\n              this.props.addDebtInstance({\n                debts: obj.debtMap[debt].debts,\n                key: debt\n              });\n            } else {\n              obj.debtMap[debt].debts.forEach(debtItem => {\n                let existing = false;\n                this.props.debtMap[debt].debts.forEach(existingDebtItem => {\n                  if (existingDebtItem.timeStamp === debtItem.timeStamp) {\n                    existing = true;\n                  }\n                });\n                if (!existing) {\n                  this.props.addDebt({\n                    userOne: debtItem.userIDOne,\n                    userTwo: debtItem.userIDTwo,\n                    amount: debtItem.amount * -1,\n                    notes: debtItem.notes\n                  });\n                }\n              });\n            }\n          });\n        } catch (error) {\n          alert(\"Error parsing json: \" + error);\n        }\n      };\n    })(file);\n    reader.readAsText(file);\n  }\n\n  render() {\n    if (window.File && window.FileReader && window.FileList && window.Blob) {\n      return (\n        <ManageData\n          clearData={this.props.clearData}\n          uploadData={this.uploadData}\n          data={URL.createObjectURL(\n            new Blob(\n              [\n                JSON.stringify({\n                  users: this.props.users,\n                  emails: this.props.emails,\n                  debtList: this.props.debtList,\n                  debtMap: this.props.debtMap\n                })\n              ],\n              {\n                type: \"application/json\"\n              }\n            )\n          )}\n        />\n      );\n    } else {\n      return <span>File API's not available</span>;\n    }\n  }\n}\n\nconst mapStateToProps = state => ({\n  users: state.users,\n  emails: state.emails,\n  debtList: state.debtList,\n  debtMap: state.debtMap\n});\n\nconst mapDispatchToProps = dispatch => ({\n  clearData: () => dispatch(clearData()),\n  addUser: data => dispatch(addUser(data)),\n  addDebt: data => dispatch(addDebt(data)),\n  addDebtInstance: data => dispatch(addDebtInstance(data))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ManageDataContainer);\n","import React from \"react\";\nimport AddUserContainer from \"./containers/addUserContainer\";\nimport AddDebtContainer from \"./containers/addDebtContainer\";\nimport DisplayDebtsContainer from \"./containers/displayDebtsContainer\";\nimport DisplayUsersContainer from \"./containers/displayUsersContainer\";\nimport ManageDataContainer from \"./containers/manageDataContainer\";\nimport { HashRouter, Route, Link } from \"react-router-dom\";\n\nexport default class App extends React.Component {\n  render() {\n    return (\n      <div>\n        <header>\n          <p>How Much Do I Owe You?</p>\n        </header>\n        <HashRouter basename=\"/\">\n          <div>\n            <ul>\n              <li>\n                <Link to=\"/\">Home</Link>\n              </li>\n              <li>\n                <Link to=\"/addUser\">Add User</Link>\n              </li>\n              <li>\n                <Link to=\"/addDebt\">Add Debt</Link>\n              </li>\n              <li>\n                <Link to=\"/displayDebts\">Display Debts</Link>\n              </li>\n              <li>\n                <Link to=\"/displayUsers\">Display Users</Link>\n              </li>\n              <li>\n                <Link to=\"/manageData\">Manage Data</Link>\n              </li>\n            </ul>\n            <Route path=\"/addUser\" component={AddUserContainer} />\n            <Route path=\"/addDebt\" component={AddDebtContainer} />\n            <Route path=\"/displayDebts\" component={DisplayDebtsContainer} />\n            <Route path=\"/displayUsers\" component={DisplayUsersContainer} />\n            <Route path=\"/manageData\" component={ManageDataContainer} />\n          </div>\n        </HashRouter>\n      </div>\n    );\n  }\n}\n","import * as actionConst from \"../actions/action-constants\";\n\nimport { checkForDebtInstance } from \"../utils\";\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case actionConst.addDebtInstance: {\n      return {\n        ...state,\n        debtList: [...state.debtList, action.payload.key],\n        debtMap: {\n          ...state.debtMap,\n          [action.payload.key]: {\n            debts: action.payload.debts\n          }\n        }\n      };\n    }\n    case actionConst.deleteDebt: {\n      let id = action.payload.userIDOne + action.payload.userIDTwo;\n      return {\n        ...state,\n        debtMap: {\n          ...state.debtMap,\n          [id]: {\n            debts: [\n              ...state.debtMap[id].debts.slice(0, action.payload.index),\n              ...state.debtMap[id].debts.slice(action.payload.index + 1)\n            ]\n          }\n        }\n      };\n    }\n    case actionConst.deleteUser: {\n      let newUserMap = {};\n      state.emails.forEach(email => {\n        if (email !== action.payload.email) {\n          newUserMap[email] = state.users[email];\n        }\n      });\n      return {\n        ...state,\n        emails: state.emails.filter(email => email !== action.payload.email),\n        users: newUserMap\n      };\n    }\n    case actionConst.deleteDebtMap: {\n      let id = action.payload.userIDOne + action.payload.userIDTwo;\n      let newDebtMap = {};\n      state.debtList.forEach(debt => {\n        if (debt !== id) {\n          newDebtMap[debt] = state.debtMap[debt];\n        }\n      });\n      return {\n        ...state,\n        debtList: state.debtList.filter(debt => debt !== id),\n        debtMap: newDebtMap\n      };\n    }\n    case actionConst.clearData: {\n      return {\n        emails: [],\n        users: {},\n        debtMap: {},\n        debtList: []\n      };\n    }\n    case actionConst.addUser: {\n      return {\n        ...state,\n        emails: [...state.emails, action.email],\n        users: {\n          ...state.users,\n          [action.email]: action.payload\n        }\n      };\n    }\n    case actionConst.addDebt: {\n      let id = action.payload.userIDOne + action.payload.userIDTwo;\n\n      if (\n        checkForDebtInstance(\n          state.debtList,\n          action.payload.userIDOne,\n          action.payload.userIDTwo\n        )\n      ) {\n        return {\n          ...state,\n          debtMap: {\n            ...state.debtMap,\n            [id]: {\n              debts: [...state.debtMap[id].debts, action.payload]\n            }\n          }\n        };\n      } else {\n        return {\n          ...state,\n          debtList: [...state.debtList, id],\n          debtMap: {\n            ...state.debtMap,\n            [id]: {\n              debts: [action.payload]\n            }\n          }\n        };\n      }\n    }\n    default: {\n      return state;\n    }\n  }\n}\n\nexport default reducer;\n","import { createStore, applyMiddleware } from \"redux\";\nimport reducer from \"./reducers/reducer\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport reduxCookiesMiddleware from \"redux-cookies-middleware\";\nimport { getStateFromCookies } from \"redux-cookies-middleware\";\n\nconst defaultState = {\n  emails: [],\n  users: {},\n  debtMap: {},\n  debtList: []\n};\n\n\nconst cookiePaths = {\n    \"emails\": { name: \"HMDIOY_EMAILS\" },\n    \"users\": { name: \"HMDIOY_USERS\" },\n    \"debtMap\": { name: \"HMDIOY_DEBTMAP\" },\n    \"debtList\": { name: \"HMDIOY_DEBTLIST\" },\n}\n\nlet initialState = getStateFromCookies(defaultState, cookiePaths);\n\nif(!initialState.emails) {\n    initialState.emails = [];\n}\n\nif(!initialState.users) {\n    initialState.users = {};\n}\n\nif(!initialState.debtMap) {\n    initialState.debtMap = {};\n}\n\nif(!initialState.debtList) {\n    initialState.debtList = [];\n}\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(reduxCookiesMiddleware(cookiePaths)))\n);\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}