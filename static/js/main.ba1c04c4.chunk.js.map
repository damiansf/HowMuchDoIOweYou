{"version":3,"sources":["components/ManageData/index.js","actions/action-constants.js","utils.js","actions/actionDefs.js","containers/manageDataContainer.js","components/AddUser/index.js","containers/addUserContainer.js","components/DisplayUsers/index.js","containers/displayUsersContainer.js","containers/manageUsersContainer.js","components/AddDebt/index.js","containers/addDebtContainer.js","components/DisplayDebts/index.js","containers/displayDebtsContainer.js","containers/manageDebtsContainer.js","App.js","reducers/reducer.js","store.js","index.js"],"names":["ManageData","_ref","clearData","uploadData","data","react_default","a","createElement","href","download","type","title","onChange","e","onClick","addUser","addDebt","deleteDebt","deleteUser","deleteDebtMap","addDebtInstance","checkForDebtInstance","debtArray","idOne","idTwo","includes","orderEmails","firstEmail","secondEmail","userOne","userTwo","localeCompare","getIdentifier","email","user","key","value","firstName","lastName","actionConst","payload","_orderEmails2","ownerEmail","slaveEmail","userIDOne","userIDTwo","multiplier","amount","notes","timeStamp","Date","now","ManageDataContainer","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","bind","assertThisInitialized","_this2","file","target","files","reader","FileReader","onload","obj","JSON","parse","result","emails","forEach","props","users","debtList","debt","debtMap","debts","debtItem","existing","existingDebtItem","error","alert","readAsText","window","File","FileList","Blob","ManageData_ManageData","URL","createObjectURL","stringify","React","Component","connect","dispatch","AddUser","handleFirstName","handleLastName","handleEmail","name","AddUserContainer","AddUser_AddUser","event","setState","DisplayUsers","editUser","map","emailTwo","_orderEmails","editEmail","console","log","Modal","setAppElement","modalIsOpen","cancelEdit","saveEdit","DisplayUsers_DisplayUsers","lib_default","isOpen","onRequestClose","contentLabel","ManageUsersContainer","addUserContainer","displayUsersContainer","AddDebt","handleOwnerEmail","handleSlaveEmail","handleNotes","handleAmount","emailOne","AddDebtContainer","AddDebt_AddDebt","isNaN","DisplayDebts","setTotalDebtMapAmount","setDebtMapData","buildDebtMapTable","debtMapData","debtMapTotal","allDebtsData","allDebtsTotal","handleSingleSlaveEmail","singleSlaveEmail","buildDebtsTable","setDebtsData","setTotalDebtsAmount","handleSingleOwnerEmail","setCreditsData","singleOwnerEmail","allCreditsTotal","allCreditsData","setTotalCreditsAmount","buildCreditsTable","setNumDebts","setNumCredits","reduce","prev","curr","currAmount","countDebts","push","countCredits","DisplayDebtsContainer","numDebts","numCredits","_this3","_this4","index","length","newTotal","newData","splice","_this5","DisplayDebts_DisplayDebts","ManageDebtsContainer","addDebtContainer","displayDebtsContainer","App","react_router_dom","basename","to","react_router","path","component","reducer","action","objectSpread","concat","toConsumableArray","defineProperty","id","slice","newUserMap","filter","newDebtMap","cookiePaths","initialState","getStateFromCookies","store","createStore","composeWithDevTools","applyMiddleware","reduxCookiesMiddleware","ReactDOM","render","es","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.ba1c04c4.chunk.js","sourcesContent":["import React from \"react\";\n\nexport const ManageData = ({ clearData, uploadData, data }) => (\n  <div>\n    <a href={data} download={\"data.json\"}>\n      Download Data\n    </a>\n    <span>Upload Data</span>\n    <input\n      type=\"file\"\n      title=\"Upload Data\"\n      onChange={e => {\n        uploadData(e);\n      }}\n    />\n    <button onClick={clearData}>Clear Data</button>\n  </div>\n);\n","export const addUser = \"ADD_USER\";\nexport const addDebt = \"ADD_DEBT\";\nexport const clearData = \"CLEAR_DATA\";\nexport const deleteDebt = \"DELETE_DEBT\";\nexport const deleteUser = \"DELETE_USER\";\nexport const deleteDebtMap = \"DELETE_DEBT_MAP\";\nexport const addDebtInstance = \"ADD_DEBT_INSTANCE\";","import React from \"react\";\n\nexport function checkForDebtInstance(debtArray, idOne, idTwo) {\n  return debtArray.includes(idOne + idTwo);\n}\n\nexport function orderEmails(firstEmail, secondEmail) {\n  let userOne = null;\n  let userTwo = null;\n\n  if (firstEmail.localeCompare(secondEmail) < 0) {\n    userOne = firstEmail;\n    userTwo = secondEmail;\n  } else {\n    userOne = secondEmail;\n    userTwo = firstEmail;\n  }\n\n  return {\n    userOne,\n    userTwo\n  };\n}\n\nexport function getIdentifier(email, user) {\n  return (\n    <option key={email} value={email}>\n      {user.firstName + \" \" + user.lastName + \" (\" + email + \")\"}\n    </option>\n  );\n}\n","import * as actionConst from \"./action-constants\";\nimport { orderEmails } from \"../utils\";\n\nexport function addUser(data) {\n  return {\n    type: actionConst.addUser,\n    payload: {\n      firstName: data.firstName,\n      lastName: data.lastName,\n      email: data.email\n    },\n    email: data.email\n  };\n}\n\nexport function clearData() {\n  return {\n    type: actionConst.clearData\n  };\n}\n\nexport function deleteDebt(data) {\n  let { userOne, userTwo } = orderEmails(data.ownerEmail, data.slaveEmail);\n\n  return {\n    type: actionConst.deleteDebt,\n    payload: { userIDOne: userOne, userIDTwo: userTwo, index: data.index }\n  };\n}\n\nexport function deleteUser(data) {\n  return {\n    type: actionConst.deleteUser,\n    payload: {\n      email: data.email\n    }\n  };\n}\n\nexport function deleteDebtMap(data) {\n  let { userOne, userTwo } = orderEmails(data.ownerEmail, data.slaveEmail);\n\n  return {\n    type: actionConst.deleteDebtMap,\n    payload: { userIDOne: userOne, userIDTwo: userTwo }\n  };\n}\n\nexport function addDebt(data) {\n  let userOne = \"\";\n  let userTwo = \"\";\n  let multiplier = 1;\n\n  if (data.userOne.localeCompare(data.userTwo) < 0) {\n    userOne = data.userOne;\n    userTwo = data.userTwo;\n    multiplier = -1;\n  } else {\n    userOne = data.userTwo;\n    userTwo = data.userOne;\n  }\n\n  return {\n    type: actionConst.addDebt,\n    payload: {\n      userIDOne: userOne,\n      userIDTwo: userTwo,\n      amount: data.amount * multiplier,\n      notes: data.notes,\n      timeStamp: Date.now()\n    }\n  };\n}\n\nexport function addDebtInstance(data) {\n  return {\n    type: actionConst.addDebtInstance,\n    payload: {\n      key: data.key,\n      debts: data.debts\n    }\n  };\n}\n","import { ManageData } from \"../components/ManageData/index\";\nimport {\n  clearData,\n  addUser,\n  addDebt,\n  addDebtInstance\n} from \"../actions/actionDefs\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\n\nclass ManageDataContainer extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {};\n\n    this.uploadData = this.uploadData.bind(this);\n  }\n\n  uploadData(e) {\n    let file = e.target.files[0];\n\n    if (!file.type.includes(\"json\")) {\n      alert(\"Invalid file type, only accept json files\");\n      return;\n    }\n\n    let reader = new FileReader();\n\n    reader.onload = (() => {\n      return e => {\n        try {\n          let obj = JSON.parse(e.target.result);\n\n          obj.emails.forEach(email => {\n            if (!this.props.emails.includes(email)) {\n              this.props.addUser({\n                firstName: obj.users[email].firstName,\n                lastName: obj.users[email].lastName,\n                email: obj.users[email].email\n              });\n            }\n          });\n\n          obj.debtList.forEach(debt => {\n            if (!this.props.debtList.includes(debt)) {\n              this.props.addDebtInstance({\n                debts: obj.debtMap[debt].debts,\n                key: debt\n              });\n            } else {\n              obj.debtMap[debt].debts.forEach(debtItem => {\n                let existing = false;\n                this.props.debtMap[debt].debts.forEach(existingDebtItem => {\n                  if (existingDebtItem.timeStamp === debtItem.timeStamp) {\n                    existing = true;\n                  }\n                });\n                if (!existing) {\n                  this.props.addDebt({\n                    userOne: debtItem.userIDOne,\n                    userTwo: debtItem.userIDTwo,\n                    amount: debtItem.amount * -1,\n                    notes: debtItem.notes\n                  });\n                }\n              });\n            }\n          });\n        } catch (error) {\n          alert(\"Error parsing json: \" + error);\n        }\n      };\n    })(file);\n    reader.readAsText(file);\n  }\n\n  render() {\n    if (window.File && window.FileReader && window.FileList && window.Blob) {\n      return (\n        <ManageData\n          clearData={this.props.clearData}\n          uploadData={this.uploadData}\n          data={URL.createObjectURL(\n            new Blob(\n              [\n                JSON.stringify({\n                  users: this.props.users,\n                  emails: this.props.emails,\n                  debtList: this.props.debtList,\n                  debtMap: this.props.debtMap\n                })\n              ],\n              {\n                type: \"application/json\"\n              }\n            )\n          )}\n        />\n      );\n    } else {\n      return <span>File API's not available</span>;\n    }\n  }\n}\n\nconst mapStateToProps = state => ({\n  users: state.users,\n  emails: state.emails,\n  debtList: state.debtList,\n  debtMap: state.debtMap\n});\n\nconst mapDispatchToProps = dispatch => ({\n  clearData: () => dispatch(clearData()),\n  addUser: data => dispatch(addUser(data)),\n  addDebt: data => dispatch(addDebt(data)),\n  addDebtInstance: data => dispatch(addDebtInstance(data))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ManageDataContainer);\n","import React from \"react\";\n\nexport const AddUser = ({\n  handleFirstName,\n  handleLastName,\n  handleEmail,\n  addUser,\n  emails,\n  firstName,\n  lastName,\n  email\n}) => (\n  <form>\n    <label>\n      FirstName:\n      <input\n        type=\"text\"\n        name=\"firstName\"\n        value={firstName}\n        onChange={e => handleFirstName(e)}\n      />\n    </label>\n    <label>\n      LastName:\n      <input\n        type=\"text\"\n        name=\"lastName\"\n        value={lastName}\n        onChange={e => handleLastName(e)}\n      />\n    </label>\n    <label>\n      Email:\n      <input\n        type=\"text\"\n        name=\"email\"\n        value={email}\n        onChange={e => handleEmail(e)}\n      />\n    </label>\n    <input\n      type=\"button\"\n      value=\"Submit\"\n      onClick={() => {\n        if (!emails.includes(email)) {\n          addUser({\n            firstName: firstName,\n            lastName: lastName,\n            email: email\n          });\n          alert(\"User added\");\n        } else {\n          alert(\"User with same email already exists\");\n        }\n      }}\n    />\n  </form>\n);\n","import { AddUser } from \"../components/AddUser/index\";\nimport { addUser } from \"../actions/actionDefs\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\n\nclass AddUserContainer extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\"\n    };\n  }\n\n  render() {\n    return (\n      <AddUser\n        email={this.state.email}\n        lastName={this.state.lastName}\n        firstName={this.state.firstName}\n        handleEmail={event => this.setState({ email: event.target.value })}\n        handleLastName={event =>\n          this.setState({ lastName: event.target.value })\n        }\n        handleFirstName={event =>\n          this.setState({ firstName: event.target.value })\n        }\n        emails={this.props.emails}\n        addUser={this.props.addUser}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  emails: state.emails\n});\n\nconst mapDispatchToProps = dispatch => ({\n  addUser: data => dispatch(addUser(data))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AddUserContainer);\n","import React from \"react\";\n\nexport const DisplayUsers = ({\n  users,\n  emails,\n  debtList,\n  deleteUser,\n  deleteDebtMap,\n  checkForDebtInstance,\n  editUser,\n  orderEmails\n}) => (\n  <table>\n    <thead>\n      <tr>\n        <th>First Name</th>\n        <th>Last Name</th>\n        <th>Email</th>\n      </tr>\n    </thead>\n    <tbody>\n      {emails.map(email => {\n        return (\n          <tr key={users[email].email}>\n            <td>{users[email].firstName}</td>\n            <td>{users[email].lastName}</td>\n            <td>{users[email].email}</td>\n            <td>\n              <button\n                onClick={() => {\n                  emails.forEach(emailTwo => {\n                    let { userOne, userTwo } = orderEmails(email, emailTwo);\n                    if (checkForDebtInstance(debtList, userOne, userTwo)) {\n                      deleteDebtMap({\n                        ownerEmail: userOne,\n                        slaveEmail: userTwo\n                      });\n                    }\n                  });\n\n                  deleteUser({ email: email });\n                }}\n              />\n              <button\n                onClick={() => {\n                  let editEmail = false;\n                  emails.forEach(emailTwo => {\n                    let { userOne, userTwo } = orderEmails(email, emailTwo);\n                    if (!checkForDebtInstance(debtList, userOne, userTwo)) {\n                      editEmail = true;\n                    } else {\n                      editEmail = false;\n                    }\n                  });\n                  console.log(editEmail);\n                  editUser(email, editEmail);\n                }}\n              >\n                Edit\n              </button>\n            </td>\n          </tr>\n        );\n      })}\n    </tbody>\n  </table>\n);\n","import { DisplayUsers } from \"../components/DisplayUsers/index\";\nimport React from \"react\";\nimport { deleteUser, deleteDebtMap } from \"../actions/actionDefs\";\nimport { checkForDebtInstance, orderEmails } from \"../utils\";\nimport { connect } from \"react-redux\";\nimport Modal from \"react-modal\";\n\nModal.setAppElement(\"#root\");\n\nclass AddUserContainer extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      modalIsOpen: false,\n      firstName: \"\",\n      lastName: \"\",\n      editEmail: false\n    };\n\n    this.editUser = this.editUser.bind(this);\n    this.cancelEdit = this.cancelEdit.bind(this);\n    this.saveEdit = this.saveEdit.bind(this);\n  }\n\n  editUser(email, editEmail) {\n    this.setState({\n      modalIsOpen: true,\n      firstName: this.props.users[email].firstName,\n      lastName: this.props.users[email].lastName,\n      editEmail: editEmail\n    });\n  }\n\n  cancelEdit() {\n    this.setState({\n      modalIsOpen: false,\n      firstName: \"\",\n      lastName: \"\",\n      editEmail: false\n    });\n  }\n\n  saveEdit() {\n    this.setState({\n      modalIsOpen: false,\n      firstName: \"\",\n      lastName: \"\",\n      editEmail: false\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <DisplayUsers\n          users={this.props.users}\n          emails={this.props.emails}\n          debtList={this.props.debtList}\n          deleteUser={this.props.deleteUser}\n          deleteDebtMap={this.props.deleteDebtMap}\n          checkForDebtInstance={checkForDebtInstance}\n          editUser={this.editUser}\n          orderEmails={orderEmails}\n        />\n        <Modal\n          isOpen={this.state.modalIsOpen}\n          onRequestClose={this.cancelEdit}\n          contentLabel=\"Edit User\"\n        >\n          <button onClick={this.cancelEdit}>close</button>\n          <span>\n            {this.state.editEmail\n              ? \"\"\n              : \"Note, only the first and last name can be changed for this user as they are involved in debts\"}\n          </span>\n          <span>{this.state.firstName}</span>\n          <span>{this.state.lastName}</span>\n          <form />\n        </Modal>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  users: state.users,\n  emails: state.emails,\n  debtList: state.debtList\n});\n\nconst mapDispatchToProps = dispatch => ({\n  deleteUser: data => dispatch(deleteUser(data)),\n  deleteDebtMap: data => dispatch(deleteDebtMap(data))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AddUserContainer);\n","import React from \"react\";\nimport AddUserContainer from \"./addUserContainer\";\nimport DisplayUsersContainer from \"./displayUsersContainer\";\n\nexport default class ManageUsersContainer extends React.Component {\n    render() {\n        return (\n          <div>\n            <AddUserContainer />\n            <DisplayUsersContainer />\n          </div>\n        );\n      }\n}","import React from \"react\";\nimport { getIdentifier } from \"../../utils\";\n\nexport const AddDebt = ({\n  emails,\n  users,\n  addDebt,\n  handleOwnerEmail,\n  handleSlaveEmail,\n  handleNotes,\n  handleAmount,\n  amount,\n  notes,\n  emailOne,\n  emailTwo\n}) => (\n  <form>\n    <span>owner</span>\n    <select onChange={e => handleOwnerEmail(e)}>\n      <option>--</option>\n      {emails.map(email => {\n        return getIdentifier(email, users[email]);\n      })}\n    </select>\n    <span>slave</span>\n    <select onChange={e => handleSlaveEmail(e)}>\n      <option>--</option>\n      {emails.map(email => {\n        return getIdentifier(email, users[email]);\n      })}\n    </select>\n    <label>\n      Amount:\n      <input\n        type=\"text\"\n        name=\"amount\"\n        value={amount}\n        onChange={e => handleAmount(e)}\n      />\n    </label>\n    <label>\n      Notes:\n      <input\n        type=\"text\"\n        name=\"notes\"\n        value={notes}\n        onChange={e => handleNotes(e)}\n      />\n    </label>\n    <input\n      type=\"button\"\n      value=\"Submit\"\n      onClick={() => {\n        if (!emailTwo) {\n          alert(\"Second email either null or the same\");\n        } else {\n          addDebt({\n            userOne: emailOne ? emailOne : emails[0],\n            userTwo: emailTwo,\n            amount: amount,\n            notes: notes\n          });\n          alert(\"User Debt added\");\n        }\n      }}\n    />\n  </form>\n);\n","import { AddDebt } from \"../components/AddDebt/index\";\nimport { addDebt } from \"../actions/actionDefs\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\n\nclass AddDebtContainer extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      amount: \"\",\n      notes: \"\",\n      emailOne: \"\",\n      emailTwo: \"\"\n    };\n  }\n\n  render() {\n    return (\n      <AddDebt\n        emails={this.props.emails}\n        users={this.props.users}\n        notes={this.state.notes}\n        amount={this.state.amount}\n        emailOne={this.state.emailOne}\n        emailTwo={this.state.emailTwo}\n        addDebt={this.props.addDebt}\n        handleOwnerEmail={event =>\n          this.setState({ emailOne: event.target.value })\n        }\n        handleSlaveEmail={event =>\n          this.setState({ emailTwo: event.target.value })\n        }\n        handleNotes={event => this.setState({ notes: event.target.value })}\n        handleAmount={event => {\n          if (!isNaN(event.target.value)) {\n            this.setState({ amount: event.target.value });\n          }\n        }}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  emails: state.emails,\n  users: state.users\n});\n\nconst mapDispatchToProps = dispatch => ({\n  addDebt: data => dispatch(addDebt(data))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AddDebtContainer);\n","import React from \"react\";\nimport { getIdentifier } from \"../../utils\";\n\nexport const DisplayDebts = ({\n  handleOwnerEmail,\n  handleSlaveEmail,\n  setTotalDebtMapAmount,\n  setDebtMapData,\n  buildDebtMapTable,\n  emails,\n  users,\n  debtMap,\n  debtList,\n  ownerEmail,\n  slaveEmail,\n  debtMapData,\n  debtMapTotal,\n  allDebtsData,\n  allDebtsTotal,\n  handleSingleSlaveEmail,\n  singleSlaveEmail,\n  buildDebtsTable,\n  setDebtsData,\n  setTotalDebtsAmount,\n  handleSingleOwnerEmail,\n  setCreditsData,\n  singleOwnerEmail,\n  allCreditsTotal,\n  allCreditsData,\n  setTotalCreditsAmount,\n  buildCreditsTable,\n  setNumDebts,\n  setNumCredits\n}) => (\n  <div>\n    <form>\n      <span>slave</span>\n      <select onChange={e => handleSlaveEmail(e)}>\n        <option>--</option>\n        {emails.map(email => {\n          return getIdentifier(email, users[email]);\n        })}\n      </select>\n      <span>owner</span>\n      <select onChange={e => handleOwnerEmail(e)}>\n        <option>--</option>\n        {emails.map(email => {\n          return getIdentifier(email, users[email]);\n        })}\n      </select>\n      <input\n        type=\"button\"\n        value=\"Submit\"\n        onClick={() => {\n          let data = null;\n          let amount = 0;\n          if (ownerEmail.localeCompare(slaveEmail) < 0) {\n            if (debtList.includes(ownerEmail + slaveEmail)) {\n              data = buildDebtMapTable(debtMap[ownerEmail + slaveEmail], -1);\n              amount =\n                debtMap[ownerEmail + slaveEmail].debts.reduce(\n                  (prev, curr) => prev + curr.amount,\n                  0\n                ) * -1;\n            }\n          } else {\n            if (debtList.includes(slaveEmail + ownerEmail)) {\n              data = buildDebtMapTable(debtMap[slaveEmail + ownerEmail], 1);\n              amount = debtMap[slaveEmail + ownerEmail].debts.reduce(\n                (prev, curr) => prev + curr.amount,\n                0\n              );\n            }\n          }\n          setTotalDebtMapAmount(amount);\n          setDebtMapData(data);\n        }}\n      />\n    </form>\n    <table>\n      <thead>\n        <tr>\n          <th>User One</th>\n          <th>User Two</th>\n          <th>Amount</th>\n          <th>Notes</th>\n          <th>Delete Debt</th>\n        </tr>\n      </thead>\n      <tbody>{debtMapData}</tbody>\n    </table>\n    <span>{debtMapTotal}</span>\n    <br />\n    <form>\n      <span>slave</span>\n      <select onChange={e => handleSingleSlaveEmail(e)}>\n        <option>--</option>\n        {emails.map(email => {\n          return getIdentifier(email, users[email]);\n        })}\n      </select>\n      <input\n        type=\"button\"\n        value=\"Submit\"\n        onClick={() => {\n          let data = [];\n          let amount = 0;\n          let currAmount = 0;\n          let countDebts = 0;\n          emails.forEach(email => {\n            if (singleSlaveEmail.localeCompare(email) < 0) {\n              if (debtList.includes(singleSlaveEmail + email)) {\n                currAmount = debtMap[singleSlaveEmail + email].debts.reduce(\n                  (prev, curr) => prev + curr.amount,\n                  0\n                );\n                amount += currAmount;\n                countDebts++;\n                data.push(buildDebtsTable(email, singleSlaveEmail, currAmount));\n              }\n            } else {\n              if (debtList.includes(email + singleSlaveEmail)) {\n                currAmount =\n                  debtMap[email + singleSlaveEmail].debts.reduce(\n                    (prev, curr) => prev + curr.amount,\n                    0\n                  ) * -1;\n                amount += currAmount;\n                countDebts++;\n                data.push(buildDebtsTable(email, singleSlaveEmail, currAmount));\n              }\n            }\n          });\n          setNumDebts(countDebts);\n          if (amount > 0) {\n            setTotalDebtsAmount(amount);\n            setDebtsData(data);\n          } else {\n            setTotalDebtsAmount(0);\n            setDebtsData([]);\n          }\n        }}\n      />\n    </form>\n    <table>\n      <thead>\n        <tr>\n          <th>User One</th>\n          <th>User Two</th>\n          <th>Amount</th>\n          <th>Delete Debt</th>\n        </tr>\n      </thead>\n      <tbody>{allDebtsData}</tbody>\n    </table>\n    <span>{allDebtsTotal}</span>\n    <br />\n    <form>\n      <span>owner</span>\n      <select onChange={e => handleSingleOwnerEmail(e)}>\n        <option>--</option>\n        {emails.map(email => {\n          return getIdentifier(email, users[email]);\n        })}\n      </select>\n      <input\n        type=\"button\"\n        value=\"Submit\"\n        onClick={() => {\n          let data = [];\n          let amount = 0;\n          let currAmount = 0;\n          let countCredits = 0;\n          emails.forEach(email => {\n            if (singleOwnerEmail.localeCompare(email) < 0) {\n              if (debtList.includes(singleOwnerEmail + email)) {\n                currAmount =\n                  debtMap[singleOwnerEmail + email].debts.reduce(\n                    (prev, curr) => prev + curr.amount,\n                    0\n                  ) * -1;\n                amount += currAmount;\n                countCredits++;\n                data.push(\n                  buildCreditsTable(singleOwnerEmail, email, currAmount)\n                );\n              }\n            } else {\n              if (debtList.includes(email + singleOwnerEmail)) {\n                currAmount = debtMap[email + singleOwnerEmail].debts.reduce(\n                  (prev, curr) => prev + curr.amount,\n                  0\n                );\n                amount += currAmount;\n                countCredits++;\n                data.push(\n                  buildCreditsTable(singleOwnerEmail, email, currAmount)\n                );\n              }\n            }\n          });\n          setNumCredits(countCredits);\n          if (amount > 0) {\n            setTotalCreditsAmount(amount);\n            setCreditsData(data);\n          } else {\n            setTotalCreditsAmount(0);\n            setCreditsData([]);\n          }\n        }}\n      />\n    </form>\n    <table>\n      <thead>\n        <tr>\n          <th>User One</th>\n          <th>User Two</th>\n          <th>Amount</th>\n          <th>Delete Debt</th>\n        </tr>\n      </thead>\n      <tbody>{allCreditsData}</tbody>\n    </table>\n    <span>{allCreditsTotal}</span>\n  </div>\n);\n","import { DisplayDebts } from \"../components/DisplayDebts/index\";\nimport { deleteDebtMap, deleteDebt } from \"../actions/actionDefs\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\n\nclass DisplayDebtsContainer extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      debtMapData: null,\n      ownerEmail: \"\",\n      slaveEmail: \"\",\n      singleSlaveEmail: \"\",\n      debtMapTotal: 0,\n      allDebtsData: null,\n      allDebtsTotal: 0,\n      singleOwnerEmail: \"\",\n      allCreditsTotal: 0,\n      allCreditsData: null,\n      numDebts: 0,\n      numCredits: 0\n    };\n\n    this.buildDebtMapTable = this.buildDebtMapTable.bind(this);\n    this.buildDebtsTable = this.buildDebtsTable.bind(this);\n    this.buildCreditsTable = this.buildCreditsTable.bind(this);\n  }\n\n  buildDebtsTable(ownerEmail, slaveEmail, amount) {\n    return (\n      <tr key={ownerEmail + slaveEmail + amount}>\n        <td>{slaveEmail}</td>\n        <td>{ownerEmail}</td>\n        <td>{amount}</td>\n        <td>\n          <button\n            onClick={() => {\n              this.props.deleteDebtMap({\n                ownerEmail: ownerEmail,\n                slaveEmail: slaveEmail\n              });\n              if (this.state.numDebts === 1) {\n                this.setState({\n                  numDebts: 0,\n                  allDebtsData: null,\n                  allDebtsTotal: 0\n                });\n              } else {\n                this.setState({ numDebts: this.state.numDebts - 1 });\n              }\n            }}\n          />\n        </td>\n      </tr>\n    );\n  }\n\n  buildCreditsTable(ownerEmail, slaveEmail, amount) {\n    return (\n      <tr key={ownerEmail + slaveEmail + amount}>\n        <td>{ownerEmail}</td>\n        <td>{slaveEmail}</td>\n        <td>{amount}</td>\n        <td>\n          <button\n            onClick={() => {\n              this.props.deleteDebtMap({\n                ownerEmail: ownerEmail,\n                slaveEmail: slaveEmail\n              });\n              if (this.state.numCredits === 1) {\n                this.setState({\n                  numCredits: 0,\n                  allCreditsData: null,\n                  allCreditsTotal: 0\n                });\n              } else {\n                this.setState({ numCredits: this.state.numCredits - 1 });\n              }\n            }}\n          />\n        </td>\n      </tr>\n    );\n  }\n\n  buildDebtMapTable(data, multiplier) {\n    if (multiplier === 1) {\n      return data.debts.map((debt, index) => {\n        return (\n          <tr key={index}>\n            <td>{debt.userIDOne}</td>\n            <td>{debt.userIDTwo}</td>\n            <td>{debt.amount}</td>\n            <td>{debt.notes}</td>\n            <td>\n              <button\n                onClick={() => {\n                  if (data.debts.length <= 1) {\n                    this.props.deleteDebtMap({\n                      ownerEmail: debt.userIDTwo,\n                      slaveEmail: debt.userIDOne\n                    });\n                    this.setState({\n                      debtMapData: null,\n                      debtMapTotal: 0\n                    });\n                  } else {\n                    this.props.deleteDebt({\n                      index: index,\n                      ownerEmail: debt.userIDTwo,\n                      slaveEmail: debt.userIDOne\n                    });\n                    let newTotal = this.state.debtMapTotal - debt.amount;\n                    let newData = data;\n                    newData.debts.splice(index, 1);\n                    this.setState({\n                      debtMapData: this.buildDebtMapTable(newData, multiplier),\n                      debtMapTotal: newTotal\n                    });\n                  }\n                }}\n              />\n            </td>\n          </tr>\n        );\n      });\n    } else {\n      return data.debts.map((debt, index) => {\n        return (\n          <tr key={index}>\n            <td>{debt.userIDTwo}</td>\n            <td>{debt.userIDOne}</td>\n            <td>{debt.amount * multiplier}</td>\n            <td>{debt.notes}</td>\n            <td>\n              <button\n                onClick={() => {\n                  if (data.debts.length <= 1) {\n                    this.props.deleteDebtMap({\n                      ownerEmail: debt.userIDTwo,\n                      slaveEmail: debt.userIDOne\n                    });\n                    this.setState({\n                      debtMapData: null,\n                      debtMapTotal: 0\n                    });\n                  } else {\n                    this.props.deleteDebt({\n                      index: index,\n                      ownerEmail: debt.userIDTwo,\n                      slaveEmail: debt.userIDOne\n                    });\n                    let newTotal = this.state.debtMapTotal + debt.amount;\n                    let newData = data;\n                    newData.debts.splice(index, 1);\n                    this.setState({\n                      debtMapData: this.buildDebtMapTable(newData, multiplier),\n                      debtMapTotal: newTotal\n                    });\n                  }\n                }}\n              />\n            </td>\n          </tr>\n        );\n      });\n    }\n  }\n\n  render() {\n    return (\n      <DisplayDebts\n        handleOwnerEmail={event =>\n          this.setState({ ownerEmail: event.target.value })\n        }\n        handleSlaveEmail={event =>\n          this.setState({ slaveEmail: event.target.value })\n        }\n        handleSingleSlaveEmail={event =>\n          this.setState({ singleSlaveEmail: event.target.value })\n        }\n        handleSingleOwnerEmail={event =>\n          this.setState({ singleOwnerEmail: event.target.value })\n        }\n        setTotalDebtMapAmount={debtMapTotal =>\n          this.setState({ debtMapTotal: debtMapTotal })\n        }\n        setDebtMapData={debtMapData =>\n          this.setState({ debtMapData: debtMapData })\n        }\n        setTotalDebtsAmount={allDebtsTotal =>\n          this.setState({ allDebtsTotal: allDebtsTotal })\n        }\n        setTotalCreditsAmount={allCreditsTotal =>\n          this.setState({ allCreditsTotal: allCreditsTotal })\n        }\n        setDebtsData={allDebtsData =>\n          this.setState({ allDebtsData: allDebtsData })\n        }\n        setCreditsData={allCreditsData =>\n          this.setState({ allCreditsData: allCreditsData })\n        }\n        setNumDebts={numDebts => this.setState({ numDebts: numDebts })}\n        setNumCredits={numCredits => this.setState({ numCredits: numCredits })}\n        buildDebtMapTable={this.buildDebtMapTable}\n        buildDebtsTable={this.buildDebtsTable}\n        buildCreditsTable={this.buildCreditsTable}\n        emails={this.props.emails}\n        users={this.props.users}\n        debtMap={this.props.debtMap}\n        debtList={this.props.debtList}\n        ownerEmail={this.state.ownerEmail}\n        slaveEmail={this.state.slaveEmail}\n        debtMapData={this.state.debtMapData}\n        debtMapTotal={this.state.debtMapTotal}\n        allDebtsData={this.state.allDebtsData}\n        allDebtsTotal={this.state.allDebtsTotal}\n        singleSlaveEmail={this.state.singleSlaveEmail}\n        singleOwnerEmail={this.state.singleOwnerEmail}\n        allCreditsTotal={this.state.allCreditsTotal}\n        allCreditsData={this.state.allCreditsData}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  emails: state.emails,\n  users: state.users,\n  debtMap: state.debtMap,\n  debtList: state.debtList\n});\n\nconst mapDispatchToProps = dispatch => ({\n  deleteDebtMap: data => dispatch(deleteDebtMap(data)),\n  deleteDebt: data => dispatch(deleteDebt(data))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(DisplayDebtsContainer);\n","import React from \"react\";\nimport AddDebtContainer from \"./addDebtContainer\";\nimport DisplayDebtsContainer from \"./displayDebtsContainer\";\n\nexport default class ManageDebtsContainer extends React.Component {\n  render() {\n    return (\n      <div>\n        <AddDebtContainer />\n        <DisplayDebtsContainer />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ManageDataContainer from \"./containers/manageDataContainer\";\nimport ManageUsersContainer from \"./containers/manageUsersContainer\";\nimport ManageDebtsContainer from \"./containers/manageDebtsContainer\";\nimport { HashRouter, Route, Link } from \"react-router-dom\";\n\nexport default class App extends React.Component {\n  render() {\n    return (\n      <div>\n        <header>\n          <p>How Much Do I Owe You?</p>\n        </header>\n        <HashRouter basename=\"/\">\n          <div>\n            <ul>\n              <li>\n                <Link to=\"/\">Home</Link>\n              </li>\n              <li>\n                <Link to=\"/manageUsers\">Manage Users</Link>\n              </li>\n              <li>\n                <Link to=\"/manageDebts\">Manage Debts</Link>\n              </li>\n              <li>\n                <Link to=\"/manageData\">Manage Data</Link>\n              </li>\n            </ul>\n            <Route path=\"/manageDebts\" component={ManageDebtsContainer} />\n            <Route path=\"/manageUsers\" component={ManageUsersContainer} />\n            <Route path=\"/manageData\" component={ManageDataContainer} />\n          </div>\n        </HashRouter>\n      </div>\n    );\n  }\n}\n","import * as actionConst from \"../actions/action-constants\";\n\nimport { checkForDebtInstance } from \"../utils\";\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case actionConst.addDebtInstance: {\n      return {\n        ...state,\n        debtList: [...state.debtList, action.payload.key],\n        debtMap: {\n          ...state.debtMap,\n          [action.payload.key]: {\n            debts: action.payload.debts\n          }\n        }\n      };\n    }\n    case actionConst.deleteDebt: {\n      let id = action.payload.userIDOne + action.payload.userIDTwo;\n      return {\n        ...state,\n        debtMap: {\n          ...state.debtMap,\n          [id]: {\n            debts: [\n              ...state.debtMap[id].debts.slice(0, action.payload.index),\n              ...state.debtMap[id].debts.slice(action.payload.index + 1)\n            ]\n          }\n        }\n      };\n    }\n    case actionConst.deleteUser: {\n      let newUserMap = {};\n      state.emails.forEach(email => {\n        if (email !== action.payload.email) {\n          newUserMap[email] = state.users[email];\n        }\n      });\n      return {\n        ...state,\n        emails: state.emails.filter(email => email !== action.payload.email),\n        users: newUserMap\n      };\n    }\n    case actionConst.deleteDebtMap: {\n      let id = action.payload.userIDOne + action.payload.userIDTwo;\n      let newDebtMap = {};\n      state.debtList.forEach(debt => {\n        if (debt !== id) {\n          newDebtMap[debt] = state.debtMap[debt];\n        }\n      });\n      return {\n        ...state,\n        debtList: state.debtList.filter(debt => debt !== id),\n        debtMap: newDebtMap\n      };\n    }\n    case actionConst.clearData: {\n      return {\n        emails: [],\n        users: {},\n        debtMap: {},\n        debtList: []\n      };\n    }\n    case actionConst.addUser: {\n      return {\n        ...state,\n        emails: [...state.emails, action.email],\n        users: {\n          ...state.users,\n          [action.email]: action.payload\n        }\n      };\n    }\n    case actionConst.addDebt: {\n      let id = action.payload.userIDOne + action.payload.userIDTwo;\n\n      if (\n        checkForDebtInstance(\n          state.debtList,\n          action.payload.userIDOne,\n          action.payload.userIDTwo\n        )\n      ) {\n        return {\n          ...state,\n          debtMap: {\n            ...state.debtMap,\n            [id]: {\n              debts: [...state.debtMap[id].debts, action.payload]\n            }\n          }\n        };\n      } else {\n        return {\n          ...state,\n          debtList: [...state.debtList, id],\n          debtMap: {\n            ...state.debtMap,\n            [id]: {\n              debts: [action.payload]\n            }\n          }\n        };\n      }\n    }\n    default: {\n      return state;\n    }\n  }\n}\n\nexport default reducer;\n","import { createStore, applyMiddleware } from \"redux\";\nimport reducer from \"./reducers/reducer\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport reduxCookiesMiddleware from \"redux-cookies-middleware\";\nimport { getStateFromCookies } from \"redux-cookies-middleware\";\n\nconst defaultState = {\n  emails: [],\n  users: {},\n  debtMap: {},\n  debtList: []\n};\n\n\nconst cookiePaths = {\n    \"emails\": { name: \"HMDIOY_EMAILS\" },\n    \"users\": { name: \"HMDIOY_USERS\" },\n    \"debtMap\": { name: \"HMDIOY_DEBTMAP\" },\n    \"debtList\": { name: \"HMDIOY_DEBTLIST\" },\n}\n\nlet initialState = getStateFromCookies(defaultState, cookiePaths);\n\nif(!initialState.emails) {\n    initialState.emails = [];\n}\n\nif(!initialState.users) {\n    initialState.users = {};\n}\n\nif(!initialState.debtMap) {\n    initialState.debtMap = {};\n}\n\nif(!initialState.debtList) {\n    initialState.debtList = [];\n}\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(reduxCookiesMiddleware(cookiePaths)))\n);\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}