{"version":3,"sources":["components/AddUser/index.js","actions/action-constants.js","actions/actionDefs.js","containers/addUserContainer.js","utils.js","components/AddDebt/index.js","containers/addDebtContainer.js","components/DisplayDebts/index.js","containers/displayDebtsContainer.js","components/DisplayUsers/index.js","containers/displayUsersContainer.js","components/ManageData/index.js","containers/manageDataContainer.js","App.js","reducers/reducer.js","store.js","index.js"],"names":["AddUser","_ref","handleFirstName","handleLastName","handleEmail","addUser","emails","firstName","lastName","email","react_default","a","createElement","type","name","value","onChange","e","onClick","includes","alert","addDebt","clearData","deleteDebt","deleteUser","deleteDebtMap","addDebtInstance","data","actionConst","payload","userOne","userTwo","ownerEmail","localeCompare","slaveEmail","userIDOne","userIDTwo","multiplier","amount","notes","AddUserContainer","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","_this2","AddUser_AddUser","event","setState","target","props","React","Component","connect","dispatch","checkForDebtInstance","debtArray","idOne","idTwo","getIdentifier","user","key","AddDebt","users","handleOwnerEmail","handleSlaveEmail","handleNotes","handleAmount","emailOne","emailTwo","map","AddDebtContainer","AddDebt_AddDebt","isNaN","DisplayDebts","setTotalDebtMapAmount","setDebtMapData","buildDebtMapTable","debtMap","debtList","debtMapData","debtMapTotal","allDebtsData","allDebtsTotal","handleSingleSlaveEmail","singleSlaveEmail","buildDebtsTable","setDebtsData","setTotalDebtsAmount","handleSingleOwnerEmail","setCreditsData","singleOwnerEmail","allCreditsTotal","allCreditsData","setTotalCreditsAmount","buildCreditsTable","debts","reduce","prev","curr","currAmount","forEach","push","DisplayDebtsContainer","bind","assertThisInitialized","_this3","_this4","debt","index","length","_this5","DisplayDebts_DisplayDebts","DisplayUsers","DisplayUsers_DisplayUsers","ManageData","uploadData","href","download","title","ManageDataContainer","file","files","reader","FileReader","onload","obj","JSON","parse","result","error","readAsText","window","File","FileList","Blob","ManageData_ManageData","URL","createObjectURL","stringify","App","react_router_dom","basename","to","react_router","path","component","DisplayUsersContainer","reducer","action","objectSpread","concat","toConsumableArray","defineProperty","id","slice","newUserMap","filter","newDebtMap","cookiePaths","initialState","getStateFromCookies","store","createStore","composeWithDevTools","applyMiddleware","reduxCookiesMiddleware","ReactDOM","render","es","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.d812cf49.chunk.js","sourcesContent":["import React from \"react\";\n\nexport const AddUser = ({\n  handleFirstName,\n  handleLastName,\n  handleEmail,\n  addUser,\n  emails,\n  firstName,\n  lastName,\n  email\n}) => (\n  <form>\n    <label>\n      FirstName:\n      <input\n        type=\"text\"\n        name=\"firstName\"\n        value={firstName}\n        onChange={e => handleFirstName(e)}\n      />\n    </label>\n    <label>\n      LastName:\n      <input\n        type=\"text\"\n        name=\"lastName\"\n        value={lastName}\n        onChange={e => handleLastName(e)}\n      />\n    </label>\n    <label>\n      Email:\n      <input\n        type=\"text\"\n        name=\"email\"\n        value={email}\n        onChange={e => handleEmail(e)}\n      />\n    </label>\n    <input\n      type=\"button\"\n      value=\"Submit\"\n      onClick={() => {\n        if (!emails.includes(email)) {\n          addUser({\n            firstName: firstName,\n            lastName: lastName,\n            email: email\n          });\n          alert(\"User added\");\n        } else {\n          alert(\"User with same email already exists\");\n        }\n      }}\n    />\n  </form>\n);\n","export const addUser = \"ADD_USER\";\nexport const addDebt = \"ADD_DEBT\";\nexport const clearData = \"CLEAR_DATA\";\nexport const deleteDebt = \"DELETE_DEBT\";\nexport const deleteUser = \"DELETE_USER\";\nexport const deleteDebtMap = \"DELETE_DEBT_MAP\";\nexport const addDebtInstance = \"ADD_DEBT_INSTANCE\";","import * as actionConst from \"./action-constants\";\n\nexport function addUser(data) {\n  return {\n    type: actionConst.addUser,\n    payload: {\n      firstName: data.firstName,\n      lastName: data.lastName,\n      email: data.email\n    },\n    email: data.email\n  };\n}\n\nexport function clearData() {\n  return {\n    type: actionConst.clearData\n  };\n}\n\nexport function deleteDebt(data) {\n  let userOne = \"\";\n  let userTwo = \"\";\n\n  if (data.ownerEmail.localeCompare(data.slaveEmail) < 0) {\n    userOne = data.ownerEmail;\n    userTwo = data.slaveEmail;\n  } else {\n    userOne = data.slaveEmail;\n    userTwo = data.ownerEmail;\n  }\n\n  return {\n    type: actionConst.deleteDebt,\n    payload: { userIDOne: userOne, userIDTwo: userTwo, index: data.index }\n  };\n}\n\nexport function deleteUser(data) {\n  return {\n    type: actionConst.deleteUser,\n    payload: {\n      email: data.email\n    }\n  };\n}\n\nexport function deleteDebtMap(data) {\n  let userOne = \"\";\n  let userTwo = \"\";\n\n  if (data.ownerEmail.localeCompare(data.slaveEmail) < 0) {\n    userOne = data.ownerEmail;\n    userTwo = data.slaveEmail;\n  } else {\n    userOne = data.slaveEmail;\n    userTwo = data.ownerEmail;\n  }\n\n  return {\n    type: actionConst.deleteDebtMap,\n    payload: { userIDOne: userOne, userIDTwo: userTwo }\n  };\n}\n\nexport function addDebt(data) {\n  let userOne = \"\";\n  let userTwo = \"\";\n  let multiplier = 1;\n\n  if (data.userOne.localeCompare(data.userTwo) < 0) {\n    userOne = data.userOne;\n    userTwo = data.userTwo;\n    multiplier = -1;\n  } else {\n    userOne = data.userTwo;\n    userTwo = data.userOne;\n  }\n\n  return {\n    type: actionConst.addDebt,\n    payload: {\n      userIDOne: userOne,\n      userIDTwo: userTwo,\n      amount: data.amount * multiplier,\n      notes: data.notes\n    }\n  };\n}\n\nexport function addDebtInstance(data) {\n  return {\n    type: actionConst.addDebtInstance,\n    payload: {\n      key: data.key,\n      debts: data.debts\n    }\n  };\n}\n","import { AddUser } from \"../components/AddUser/index\";\nimport { addUser } from \"../actions/actionDefs\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\n\nclass AddUserContainer extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\"\n    };\n  }\n\n  render() {\n    return (\n      <AddUser\n        email={this.state.email}\n        lastName={this.state.lastName}\n        firstName={this.state.firstName}\n        handleEmail={event => this.setState({ email: event.target.value })}\n        handleLastName={event =>\n          this.setState({ lastName: event.target.value })\n        }\n        handleFirstName={event =>\n          this.setState({ firstName: event.target.value })\n        }\n        emails={this.props.emails}\n        addUser={this.props.addUser}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  emails: state.emails\n});\n\nconst mapDispatchToProps = dispatch => ({\n  addUser: data => dispatch(addUser(data))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AddUserContainer);\n","import React from \"react\";\n\nexport function checkForDebtInstance(debtArray, idOne, idTwo) {\n  return debtArray.includes(idOne + idTwo);\n}\n\nexport function getIdentifier(email, user) {\n  return (\n    <option key={email} value={email}>\n      {user.firstName +\n        \" \" +\n        user.lastName +\n        \" (\" +\n        email +\n        \")\"}\n    </option>\n  );\n}\n","import React from \"react\";\nimport { getIdentifier } from \"../../utils\";\n\nexport const AddDebt = ({\n  emails,\n  users,\n  addDebt,\n  handleOwnerEmail,\n  handleSlaveEmail,\n  handleNotes,\n  handleAmount,\n  amount,\n  notes,\n  emailOne,\n  emailTwo\n}) => (\n  <form>\n    <span>owner</span>\n    <select onChange={e => handleOwnerEmail(e)}>\n      <option>--</option>\n      {emails.map(email => {\n        return getIdentifier(email, users[email]);\n      })}\n    </select>\n    <span>slave</span>\n    <select onChange={e => handleSlaveEmail(e)}>\n      <option>--</option>\n      {emails.map(email => {\n        return getIdentifier(email, users[email]);\n      })}\n    </select>\n    <label>\n      Amount:\n      <input\n        type=\"text\"\n        name=\"amount\"\n        value={amount}\n        onChange={e => handleAmount(e)}\n      />\n    </label>\n    <label>\n      Notes:\n      <input\n        type=\"text\"\n        name=\"notes\"\n        value={notes}\n        onChange={e => handleNotes(e)}\n      />\n    </label>\n    <input\n      type=\"button\"\n      value=\"Submit\"\n      onClick={() => {\n        if (!emailTwo) {\n          alert(\"Second email either null or the same\");\n        } else {\n          addDebt({\n            userOne: emailOne ? emailOne : emails[0],\n            userTwo: emailTwo,\n            amount: amount,\n            notes: notes\n          });\n          alert(\"User Debt added\");\n        }\n      }}\n    />\n  </form>\n);\n","import { AddDebt } from \"../components/AddDebt/index\";\nimport { addDebt } from \"../actions/actionDefs\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\n\nclass AddDebtContainer extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      amount: \"\",\n      notes: \"\",\n      emailOne: \"\",\n      emailTwo: \"\"\n    };\n  }\n\n  render() {\n    return (\n      <AddDebt\n        emails={this.props.emails}\n        users={this.props.users}\n        notes={this.state.notes}\n        amount={this.state.amount}\n        emailOne={this.state.emailOne}\n        emailTwo={this.state.emailTwo}\n        addDebt={this.props.addDebt}\n        handleOwnerEmail={event =>\n          this.setState({ emailOne: event.target.value })\n        }\n        handleSlaveEmail={event =>\n          this.setState({ emailTwo: event.target.value })\n        }\n        handleNotes={event => this.setState({ notes: event.target.value })}\n        handleAmount={event => {\n          if (!isNaN(event.target.value)) {\n            this.setState({ amount: event.target.value });\n          }\n        }}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  emails: state.emails,\n  users: state.users\n});\n\nconst mapDispatchToProps = dispatch => ({\n  addDebt: data => dispatch(addDebt(data))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AddDebtContainer);\n","import React from \"react\";\nimport { getIdentifier } from \"../../utils\";\n\nexport const DisplayDebts = ({\n  handleOwnerEmail,\n  handleSlaveEmail,\n  setTotalDebtMapAmount,\n  setDebtMapData,\n  buildDebtMapTable,\n  emails,\n  users,\n  debtMap,\n  debtList,\n  ownerEmail,\n  slaveEmail,\n  debtMapData,\n  debtMapTotal,\n  allDebtsData,\n  allDebtsTotal,\n  handleSingleSlaveEmail,\n  singleSlaveEmail,\n  buildDebtsTable,\n  setDebtsData,\n  setTotalDebtsAmount,\n  handleSingleOwnerEmail,\n  setCreditsData,\n  singleOwnerEmail,\n  allCreditsTotal,\n  allCreditsData,\n  setTotalCreditsAmount,\n  buildCreditsTable\n}) => (\n  <div>\n    <form>\n      <span>slave</span>\n      <select onChange={e => handleSlaveEmail(e)}>\n        <option>--</option>\n        {emails.map(email => {\n          return getIdentifier(email, users[email]);\n        })}\n      </select>\n      <span>owner</span>\n      <select onChange={e => handleOwnerEmail(e)}>\n        <option>--</option>\n        {emails.map(email => {\n          return getIdentifier(email, users[email]);\n        })}\n      </select>\n      <input\n        type=\"button\"\n        value=\"Submit\"\n        onClick={() => {\n          let data = null;\n          let amount = 0;\n          if (ownerEmail.localeCompare(slaveEmail) < 0) {\n            if (debtList.includes(ownerEmail + slaveEmail)) {\n              data = buildDebtMapTable(debtMap[ownerEmail + slaveEmail], -1);\n              amount =\n                debtMap[ownerEmail + slaveEmail].debts.reduce(\n                  (prev, curr) => prev + curr.amount,\n                  0\n                ) * -1;\n              setTotalDebtMapAmount(amount);\n              setDebtMapData(data);\n            }\n          } else {\n            if (debtList.includes(slaveEmail + ownerEmail)) {\n              data = buildDebtMapTable(debtMap[slaveEmail + ownerEmail], 1);\n              amount = debtMap[slaveEmail + ownerEmail].debts.reduce(\n                (prev, curr) => prev + curr.amount,\n                0\n              );\n              setTotalDebtMapAmount(amount);\n              setDebtMapData(data);\n            }\n          }\n        }}\n      />\n    </form>\n    <table>\n      <thead>\n        <tr>\n          <th>User One</th>\n          <th>User Two</th>\n          <th>Amount</th>\n          <th>Notes</th>\n          <th>Delete Debt</th>\n        </tr>\n      </thead>\n      <tbody>{debtMapData}</tbody>\n    </table>\n    <span>{debtMapTotal}</span>\n    <br />\n    <form>\n      <span>slave</span>\n      <select onChange={e => handleSingleSlaveEmail(e)}>\n        <option>--</option>\n        {emails.map(email => {\n          return getIdentifier(email, users[email]);\n        })}\n      </select>\n      <input\n        type=\"button\"\n        value=\"Submit\"\n        onClick={() => {\n          let data = [];\n          let amount = 0;\n          let currAmount = 0;\n          emails.forEach(email => {\n            if (singleSlaveEmail.localeCompare(email) < 0) {\n              if (debtList.includes(singleSlaveEmail + email)) {\n                currAmount = debtMap[singleSlaveEmail + email].debts.reduce(\n                  (prev, curr) => prev + curr.amount,\n                  0\n                );\n                amount += currAmount;\n                data.push(buildDebtsTable(email, singleSlaveEmail, currAmount));\n              }\n            } else {\n              if (debtList.includes(email + singleSlaveEmail)) {\n                currAmount =\n                  debtMap[email + singleSlaveEmail].debts.reduce(\n                    (prev, curr) => prev + curr.amount,\n                    0\n                  ) * -1;\n                amount += currAmount;\n                data.push(buildDebtsTable(email, singleSlaveEmail, currAmount));\n              }\n            }\n          });\n          if (amount > 0) {\n            setTotalDebtsAmount(amount);\n            setDebtsData(data);\n          } else {\n            setTotalDebtsAmount(0);\n            setDebtsData([]);\n          }\n        }}\n      />\n    </form>\n    <table>\n      <thead>\n        <tr>\n          <th>User One</th>\n          <th>User Two</th>\n          <th>Amount</th>\n          <th>Delete Debt</th>\n        </tr>\n      </thead>\n      <tbody>{allDebtsData}</tbody>\n    </table>\n    <span>{allDebtsTotal}</span>\n    <br />\n    <form>\n      <span>owner</span>\n      <select onChange={e => handleSingleOwnerEmail(e)}>\n        <option>--</option>\n        {emails.map(email => {\n          return getIdentifier(email, users[email]);\n        })}\n      </select>\n      <input\n        type=\"button\"\n        value=\"Submit\"\n        onClick={() => {\n          let data = [];\n          let amount = 0;\n          let currAmount = 0;\n          emails.forEach(email => {\n            if (singleOwnerEmail.localeCompare(email) < 0) {\n              if (debtList.includes(singleOwnerEmail + email)) {\n                currAmount =\n                  debtMap[singleOwnerEmail + email].debts.reduce(\n                    (prev, curr) => prev + curr.amount,\n                    0\n                  ) * -1;\n                amount += currAmount;\n                data.push(\n                  buildCreditsTable(singleOwnerEmail, email, currAmount)\n                );\n              }\n            } else {\n              if (debtList.includes(email + singleOwnerEmail)) {\n                currAmount = debtMap[email + singleOwnerEmail].debts.reduce(\n                  (prev, curr) => prev + curr.amount,\n                  0\n                );\n                amount += currAmount;\n                data.push(\n                  buildCreditsTable(singleOwnerEmail, email, currAmount)\n                );\n              }\n            }\n          });\n          if (amount > 0) {\n            setTotalCreditsAmount(amount);\n            setCreditsData(data);\n          } else {\n            setTotalCreditsAmount(0);\n            setCreditsData([]);\n          }\n        }}\n      />\n    </form>\n    <table>\n      <thead>\n        <tr>\n          <th>User One</th>\n          <th>User Two</th>\n          <th>Amount</th>\n          <th>Delete Debt</th>\n        </tr>\n      </thead>\n      <tbody>{allCreditsData}</tbody>\n    </table>\n    <span>{allCreditsTotal}</span>\n  </div>\n);\n","import { DisplayDebts } from \"../components/DisplayDebts/index\";\nimport { deleteDebtMap, deleteDebt } from \"../actions/actionDefs\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\n\nclass DisplayDebtsContainer extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      debtMapData: null,\n      ownerEmail: \"\",\n      slaveEmail: \"\",\n      singleSlaveEmail: \"\",\n      debtMapTotal: 0,\n      allDebtsData: null,\n      allDebtsTotal: 0,\n      singleOwnerEmail: \"\",\n      allCreditsTotal: 0,\n      allCreditsData: null\n    };\n\n    this.buildDebtMapTable = this.buildDebtMapTable.bind(this);\n    this.buildDebtsTable = this.buildDebtsTable.bind(this);\n    this.buildCreditsTable = this.buildCreditsTable.bind(this);\n  }\n\n  buildDebtsTable(ownerEmail, slaveEmail, amount) {\n    return (\n      <tr key={ownerEmail + slaveEmail + amount}>\n        <td>{slaveEmail}</td>\n        <td>{ownerEmail}</td>\n        <td>{amount}</td>\n        <td>\n          <button\n            onClick={() => {\n              this.props.deleteDebtMap({\n                ownerEmail: ownerEmail,\n                slaveEmail: slaveEmail\n              });\n            }}\n          />\n        </td>\n      </tr>\n    );\n  }\n\n  buildCreditsTable(ownerEmail, slaveEmail, amount) {\n    return (\n      <tr key={ownerEmail + slaveEmail + amount}>\n        <td>{ownerEmail}</td>\n        <td>{slaveEmail}</td>\n        <td>{amount}</td>\n        <td>\n          <button\n            onClick={() => {\n              this.props.deleteDebtMap({\n                ownerEmail: ownerEmail,\n                slaveEmail: slaveEmail\n              });\n            }}\n          />\n        </td>\n      </tr>\n    );\n  }\n\n  buildDebtMapTable(data, multiplier) {\n    if (multiplier === 1) {\n      return data.debts.map((debt, index) => {\n        return (\n          <tr key={index}>\n            <td>{debt.userIDOne}</td>\n            <td>{debt.userIDTwo}</td>\n            <td>{debt.amount}</td>\n            <td>{debt.notes}</td>\n            <td>\n              <button\n                onClick={() => {\n                  if (data.debts.length < 1) {\n                    this.props.deleteDebtMap({\n                      ownerEmail: debt.userIDTwo,\n                      slaveEmail: debt.userIDOne\n                    });\n                  } else {\n                    this.props.deleteDebt({\n                      index: index,\n                      ownerEmail: debt.userIDTwo,\n                      slaveEmail: debt.userIDOne\n                    });\n                  }\n                }}\n              />\n            </td>\n          </tr>\n        );\n      });\n    } else {\n      return data.debts.map((debt, index) => {\n        return (\n          <tr key={index}>\n            <td>{debt.userIDTwo}</td>\n            <td>{debt.userIDOne}</td>\n            <td>{debt.amount * multiplier}</td>\n            <td>{debt.notes}</td>\n            <td>\n              <button\n                onClick={() => {\n                  if (data.debts.length < 1) {\n                    this.props.deleteDebtMap({\n                      ownerEmail: debt.userIDTwo,\n                      slaveEmail: debt.userIDOne\n                    });\n                  } else {\n                    this.props.deleteDebt({\n                      index: index,\n                      ownerEmail: debt.userIDTwo,\n                      slaveEmail: debt.userIDOne\n                    });\n                  }\n                }}\n              />\n            </td>\n          </tr>\n        );\n      });\n    }\n  }\n\n  render() {\n    return (\n      <DisplayDebts\n        handleOwnerEmail={event =>\n          this.setState({ ownerEmail: event.target.value })\n        }\n        handleSlaveEmail={event =>\n          this.setState({ slaveEmail: event.target.value })\n        }\n        handleSingleSlaveEmail={event =>\n          this.setState({ singleSlaveEmail: event.target.value })\n        }\n        handleSingleOwnerEmail={event =>\n          this.setState({ singleOwnerEmail: event.target.value })\n        }\n        setTotalDebtMapAmount={debtMapTotal =>\n          this.setState({ debtMapTotal: debtMapTotal })\n        }\n        setDebtMapData={debtMapData =>\n          this.setState({ debtMapData: debtMapData })\n        }\n        setTotalDebtsAmount={allDebtsTotal =>\n          this.setState({ allDebtsTotal: allDebtsTotal })\n        }\n        setTotalCreditsAmount={allCreditsTotal =>\n          this.setState({ allCreditsTotal: allCreditsTotal })\n        }\n        setDebtsData={allDebtsData =>\n          this.setState({ allDebtsData: allDebtsData })\n        }\n        setCreditsData={allCreditsData =>\n          this.setState({ allCreditsData: allCreditsData })\n        }\n        buildDebtMapTable={this.buildDebtMapTable}\n        buildDebtsTable={this.buildDebtsTable}\n        buildCreditsTable={this.buildCreditsTable}\n        emails={this.props.emails}\n        users={this.props.users}\n        debtMap={this.props.debtMap}\n        debtList={this.props.debtList}\n        ownerEmail={this.state.ownerEmail}\n        slaveEmail={this.state.slaveEmail}\n        debtMapData={this.state.debtMapData}\n        debtMapTotal={this.state.debtMapTotal}\n        allDebtsData={this.state.allDebtsData}\n        allDebtsTotal={this.state.allDebtsTotal}\n        singleSlaveEmail={this.state.singleSlaveEmail}\n        singleOwnerEmail={this.state.singleOwnerEmail}\n        allCreditsTotal={this.state.allCreditsTotal}\n        allCreditsData={this.state.allCreditsData}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  emails: state.emails,\n  users: state.users,\n  debtMap: state.debtMap,\n  debtList: state.debtList\n});\n\nconst mapDispatchToProps = dispatch => ({\n  deleteDebtMap: data => dispatch(deleteDebtMap(data)),\n  deleteDebt: data => dispatch(deleteDebt(data))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(DisplayDebtsContainer);\n","import React from \"react\";\n\nexport const DisplayUsers = ({\n  users,\n  emails,\n  debtList,\n  deleteUser,\n  deleteDebtMap,\n  checkForDebtInstance\n}) => (\n  <table>\n    <thead>\n      <tr>\n        <th>First Name</th>\n        <th>Last Name</th>\n        <th>Email</th>\n      </tr>\n    </thead>\n    <tbody>\n      {emails.map(email => {\n        return (\n          <tr key={users[email].email}>\n            <td>{users[email].firstName}</td>\n            <td>{users[email].lastName}</td>\n            <td>{users[email].email}</td>\n            <td>\n              <button\n                onClick={() => {\n                  let userOne,\n                    userTwo = null;\n                  emails.forEach(emailTwo => {\n                    if (email.localeCompare() < 0) {\n                      userOne = email;\n                      userTwo = emailTwo;\n                    } else {\n                      userOne = emailTwo;\n                      userTwo = email;\n                    }\n                  });\n                  if (checkForDebtInstance(debtList, userOne, userTwo)) {\n                    deleteDebtMap({ ownerEmail: userOne, slaveEmail: userTwo });\n                  }\n                  deleteUser({ email: email });\n                }}\n              />\n            </td>\n          </tr>\n        );\n      })}\n    </tbody>\n  </table>\n);\n","import { DisplayUsers } from \"../components/DisplayUsers/index\";\nimport React from \"react\";\nimport { deleteUser, deleteDebtMap } from \"../actions/actionDefs\";\nimport {checkForDebtInstance} from \"../utils\";\nimport { connect } from \"react-redux\";\n\nclass AddUserContainer extends React.Component {\n  render() {\n    return (\n      <DisplayUsers\n        users={this.props.users}\n        emails={this.props.emails}\n        debtList={this.props.debtList}\n        deleteUser={this.props.deleteUser}\n        deleteDebtMap={this.props.deleteDebtMap}\n        checkForDebtInstance={checkForDebtInstance}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  users: state.users,\n  emails: state.emails,\n  debtList: state.debtList\n});\n\nconst mapDispatchToProps = dispatch => ({\n  deleteUser: data => dispatch(deleteUser(data)),\n  deleteDebtMap: data => dispatch(deleteDebtMap(data))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AddUserContainer);\n","import React from \"react\";\n\nexport const ManageData = ({ clearData, uploadData, data }) => (\n  <div>\n    <a href={data} download={\"data.json\"}>\n      Download Data\n    </a>\n    <span>Upload Data</span>\n    <input\n      type=\"file\"\n      title=\"Upload Data\"\n      onChange={e => {\n        uploadData(e);\n      }}\n    />\n    <button onClick={clearData}>Clear Data</button>\n  </div>\n);\n","import { ManageData } from \"../components/ManageData/index\";\nimport {\n  clearData,\n  addUser,\n  addDebt,\n  addDebtInstance\n} from \"../actions/actionDefs\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\n\nclass ManageDataContainer extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {};\n\n    this.uploadData = this.uploadData.bind(this);\n  }\n\n  uploadData(e) {\n    let file = e.target.files[0];\n\n    if (!file.type.includes(\"json\")) {\n      alert(\"Invalid file type, only accept json files\");\n      return;\n    }\n\n    let reader = new FileReader();\n\n    reader.onload = (() => {\n      return e => {\n        try {\n          let obj = JSON.parse(e.target.result);\n\n          obj.emails.forEach(email => {\n            if (!this.props.emails.includes(email)) {\n              this.props.addUser({\n                firstName: obj.users[email].firstName,\n                lastName: obj.users[email].lastName,\n                email: obj.users[email].email\n              });\n            }\n          });\n\n          obj.debtList.forEach(debt => {\n            if (!this.props.debtList.includes(debt)) {\n              this.props.addDebtInstance({\n                debts: obj.debtMap[debt].debts,\n                key: debt\n              });\n            }\n          });\n        } catch (error) {\n          alert(\"Error parsing json: \" + error);\n        }\n      };\n    })(file);\n    reader.readAsText(file);\n  }\n\n  render() {\n    if (window.File && window.FileReader && window.FileList && window.Blob) {\n      return (\n        <ManageData\n          clearData={this.props.clearData}\n          uploadData={this.uploadData}\n          data={URL.createObjectURL(\n            new Blob(\n              [\n                JSON.stringify({\n                  users: this.props.users,\n                  emails: this.props.emails,\n                  debtList: this.props.debtList,\n                  debtMap: this.props.debtMap\n                })\n              ],\n              {\n                type: \"application/json\"\n              }\n            )\n          )}\n        />\n      );\n    } else {\n      return <span>File API's not available</span>;\n    }\n  }\n}\n\nconst mapStateToProps = state => ({\n  users: state.users,\n  emails: state.emails,\n  debtList: state.debtList,\n  debtMap: state.debtMap\n});\n\nconst mapDispatchToProps = dispatch => ({\n  clearData: () => dispatch(clearData()),\n  addUser: data => dispatch(addUser(data)),\n  addDebt: data => dispatch(addDebt(data)),\n  addDebtInstance: data => dispatch(addDebtInstance(data))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ManageDataContainer);\n","import React from \"react\";\nimport AddUserContainer from \"./containers/addUserContainer\";\nimport AddDebtContainer from \"./containers/addDebtContainer\";\nimport DisplayDebtsContainer from \"./containers/displayDebtsContainer\";\nimport DisplayUsersContainer from \"./containers/displayUsersContainer\";\nimport ManageDataContainer from \"./containers/manageDataContainer\";\nimport { HashRouter, Route, Link } from \"react-router-dom\";\n\nexport default class App extends React.Component {\n  render() {\n    return (\n      <div>\n        <header>\n          <p>How Much Do I Owe You?</p>\n        </header>\n        <HashRouter basename=\"/\">\n          <div>\n            <ul>\n              <li>\n                <Link to=\"/\">Home</Link>\n              </li>\n              <li>\n                <Link to=\"/addUser\">Add User</Link>\n              </li>\n              <li>\n                <Link to=\"/addDebt\">Add Debt</Link>\n              </li>\n              <li>\n                <Link to=\"/displayDebts\">Display Debts</Link>\n              </li>\n              <li>\n                <Link to=\"/displayUsers\">Display Users</Link>\n              </li>\n              <li>\n                <Link to=\"/manageData\">Manage Data</Link>\n              </li>\n            </ul>\n            <Route path=\"/addUser\" component={AddUserContainer} />\n            <Route path=\"/addDebt\" component={AddDebtContainer} />\n            <Route path=\"/displayDebts\" component={DisplayDebtsContainer} />\n            <Route path=\"/displayUsers\" component={DisplayUsersContainer} />\n            <Route path=\"/manageData\" component={ManageDataContainer} />\n          </div>\n        </HashRouter>\n      </div>\n    );\n  }\n}\n","import * as actionConst from \"../actions/action-constants\";\n\nimport { checkForDebtInstance } from \"../utils\";\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case actionConst.addDebtInstance: {\n      return {\n        ...state,\n        debtList: [...state.debtList, action.payload.key],\n        debtMap: {\n          ...state.debtMap,\n          [action.payload.key]: {\n            debts: action.payload.debts\n          }\n        }\n      };\n    }\n    case actionConst.deleteDebt: {\n      let id = action.payload.userIDOne + action.payload.userIDTwo;\n      return {\n        ...state,\n        debtMap: {\n          ...state.debtMap,\n          [id]: {\n            debts: [\n              ...state.debtMap[id].debts.slice(0, action.payload.index),\n              ...state.debtMap[id].debts.slice(action.payload.index + 1)\n            ]\n          }\n        }\n      };\n    }\n    case actionConst.deleteUser: {\n      let newUserMap = {};\n      state.emails.forEach(email => {\n        if (email !== action.payload.email) {\n          newUserMap[email] = state.users[email];\n        }\n      });\n      return {\n        ...state,\n        emails: state.emails.filter(email => email !== action.payload.email),\n        users: newUserMap\n      };\n    }\n    case actionConst.deleteDebtMap: {\n      let id = action.payload.userIDOne + action.payload.userIDTwo;\n      let newDebtMap = {};\n      state.debtList.forEach(debt => {\n        if (debt !== id) {\n          newDebtMap[debt] = state.debtMap[debt];\n        }\n      });\n      return {\n        ...state,\n        debtList: state.debtList.filter(debt => debt !== id),\n        debtMap: newDebtMap\n      };\n    }\n    case actionConst.clearData: {\n      return {\n        emails: [],\n        users: {},\n        debtMap: {},\n        debtList: []\n      };\n    }\n    case actionConst.addUser: {\n      return {\n        ...state,\n        emails: [...state.emails, action.email],\n        users: {\n          ...state.users,\n          [action.email]: action.payload\n        }\n      };\n    }\n    case actionConst.addDebt: {\n      let id = action.payload.userIDOne + action.payload.userIDTwo;\n\n      if (\n        checkForDebtInstance(\n          state.debtList,\n          action.payload.userIDOne,\n          action.payload.userIDTwo\n        )\n      ) {\n        return {\n          ...state,\n          debtMap: {\n            ...state.debtMap,\n            [id]: {\n              debts: [...state.debtMap[id].debts, action.payload]\n            }\n          }\n        };\n      } else {\n        return {\n          ...state,\n          debtList: [...state.debtList, id],\n          debtMap: {\n            ...state.debtMap,\n            [id]: {\n              debts: [action.payload]\n            }\n          }\n        };\n      }\n    }\n    default: {\n      return state;\n    }\n  }\n}\n\nexport default reducer;\n","import { createStore, applyMiddleware } from \"redux\";\nimport reducer from \"./reducers/reducer\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport reduxCookiesMiddleware from \"redux-cookies-middleware\";\nimport { getStateFromCookies } from \"redux-cookies-middleware\";\n\nconst defaultState = {\n  emails: [],\n  users: {},\n  debtMap: {},\n  debtList: []\n};\n\n\nconst cookiePaths = {\n    \"emails\": { name: \"HMDIOY_EMAILS\" },\n    \"users\": { name: \"HMDIOY_USERS\" },\n    \"debtMap\": { name: \"HMDIOY_DEBTMAP\" },\n    \"debtList\": { name: \"HMDIOY_DEBTLIST\" },\n}\n\nlet initialState = getStateFromCookies(defaultState, cookiePaths);\n\nif(!initialState.emails) {\n    initialState.emails = [];\n}\n\nif(!initialState.users) {\n    initialState.users = {};\n}\n\nif(!initialState.debtMap) {\n    initialState.debtMap = {};\n}\n\nif(!initialState.debtList) {\n    initialState.debtList = [];\n}\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(reduxCookiesMiddleware(cookiePaths)))\n);\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}