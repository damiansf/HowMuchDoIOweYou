{"version":3,"sources":["components/ManageData/index.js","actions/action-constants.js","utils.js","actions/actionDefs.js","containers/manageDataContainer.js","components/AddUser/index.js","containers/addUserContainer.js","components/DisplayUsers/index.js","containers/displayUsersContainer.js","containers/manageUsersContainer.js","components/AddDebt/index.js","containers/addDebtContainer.js","components/DisplayDebts/index.js","containers/displayDebtsContainer.js","containers/manageDebtsContainer.js","components/HomePage/index.js","containers/homePageContainer.js","App.js","reducers/reducer.js","store.js","index.js"],"names":["ManageData","_ref","clearData","uploadData","data","react_default","a","createElement","className","href","download","index_es","icon","faDownload","type","title","id","onChange","e","htmlFor","faUpload","onClick","window","confirm","alert","addUser","addDebt","deleteDebt","deleteUser","deleteDebtMap","addDebtInstance","checkForDebtInstance","debtArray","idOne","idTwo","includes","orderEmails","firstEmail","secondEmail","userOne","userTwo","localeCompare","getIdentifier","email","user","key","value","firstName","lastName","getIdentifierString","actionConst","payload","_orderEmails2","ownerEmail","slaveEmail","userIDOne","userIDTwo","multiplier","amount","notes","timeStamp","Date","now","ManageDataContainer","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","bind","assertThisInitialized","_this2","file","target","files","reader","FileReader","onload","obj","JSON","parse","result","emails","forEach","props","users","debtList","debt","debtMap","debts","debtItem","existing","existingDebtItem","error","readAsText","File","FileList","Blob","ManageData_ManageData","URL","createObjectURL","stringify","React","Component","connect","dispatch","AddUser","handleFirstName","handleLastName","handleEmail","name","autoComplete","AddUserContainer","AddUser_AddUser","event","setState","DisplayUsers","editUser","modalIsOpen","editEmail","saveEdit","cancelEdit","oldEmail","tableHead","noUsers","lib_default","isOpen","onRequestClose","contentLabel","disabled","map","emailTwo","_orderEmails","setTimeout","Modal","setAppElement","DisplayUsers_DisplayUsers","length","ManageUsersContainer","addUserContainer","displayUsersContainer","AddDebt","handleOwnerEmail","handleSlaveEmail","handleNotes","handleAmount","AddDebtContainer","AddDebt_AddDebt","isNaN","DisplayDebts","setTotalDebtMapAmount","setDebtMapData","buildDebtMapTable","debtMapData","debtMapTotal","allDebtsData","allDebtsTotal","handleSingleSlaveEmail","singleSlaveEmail","buildDebtsTable","setDebtsData","setTotalDebtsAmount","handleSingleOwnerEmail","setCreditsData","singleOwnerEmail","allCreditsTotal","allCreditsData","setTotalCreditsAmount","buildCreditsTable","setNumDebts","setNumCredits","noTransactions","debtMapTableHead","setNoTransactionExisting","noTransactionsExisting","noDebtsExisiting","noDebts","noCreditsExisting","noCredits","debtTableHead","creditTableHead","setNoDebtsExisiting","setNoCreditsExisting","reduce","prev","curr","currAmount","countDebts","push","countCredits","DisplayDebtsContainer","numDebts","numCredits","_this3","identifierOrder","_this4","index","Math","abs","newTotal","newData","splice","_this5","DisplayDebts_DisplayDebts","ManageDebtsContainer","addDebtContainer","displayDebtsContainer","HomePage","HomePageContainer","HomePage_HomePage","App","react_router_dom","basename","activeClassName","exact","to","react_router","path","component","reducer","action","objectSpread","concat","toConsumableArray","defineProperty","slice","newUserMap","filter","newDebtMap","cookiePaths","initialState","getStateFromCookies","store","createStore","composeWithDevTools","applyMiddleware","reduxCookiesMiddleware","ReactDOM","render","es","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.a5908fdd.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./index.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faDownload } from \"@fortawesome/free-solid-svg-icons\";\nimport { faUpload } from \"@fortawesome/free-solid-svg-icons\";\n\nexport const ManageData = ({ clearData, uploadData, data }) => (\n  <div>\n    <div className=\"containers\">\n      <h2 className=\"titles\" >Data, Data Everywhere!</h2>\n      <div>\n        <label className=\"download\">\n          <a href={data} download={\"data.json\"} className=\"download-link\">\n            <FontAwesomeIcon icon={faDownload} /> Download All Data\n          </a>\n        </label>\n        <input\n          type=\"file\"\n          title=\"Upload Data\"\n          className=\"upload-button\"\n          id=\"upload\"\n          onChange={e => {\n            uploadData(e);\n          }}\n        />\n        <label htmlFor=\"upload\" className=\"upload-file\">\n          <FontAwesomeIcon icon={faUpload} /> Upload Data\n        </label>\n        <span\n          onClick={() => {\n            let response = window.confirm(\n              \"Are you sure you want to wipe all data?\"\n            );\n            if (response) {\n              clearData();\n              alert(\"Data Cleared\");\n            }\n          }}\n          className=\"clear\"\n        >\n          Clear Data\n        </span>\n      </div>\n    </div>\n  </div>\n);\n","export const addUser = \"ADD_USER\";\nexport const addDebt = \"ADD_DEBT\";\nexport const clearData = \"CLEAR_DATA\";\nexport const deleteDebt = \"DELETE_DEBT\";\nexport const deleteUser = \"DELETE_USER\";\nexport const deleteDebtMap = \"DELETE_DEBT_MAP\";\nexport const addDebtInstance = \"ADD_DEBT_INSTANCE\";","import React from \"react\";\n\nexport function checkForDebtInstance(debtArray, idOne, idTwo) {\n  return debtArray.includes(idOne + idTwo);\n}\n\nexport function orderEmails(firstEmail, secondEmail) {\n  let userOne = null;\n  let userTwo = null;\n\n  if (firstEmail.localeCompare(secondEmail) < 0) {\n    userOne = firstEmail;\n    userTwo = secondEmail;\n  } else {\n    userOne = secondEmail;\n    userTwo = firstEmail;\n  }\n\n  return {\n    userOne,\n    userTwo\n  };\n}\n\nexport function getIdentifier(email, user) {\n  return (\n    <option key={email} value={email}>\n      {user.firstName + \" \" + user.lastName + \" (\" + email + \")\"}\n    </option>\n  );\n}\n\nexport function getIdentifierString(email, user) {\n  return user.firstName + \" \" + user.lastName + \" (\" + email + \")\";\n}\n","import * as actionConst from \"./action-constants\";\nimport { orderEmails } from \"../utils\";\n\nexport function addUser(data) {\n  return {\n    type: actionConst.addUser,\n    payload: {\n      firstName: data.firstName,\n      lastName: data.lastName,\n      email: data.email\n    },\n    email: data.email\n  };\n}\n\nexport function clearData() {\n  return {\n    type: actionConst.clearData\n  };\n}\n\nexport function deleteDebt(data) {\n  let { userOne, userTwo } = orderEmails(data.ownerEmail, data.slaveEmail);\n\n  return {\n    type: actionConst.deleteDebt,\n    payload: { userIDOne: userOne, userIDTwo: userTwo, index: data.index }\n  };\n}\n\nexport function deleteUser(data) {\n  return {\n    type: actionConst.deleteUser,\n    payload: {\n      email: data.email\n    }\n  };\n}\n\nexport function deleteDebtMap(data) {\n  let { userOne, userTwo } = orderEmails(data.ownerEmail, data.slaveEmail);\n\n  return {\n    type: actionConst.deleteDebtMap,\n    payload: { userIDOne: userOne, userIDTwo: userTwo }\n  };\n}\n\nexport function addDebt(data) {\n  let userOne = \"\";\n  let userTwo = \"\";\n  let multiplier = 1;\n\n  if (data.userOne.localeCompare(data.userTwo) < 0) {\n    userOne = data.userOne;\n    userTwo = data.userTwo;\n    multiplier = -1;\n  } else {\n    userOne = data.userTwo;\n    userTwo = data.userOne;\n  }\n\n  return {\n    type: actionConst.addDebt,\n    payload: {\n      userIDOne: userOne,\n      userIDTwo: userTwo,\n      amount: data.amount * multiplier,\n      notes: data.notes,\n      timeStamp: Date.now()\n    }\n  };\n}\n\nexport function addDebtInstance(data) {\n  return {\n    type: actionConst.addDebtInstance,\n    payload: {\n      key: data.key,\n      debts: data.debts\n    }\n  };\n}\n","import { ManageData } from \"../components/ManageData/index\";\nimport {\n  clearData,\n  addUser,\n  addDebt,\n  addDebtInstance\n} from \"../actions/actionDefs\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\n\nclass ManageDataContainer extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {};\n\n    this.uploadData = this.uploadData.bind(this);\n  }\n\n  uploadData(e) {\n    let file = e.target.files[0];\n\n    if (!file.type.includes(\"json\")) {\n      alert(\"Invalid file type, only accept json files\");\n      return;\n    }\n\n    let reader = new FileReader();\n\n    reader.onload = (() => {\n      return e => {\n        try {\n          let obj = JSON.parse(e.target.result);\n\n          obj.emails.forEach(email => {\n            if (!this.props.emails.includes(email)) {\n              this.props.addUser({\n                firstName: obj.users[email].firstName,\n                lastName: obj.users[email].lastName,\n                email: obj.users[email].email\n              });\n            }\n          });\n\n          obj.debtList.forEach(debt => {\n            if (!this.props.debtList.includes(debt)) {\n              this.props.addDebtInstance({\n                debts: obj.debtMap[debt].debts,\n                key: debt\n              });\n            } else {\n              obj.debtMap[debt].debts.forEach(debtItem => {\n                let existing = false;\n                this.props.debtMap[debt].debts.forEach(existingDebtItem => {\n                  if (existingDebtItem.timeStamp === debtItem.timeStamp) {\n                    existing = true;\n                  }\n                });\n                if (!existing) {\n                  this.props.addDebt({\n                    userOne: debtItem.userIDOne,\n                    userTwo: debtItem.userIDTwo,\n                    amount: debtItem.amount * -1,\n                    notes: debtItem.notes\n                  });\n                }\n              });\n            }\n          });\n          alert(\"Data Uploaded\");\n        } catch (error) {\n          alert(\"Error parsing json: \" + error);\n        }\n      };\n    })(file);\n    reader.readAsText(file);\n  }\n\n  render() {\n    if (window.File && window.FileReader && window.FileList && window.Blob) {\n      return (\n        <ManageData\n          clearData={this.props.clearData}\n          uploadData={this.uploadData}\n          data={URL.createObjectURL(\n            new Blob(\n              [\n                JSON.stringify({\n                  users: this.props.users,\n                  emails: this.props.emails,\n                  debtList: this.props.debtList,\n                  debtMap: this.props.debtMap\n                })\n              ],\n              {\n                type: \"application/json\"\n              }\n            )\n          )}\n        />\n      );\n    } else {\n      alert(\"File API's are not available\");\n      return(<div></div>);\n    }\n  }\n}\n\nconst mapStateToProps = state => ({\n  users: state.users,\n  emails: state.emails,\n  debtList: state.debtList,\n  debtMap: state.debtMap\n});\n\nconst mapDispatchToProps = dispatch => ({\n  clearData: () => dispatch(clearData()),\n  addUser: data => dispatch(addUser(data)),\n  addDebt: data => dispatch(addDebt(data)),\n  addDebtInstance: data => dispatch(addDebtInstance(data))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ManageDataContainer);\n","import React from \"react\";\n\nexport const AddUser = ({\n  handleFirstName,\n  handleLastName,\n  handleEmail,\n  addUser,\n  emails,\n  firstName,\n  lastName,\n  email\n}) => (\n  <div className=\"containers\">\n    <h2 className=\"titles\">Create User</h2>\n    <form>\n      <div>\n        <div>\n          <h3>FirstName</h3>\n        </div>\n        <input\n          type=\"text\"\n          name=\"firstName\"\n          value={firstName}\n          autoComplete=\"new-password\"\n          className=\"input-boxes\"\n          onChange={e => handleFirstName(e)}\n        />\n        <div>\n          <h3>LastName</h3>\n        </div>\n        <input\n          type=\"text\"\n          name=\"lastName\"\n          value={lastName}\n          autoComplete=\"new-password\"\n          className=\"input-boxes\"\n          onChange={e => handleLastName(e)}\n        />\n      </div>\n      <div>\n        <div>\n          <h3>Email</h3>\n        </div>\n        <input\n          type=\"text\"\n          name=\"email\"\n          value={email}\n          autoComplete=\"new-password\"\n          className=\"input-boxes\"\n          onChange={e => handleEmail(e)}\n        />\n      </div>\n      <input\n        type=\"button\"\n        value=\"Submit\"\n        className=\"submit-button\"\n        onClick={() => {\n          if (!emails.includes(email)) {\n            if (firstName !== \"\" || lastName !== \"\" || email !== \"\") {\n              addUser({\n                firstName: firstName,\n                lastName: lastName,\n                email: email\n              });\n            } else {\n              alert(\"Please fill in all fields\");\n            }\n          } else {\n            alert(\"User with same email already exists\");\n          }\n        }}\n      />\n    </form>\n  </div>\n);\n","import { AddUser } from \"../components/AddUser/index\";\nimport { addUser } from \"../actions/actionDefs\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\n\nclass AddUserContainer extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\"\n    };\n  }\n\n  render() {\n    return (\n      <AddUser\n        email={this.state.email}\n        lastName={this.state.lastName}\n        firstName={this.state.firstName}\n        handleEmail={event => this.setState({ email: event.target.value })}\n        handleLastName={event =>\n          this.setState({ lastName: event.target.value })\n        }\n        handleFirstName={event =>\n          this.setState({ firstName: event.target.value })\n        }\n        emails={this.props.emails}\n        addUser={this.props.addUser}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  emails: state.emails\n});\n\nconst mapDispatchToProps = dispatch => ({\n  addUser: data => dispatch(addUser(data))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AddUserContainer);\n","import React from \"react\";\nimport Modal from \"react-modal\";\nimport \"./index.css\";\n\nexport const DisplayUsers = ({\n  users,\n  emails,\n  debtList,\n  deleteUser,\n  deleteDebtMap,\n  checkForDebtInstance,\n  editUser,\n  orderEmails,\n  modalIsOpen,\n  editEmail,\n  firstName,\n  lastName,\n  email,\n  saveEdit,\n  cancelEdit,\n  handleLastName,\n  handleFirstName,\n  handleEmail,\n  addUser,\n  oldEmail,\n  tableHead,\n  noUsers\n}) => (\n  <div>\n    <div>\n      <Modal\n        isOpen={modalIsOpen}\n        onRequestClose={cancelEdit}\n        contentLabel=\"Edit User\"\n        className=\"modal-style\"\n      >\n        <form>\n          <div>\n            <div>\n              <h3>FirstName</h3>\n            </div>\n            <input\n              type=\"text\"\n              name=\"firstName\"\n              value={firstName}\n              autoComplete=\"new-password\"\n              className=\"input-boxes\"\n              onChange={e => handleFirstName(e)}\n            />\n            <div>\n              <h3>LastName</h3>\n            </div>\n            <input\n              type=\"text\"\n              name=\"lastName\"\n              value={lastName}\n              autoComplete=\"new-password\"\n              className=\"input-boxes\"\n              onChange={e => handleLastName(e)}\n            />\n          </div>\n          <div>\n            <div>\n              <h3>Email</h3>\n            </div>\n            <input\n              type=\"text\"\n              name=\"email\"\n              value={email}\n              onChange={e => handleEmail(e)}\n              className=\"input-boxes\"\n              disabled={editEmail ? \"\" : \"disabled\"}\n            />\n          </div>\n          <input\n            type=\"button\"\n            value=\"Save\"\n            className=\"submit-button\"\n            onClick={() => {\n              if (editEmail) {\n                if (!emails.includes(email)) {\n                  deleteUser({ email: oldEmail });\n                  addUser({\n                    firstName: firstName,\n                    lastName: lastName,\n                    email: email\n                  });\n                  saveEdit();\n                } else {\n                  alert(\"User with same email already exists\");\n                }\n              } else {\n                deleteUser({ email: email });\n                addUser({\n                  firstName: firstName,\n                  lastName: lastName,\n                  email: email\n                });\n                saveEdit();\n              }\n            }}\n          />\n          <input\n            type=\"button\"\n            value=\"Cancel\"\n            className=\"submit-button\"\n            onClick={() => {\n              cancelEdit();\n            }}\n          />\n        </form>\n      </Modal>\n    </div>\n    <div className=\"containers\">\n      <h2 className=\"titles\">Current Users</h2>\n      {noUsers}\n      <table className=\"users-table\">\n        {tableHead}\n        <tbody>\n          {emails.map(email => {\n            return (\n              <tr key={users[email].email}>\n                <td>{users[email].firstName}</td>\n                <td>{users[email].lastName}</td>\n                <td>{users[email].email}</td>\n                <td>\n                  <span\n                    className=\"table-button\"\n                    onClick={() => {\n                      let response = window.confirm(\n                        \"Are you sure you want to delete this user?\"\n                      );\n                      if (response) {\n                        emails.forEach(emailTwo => {\n                          let { userOne, userTwo } = orderEmails(\n                            email,\n                            emailTwo\n                          );\n                          if (\n                            checkForDebtInstance(debtList, userOne, userTwo)\n                          ) {\n                            deleteDebtMap({\n                              ownerEmail: userOne,\n                              slaveEmail: userTwo\n                            });\n                          }\n                        });\n\n                        deleteUser({ email: email });\n                      }\n                    }}\n                  >\n                    Delete\n                  </span>\n                  <span\n                    className=\"table-button\"\n                    onClick={() => {\n                      let editEmail = false;\n                      emails.forEach(emailTwo => {\n                        let { userOne, userTwo } = orderEmails(email, emailTwo);\n                        if (!checkForDebtInstance(debtList, userOne, userTwo)) {\n                          editEmail = true;\n                        } else {\n                          editEmail = false;\n                        }\n                      });\n                      editUser(email, editEmail);\n                      if (!editEmail) {\n                        setTimeout(() => {\n                          alert(\n                            \"Note, only the first and last name can be changed for this user as they are involved in existing debts\"\n                          );\n                        }, 100);\n                      }\n                    }}\n                  >\n                    Edit\n                  </span>\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </div>\n  </div>\n);\n","import { DisplayUsers } from \"../components/DisplayUsers/index\";\nimport React from \"react\";\nimport { deleteUser, deleteDebtMap, addUser } from \"../actions/actionDefs\";\nimport { checkForDebtInstance, orderEmails } from \"../utils\";\nimport { connect } from \"react-redux\";\nimport Modal from \"react-modal\";\n\nModal.setAppElement(\"#root\");\n\nconst noUsers = <h3>No Users</h3>;\nconst tableHead = (\n  <thead>\n    <tr>\n      <th>First Name</th>\n      <th>Last Name</th>\n      <th>Email</th>\n      <th>Manage</th>\n    </tr>\n  </thead>\n);\n\nclass AddUserContainer extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      modalIsOpen: false,\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      oldEmail: \"\",\n      editEmail: false\n    };\n\n    this.editUser = this.editUser.bind(this);\n    this.cancelEdit = this.cancelEdit.bind(this);\n    this.saveEdit = this.saveEdit.bind(this);\n  }\n\n  editUser(email, editEmail) {\n    this.setState({\n      modalIsOpen: true,\n      firstName: this.props.users[email].firstName,\n      lastName: this.props.users[email].lastName,\n      email: email,\n      oldEmail: email,\n      editEmail: editEmail\n    });\n  }\n\n  cancelEdit() {\n    this.setState({\n      modalIsOpen: false,\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      editEmail: false,\n      oldEmail: \"\"\n    });\n  }\n\n  saveEdit() {\n    this.setState({\n      modalIsOpen: false,\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      editEmail: false,\n      oldEmail: \"\"\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <DisplayUsers\n          users={this.props.users}\n          emails={this.props.emails}\n          debtList={this.props.debtList}\n          deleteUser={this.props.deleteUser}\n          deleteDebtMap={this.props.deleteDebtMap}\n          checkForDebtInstance={checkForDebtInstance}\n          editUser={this.editUser}\n          orderEmails={orderEmails}\n          modalIsOpen={this.state.modalIsOpen}\n          cancelEdit={this.cancelEdit}\n          editEmail={this.state.editEmail}\n          firstName={this.state.firstName}\n          lastName={this.state.lastName}\n          saveEdit={this.saveEdit}\n          email={this.state.email}\n          handleLastName={event =>\n            this.setState({ lastName: event.target.value })\n          }\n          handleFirstName={event =>\n            this.setState({ firstName: event.target.value })\n          }\n          handleEmail={event => this.setState({ email: event.target.value })}\n          addUser={this.props.addUser}\n          oldEmail={this.state.oldEmail}\n          tableHead={this.props.emails.length > 0 ? tableHead : null}\n          noUsers={this.props.emails.length > 0 ? null : noUsers}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  users: state.users,\n  emails: state.emails,\n  debtList: state.debtList\n});\n\nconst mapDispatchToProps = dispatch => ({\n  deleteUser: data => dispatch(deleteUser(data)),\n  deleteDebtMap: data => dispatch(deleteDebtMap(data)),\n  addUser: data => dispatch(addUser(data))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AddUserContainer);\n","import React from \"react\";\nimport AddUserContainer from \"./addUserContainer\";\nimport DisplayUsersContainer from \"./displayUsersContainer\";\n\nexport default class ManageUsersContainer extends React.Component {\n    render() {\n        return (\n          <div>\n            <AddUserContainer />\n            <DisplayUsersContainer />\n          </div>\n        );\n      }\n}","import React from \"react\";\nimport { getIdentifier } from \"../../utils\";\nimport \"./index.css\";\n\nconst defaultDebitor = \"Select the Debitor\";\nconst defaultCreditor = \"Select the Creditor\";\n\nexport const AddDebt = ({\n  emails,\n  users,\n  addDebt,\n  handleOwnerEmail,\n  handleSlaveEmail,\n  handleNotes,\n  handleAmount,\n  amount,\n  notes,\n  ownerEmail,\n  slaveEmail\n}) => (\n  <div className=\"containers\">\n    <h2 className=\"titles\">Add Debt</h2>\n    <form>\n      <div>\n        <select\n          className=\"select-box\"\n          onChange={e => {\n            handleOwnerEmail(e);\n          }}\n        >\n          <option>{defaultCreditor}</option>\n          {emails.map(email => {\n            return getIdentifier(email, users[email]);\n          })}\n        </select>\n      </div>\n      <div>\n        <select\n          className=\"select-box select-debitor\"\n          onChange={e => {\n            handleSlaveEmail(e);\n          }}\n        >\n          <option>{defaultDebitor}</option>\n          {emails.map(email => {\n            return getIdentifier(email, users[email]);\n          })}\n        </select>\n      </div>\n\n      <h3>Amount ($)</h3>\n      <input\n        type=\"text\"\n        name=\"amount\"\n        value={amount}\n        className=\"input-boxes\"\n        onChange={e => handleAmount(e)}\n      />\n\n      <h3>Notes</h3>\n      <input\n        type=\"text\"\n        name=\"notes\"\n        value={notes}\n        className=\"input-boxes\"\n        onChange={e => handleNotes(e)}\n      />\n      <div>\n        <input\n          type=\"button\"\n          value=\"Submit\"\n          className=\"submit-button\"\n          onClick={() => {\n            if (\n              ownerEmail !== defaultCreditor &&\n              slaveEmail !== defaultDebitor\n            ) {\n              if (slaveEmail === ownerEmail) {\n                alert(\"Debitor email cannot be the same as the Creditor email\");\n              } else {\n                addDebt({\n                  userOne: ownerEmail,\n                  userTwo: slaveEmail,\n                  amount: amount,\n                  notes: notes\n                });\n                alert(\"Debt record added\");\n              }\n            } else {\n              alert(\"Please select a debitor email and a creditor email\");\n            }\n          }}\n        />\n      </div>\n    </form>\n  </div>\n);\n","import { AddDebt } from \"../components/AddDebt/index\";\nimport { addDebt } from \"../actions/actionDefs\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\n\nclass AddDebtContainer extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      amount: \"\",\n      notes: \"\",\n      ownerEmail: \"Select the Creditor\",\n      slaveEmail: \"Select the Debitor\"\n    };\n  }\n\n  render() {\n    return (\n      <AddDebt\n        emails={this.props.emails}\n        users={this.props.users}\n        notes={this.state.notes}\n        amount={this.state.amount}\n        ownerEmail={this.state.ownerEmail}\n        slaveEmail={this.state.slaveEmail}\n        addDebt={this.props.addDebt}\n        handleOwnerEmail={event =>\n          this.setState({ ownerEmail: event.target.value })\n        }\n        handleSlaveEmail={event =>\n          this.setState({ slaveEmail: event.target.value })\n        }\n        handleNotes={event => this.setState({ notes: event.target.value })}\n        handleAmount={event => {\n          if (!isNaN(event.target.value)) {\n            this.setState({ amount: event.target.value });\n          }\n        }}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  emails: state.emails,\n  users: state.users\n});\n\nconst mapDispatchToProps = dispatch => ({\n  addDebt: data => dispatch(addDebt(data))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AddDebtContainer);\n","import React from \"react\";\nimport { getIdentifier, getIdentifierString } from \"../../utils\";\nimport \"./index.css\";\n\nconst defaultDebitor = \"Select First User\";\nconst defaultCreditor = \"Select Second User\";\nconst defaultSingleDebitor = \"Select a Debitor\";\nconst defaultSingleCreditor = \"Select a Creditor\";\n\nexport const DisplayDebts = ({\n  handleOwnerEmail,\n  handleSlaveEmail,\n  setTotalDebtMapAmount,\n  setDebtMapData,\n  buildDebtMapTable,\n  emails,\n  users,\n  debtMap,\n  debtList,\n  ownerEmail,\n  slaveEmail,\n  debtMapData,\n  debtMapTotal,\n  allDebtsData,\n  allDebtsTotal,\n  handleSingleSlaveEmail,\n  singleSlaveEmail,\n  buildDebtsTable,\n  setDebtsData,\n  setTotalDebtsAmount,\n  handleSingleOwnerEmail,\n  setCreditsData,\n  singleOwnerEmail,\n  allCreditsTotal,\n  allCreditsData,\n  setTotalCreditsAmount,\n  buildCreditsTable,\n  setNumDebts,\n  setNumCredits,\n  noTransactions,\n  debtMapTableHead,\n  setNoTransactionExisting,\n  noTransactionsExisting,\n  noDebtsExisiting,\n  noDebts,\n  noCreditsExisting,\n  noCredits,\n  debtTableHead,\n  creditTableHead,\n  setNoDebtsExisiting,\n  setNoCreditsExisting\n}) => (\n  <div className=\"containers\">\n    <h2 className=\"titles\">View Debts/Credits Between 2 Users</h2>\n    <form>\n      <select\n        onChange={e => {\n          handleSlaveEmail(e);\n        }}\n        className=\"select-box-data\"\n      >\n        <option>{defaultDebitor}</option>\n        {emails.map(email => {\n          return getIdentifier(email, users[email]);\n        })}\n      </select>\n      <select\n        onChange={e => {\n          handleOwnerEmail(e);\n        }}\n        className=\"select-box-data\"\n      >\n        <option>{defaultCreditor}</option>\n        {emails.map(email => {\n          return getIdentifier(email, users[email]);\n        })}\n      </select>\n      <input\n        type=\"button\"\n        value=\"Submit\"\n        className=\"submit-button horizontal-submit\"\n        onClick={() => {\n          let data = null;\n          let amount = 0;\n          if (defaultCreditor !== ownerEmail && defaultDebitor !== slaveEmail) {\n            if (ownerEmail === slaveEmail) {\n              alert(\"Debitor email cannot be the same as the Creditor email\");\n            } else {\n              if (ownerEmail.localeCompare(slaveEmail) < 0) {\n                if (debtList.includes(ownerEmail + slaveEmail)) {\n                  data = buildDebtMapTable(\n                    debtMap[ownerEmail + slaveEmail],\n                    -1\n                  );\n                  amount =\n                    debtMap[ownerEmail + slaveEmail].debts.reduce(\n                      (prev, curr) => prev + curr.amount,\n                      0\n                    ) * -1;\n                } else {\n                  setNoTransactionExisting(true);\n                }\n              } else {\n                if (debtList.includes(slaveEmail + ownerEmail)) {\n                  data = buildDebtMapTable(debtMap[slaveEmail + ownerEmail], 1);\n                  amount = debtMap[slaveEmail + ownerEmail].debts.reduce(\n                    (prev, curr) => prev + curr.amount,\n                    0\n                  );\n                } else {\n                  setNoTransactionExisting(true);\n                }\n              }\n              setTotalDebtMapAmount(amount);\n              setDebtMapData(data);\n            }\n          } else {\n            alert(\"Please select a debitor email and a creditor email\");\n          }\n        }}\n      />\n    </form>\n    {noTransactions}\n    <table className=\"tables\">\n      {debtMapTableHead}\n      <tbody>{debtMapData}</tbody>\n    </table>\n    <h3>\n      {noTransactionsExisting\n        ? null\n        : debtMapData === null\n        ? null\n        : debtMapTotal >= 0\n        ? getIdentifierString(slaveEmail, users[slaveEmail]) +\n          \" owes \" +\n          getIdentifierString(ownerEmail, users[ownerEmail]) +\n          \" \" +\n          debtMapTotal +\n          \"$\"\n        : getIdentifierString(ownerEmail, users[ownerEmail]) +\n          \" owes \" +\n          getIdentifierString(slaveEmail, users[slaveEmail]) +\n          \" \" +\n          debtMapTotal * -1 +\n          \"$\"}\n    </h3>\n    <h2 className=\"titles\">View Users Debts</h2>\n    <form>\n      <select\n        className=\"select-box-data\"\n        onChange={e => handleSingleSlaveEmail(e)}\n      >\n        <option>{defaultSingleDebitor}</option>\n        {emails.map(email => {\n          return getIdentifier(email, users[email]);\n        })}\n      </select>\n      <input\n        type=\"button\"\n        value=\"Submit\"\n        className=\"submit-button horizontal-submit\"\n        onClick={() => {\n          let data = [];\n          let amount = 0;\n          let currAmount = 0;\n          let countDebts = 0;\n\n          if (defaultSingleDebitor === singleSlaveEmail) {\n            alert(\"Please Select a Debitor\");\n          } else {\n            emails.forEach(email => {\n              if (singleSlaveEmail.localeCompare(email) < 0) {\n                if (debtList.includes(singleSlaveEmail + email)) {\n                  currAmount = debtMap[singleSlaveEmail + email].debts.reduce(\n                    (prev, curr) => prev + curr.amount,\n                    0\n                  );\n                  amount += currAmount;\n                  countDebts++;\n                  data.push(\n                    buildDebtsTable(email, singleSlaveEmail, currAmount)\n                  );\n                }\n              } else {\n                if (debtList.includes(email + singleSlaveEmail)) {\n                  currAmount =\n                    debtMap[email + singleSlaveEmail].debts.reduce(\n                      (prev, curr) => prev + curr.amount,\n                      0\n                    ) * -1;\n                  amount += currAmount;\n                  countDebts++;\n                  data.push(\n                    buildDebtsTable(email, singleSlaveEmail, currAmount)\n                  );\n                }\n              }\n            });\n            setNumDebts(countDebts);\n            if (amount > 0) {\n              setTotalDebtsAmount(amount);\n              setDebtsData(data);\n            } else {\n              setTotalDebtsAmount(0);\n              setDebtsData(null);\n              setNoDebtsExisiting(true);\n            }\n          }\n        }}\n      />\n    </form>\n    {noDebts}\n    <table className=\"tables\">\n      {debtTableHead}\n      <tbody>{allDebtsData}</tbody>\n    </table>\n    <h3>\n      {noDebtsExisiting\n        ? null\n        : allDebtsTotal === 0\n        ? null\n        : \"You are in debt! you owe a total of: \" + allDebtsTotal + \"$\"}\n    </h3>\n    <h2 className=\"titles\">View Users Credits</h2>\n    <form>\n      <select\n        className=\"select-box-data\"\n        onChange={e => handleSingleOwnerEmail(e)}\n      >\n        <option>{defaultSingleCreditor}</option>\n        {emails.map(email => {\n          return getIdentifier(email, users[email]);\n        })}\n      </select>\n      <input\n        type=\"button\"\n        value=\"Submit\"\n        className=\"submit-button horizontal-submit\"\n        onClick={() => {\n          let data = [];\n          let amount = 0;\n          let currAmount = 0;\n          let countCredits = 0;\n\n          if (singleOwnerEmail === defaultSingleCreditor) {\n            alert(\"Please Select a Creditor\");\n          } else {\n            emails.forEach(email => {\n              if (singleOwnerEmail.localeCompare(email) < 0) {\n                if (debtList.includes(singleOwnerEmail + email)) {\n                  currAmount =\n                    debtMap[singleOwnerEmail + email].debts.reduce(\n                      (prev, curr) => prev + curr.amount,\n                      0\n                    ) * -1;\n                  amount += currAmount;\n                  countCredits++;\n                  data.push(\n                    buildCreditsTable(singleOwnerEmail, email, currAmount)\n                  );\n                }\n              } else {\n                if (debtList.includes(email + singleOwnerEmail)) {\n                  currAmount = debtMap[email + singleOwnerEmail].debts.reduce(\n                    (prev, curr) => prev + curr.amount,\n                    0\n                  );\n                  amount += currAmount;\n                  countCredits++;\n                  data.push(\n                    buildCreditsTable(singleOwnerEmail, email, currAmount)\n                  );\n                }\n              }\n            });\n            setNumCredits(countCredits);\n            if (amount > 0) {\n              setTotalCreditsAmount(amount);\n              setCreditsData(data);\n            } else {\n              setTotalCreditsAmount(0);\n              setCreditsData(null);\n              setNoCreditsExisting(true);\n            }\n          }\n        }}\n      />\n    </form>\n    {noCredits}\n    <table className=\"tables\">\n      {creditTableHead}\n      <tbody>{allCreditsData}</tbody>\n    </table>\n    <h3>\n      {noCreditsExisting\n        ? null\n        : allCreditsTotal === 0\n        ? null\n        : \"People owe you \" +\n          allCreditsTotal +\n          \"$ maybe consider charging interest\"}\n    </h3>\n  </div>\n);\n","import { DisplayDebts } from \"../components/DisplayDebts/index\";\nimport { deleteDebtMap, deleteDebt } from \"../actions/actionDefs\";\nimport { getIdentifierString } from \"../utils\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\n\nconst noTransactions = <h3 className=\"no-outstanding\">No Unpaid Debts</h3>;\nconst debtMapTableHead = (\n  <thead>\n    <tr>\n      <th className=\"name-cell\">Debitor</th>\n      <th className=\"name-cell\">Creditor</th>\n      <th>Amount</th>\n      <th className=\"notes-cell\">Notes</th>\n      <th>Delete Debt</th>\n    </tr>\n  </thead>\n);\n\nconst noDebts = <h3 className=\"no-outstanding\">You Don't Owe Anyone Money!</h3>;\nconst debtTableHead = (\n  <thead>\n    <tr>\n      <th className=\"name-cell\">Debitor</th>\n      <th className=\"name-cell\">Creditor</th>\n      <th>Total Amount</th>\n      <th>Delete Debts</th>\n    </tr>\n  </thead>\n);\n\nconst noCredits = <h3 className=\"no-outstanding\">No One Owes You Money</h3>;\nconst creditTableHead = (\n  <thead>\n    <tr>\n      <th className=\"name-cell\">Creditor</th>\n      <th className=\"name-cell\">Debitor</th>\n      <th>Total Amount</th>\n      <th>Delete Debt</th>\n    </tr>\n  </thead>\n);\n\nclass DisplayDebtsContainer extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      debtMapData: null,\n      ownerEmail: \"Select Second User\",\n      slaveEmail: \"Select First User\",\n      singleSlaveEmail: \"Select a Debitor\",\n      debtMapTotal: 0,\n      allDebtsData: null,\n      noTransactionsExisting: false,\n      noCreditsExisting: false,\n      noDebtsExisiting: false,\n      allDebtsTotal: 0,\n      singleOwnerEmail: \"Select a Creditor\",\n      allCreditsTotal: 0,\n      allCreditsData: null,\n      numDebts: 0,\n      numCredits: 0\n    };\n\n    this.buildDebtMapTable = this.buildDebtMapTable.bind(this);\n    this.buildDebtsTable = this.buildDebtsTable.bind(this);\n    this.buildCreditsTable = this.buildCreditsTable.bind(this);\n  }\n\n  buildDebtsTable(ownerEmail, slaveEmail, amount) {\n    return (\n      <tr key={ownerEmail + slaveEmail + amount}>\n        <td>{getIdentifierString(slaveEmail, this.props.users[slaveEmail])}</td>\n        <td>{getIdentifierString(ownerEmail, this.props.users[ownerEmail])}</td>\n        <td>{amount + \"$\"}</td>\n        <td>\n          <span\n            className=\"table-button\"\n            onClick={() => {\n              let response = window.confirm(\n                \"Are you sure you want to delete this debt record?\"\n              );\n\n              if (response) {\n                this.props.deleteDebtMap({\n                  ownerEmail: ownerEmail,\n                  slaveEmail: slaveEmail\n                });\n                if (this.state.numDebts === 1) {\n                  this.setState({\n                    numDebts: 0,\n                    allDebtsData: null,\n                    allDebtsTotal: 0,\n                    noDebtsExisiting: true\n                  });\n                } else {\n                  this.setState({ numDebts: this.state.numDebts - 1 });\n                }\n              }\n            }}\n          >\n            Delete\n          </span>\n        </td>\n      </tr>\n    );\n  }\n\n  buildCreditsTable(ownerEmail, slaveEmail, amount) {\n    return (\n      <tr key={ownerEmail + slaveEmail + amount}>\n        <td>{getIdentifierString(ownerEmail, this.props.users[ownerEmail])}</td>\n        <td>{getIdentifierString(slaveEmail, this.props.users[slaveEmail])}</td>\n        <td>{amount + \"$\"}</td>\n        <td>\n          <span\n            className=\"table-button\"\n            onClick={() => {\n              let response = window.confirm(\n                \"Are you sure you want to delete this credit record?\"\n              );\n\n              if (response) {\n                this.props.deleteDebtMap({\n                  ownerEmail: ownerEmail,\n                  slaveEmail: slaveEmail\n                });\n                if (this.state.numCredits === 1) {\n                  this.setState({\n                    numCredits: 0,\n                    allCreditsData: null,\n                    allCreditsTotal: 0,\n                    noCreditsExisting: true\n                  });\n                } else {\n                  this.setState({ numCredits: this.state.numCredits - 1 });\n                }\n              }\n            }}\n          >\n            Delete\n          </span>\n        </td>\n      </tr>\n    );\n  }\n\n  buildDebtMapTable(data, identifierOrder) {\n    return data.debts.map((debt, index) => {\n      return (\n        <tr key={index}>\n          <td>\n            {debt.amount >= 0\n              ? getIdentifierString(\n                  debt.userIDOne,\n                  this.props.users[debt.userIDOne]\n                )\n              : getIdentifierString(\n                  debt.userIDTwo,\n                  this.props.users[debt.userIDTwo]\n                )}\n          </td>\n          <td>\n            {debt.amount >= 0\n              ? getIdentifierString(\n                  debt.userIDTwo,\n                  this.props.users[debt.userIDTwo]\n                )\n              : getIdentifierString(\n                  debt.userIDOne,\n                  this.props.users[debt.userIDOne]\n                )}\n          </td>\n          <td>{Math.abs(debt.amount) + \"$\"}</td>\n          <td>{debt.notes}</td>\n          <td>\n            <span\n              className=\"table-button\"\n              onClick={() => {\n                let response = window.confirm(\n                  \"Are you sure you want to delete this debt?\"\n                );\n\n                if (response) {\n                  if (data.debts.length <= 1) {\n                    this.props.deleteDebtMap({\n                      ownerEmail: debt.userIDTwo,\n                      slaveEmail: debt.userIDOne\n                    });\n                    this.setState({\n                      debtMapData: null,\n                      debtMapTotal: 0\n                    });\n                  } else {\n                    this.props.deleteDebt({\n                      index: index,\n                      ownerEmail: debt.userIDTwo,\n                      slaveEmail: debt.userIDOne\n                    });\n                    let newTotal =\n                      identifierOrder === 1\n                        ? this.state.debtMapTotal - debt.amount\n                        : this.state.debtMapTotal + debt.amount;\n                    let newData = data;\n                    newData.debts.splice(index, 1);\n                    this.setState({\n                      debtMapData: this.buildDebtMapTable(\n                        newData,\n                        identifierOrder\n                      ),\n                      debtMapTotal: newTotal\n                    });\n                  }\n                }\n              }}\n            >\n              Delete\n            </span>\n          </td>\n        </tr>\n      );\n    });\n  }\n\n  render() {\n    return (\n      <DisplayDebts\n        handleOwnerEmail={event =>\n          this.setState({\n            ownerEmail: event.target.value,\n            debtMapData: null,\n            debtMapTotal: 0,\n            noTransactionsExisting: false\n          })\n        }\n        handleSlaveEmail={event =>\n          this.setState({\n            slaveEmail: event.target.value,\n            debtMapData: null,\n            debtMapTotal: 0,\n            noTransactionsExisting: false\n          })\n        }\n        handleSingleSlaveEmail={event =>\n          this.setState({\n            singleSlaveEmail: event.target.value,\n            allDebtsData: null,\n            allDebtsTotal: 0,\n            noDebtsExisiting: false,\n            numDebts: 0\n          })\n        }\n        handleSingleOwnerEmail={event =>\n          this.setState({\n            singleOwnerEmail: event.target.value,\n            allCreditsData: null,\n            allCreditsTotal: 0,\n            noCreditsExisting: false,\n            numCredits: 0\n          })\n        }\n        setTotalDebtMapAmount={debtMapTotal =>\n          this.setState({ debtMapTotal: debtMapTotal })\n        }\n        setDebtMapData={debtMapData =>\n          this.setState({ debtMapData: debtMapData })\n        }\n        setTotalDebtsAmount={allDebtsTotal =>\n          this.setState({ allDebtsTotal: allDebtsTotal })\n        }\n        setTotalCreditsAmount={allCreditsTotal =>\n          this.setState({ allCreditsTotal: allCreditsTotal })\n        }\n        setDebtsData={allDebtsData =>\n          this.setState({ allDebtsData: allDebtsData })\n        }\n        setCreditsData={allCreditsData =>\n          this.setState({ allCreditsData: allCreditsData })\n        }\n        setNumDebts={numDebts => this.setState({ numDebts: numDebts })}\n        setNumCredits={numCredits => this.setState({ numCredits: numCredits })}\n        setNoTransactionExisting={noTransactionsExisting =>\n          this.setState({ noTransactionsExisting: noTransactionsExisting })\n        }\n        setNoDebtsExisiting={noDebtsExisiting =>\n          this.setState({ noDebtsExisiting: noDebtsExisiting })\n        }\n        setNoCreditsExisting={noCreditsExisting =>\n          this.setState({ noCreditsExisting: noCreditsExisting })\n        }\n        buildDebtMapTable={this.buildDebtMapTable}\n        buildDebtsTable={this.buildDebtsTable}\n        buildCreditsTable={this.buildCreditsTable}\n        emails={this.props.emails}\n        users={this.props.users}\n        debtMap={this.props.debtMap}\n        debtList={this.props.debtList}\n        ownerEmail={this.state.ownerEmail}\n        slaveEmail={this.state.slaveEmail}\n        debtMapData={this.state.debtMapData}\n        debtMapTotal={this.state.debtMapTotal}\n        allDebtsData={this.state.allDebtsData}\n        allDebtsTotal={this.state.allDebtsTotal}\n        singleSlaveEmail={this.state.singleSlaveEmail}\n        singleOwnerEmail={this.state.singleOwnerEmail}\n        allCreditsTotal={this.state.allCreditsTotal}\n        allCreditsData={this.state.allCreditsData}\n        noTransactionsExisting={this.state.noTransactionsExisting}\n        noTransactions={\n          this.state.noTransactionsExisting ? noTransactions : null\n        }\n        noDebtsExisiting={this.state.noDebtsExisiting}\n        noDebts={this.state.noDebtsExisiting ? noDebts : null}\n        noCreditsExisting={this.state.noCreditsExisting}\n        noCredits={this.state.noCreditsExisting ? noCredits : null}\n        debtMapTableHead={this.state.debtMapData ? debtMapTableHead : null}\n        debtTableHead={this.state.allDebtsData ? debtTableHead : null}\n        creditTableHead={this.state.allCreditsData ? creditTableHead : null}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  emails: state.emails,\n  users: state.users,\n  debtMap: state.debtMap,\n  debtList: state.debtList\n});\n\nconst mapDispatchToProps = dispatch => ({\n  deleteDebtMap: data => dispatch(deleteDebtMap(data)),\n  deleteDebt: data => dispatch(deleteDebt(data))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(DisplayDebtsContainer);\n","import React from \"react\";\nimport AddDebtContainer from \"./addDebtContainer\";\nimport DisplayDebtsContainer from \"./displayDebtsContainer\";\n\nexport default class ManageDebtsContainer extends React.Component {\n  render() {\n    return (\n      <div>\n        <AddDebtContainer />\n        <DisplayDebtsContainer />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport \"./index.css\";\n\nexport const HomePage = () => (\n  <div className=\"container\">\n    <h3>Welcome to How Much Do I Owe You!</h3>\n    <p>\n      This app allows you to track purchaes you make for others and vice versa\n    </p>\n    <p>\n      To begin, go to the Manage Users page and add some users, then you can add\n      purchases on the Manage Debts page!\n    </p>\n    <p>As a side note, all data is stored in cookies, however, if you would like to get a actual copy of your data refer to the Manage Data page</p>\n  </div>\n);\n","import React from \"react\";\nimport { HomePage } from \"../components/HomePage/index\";\n\nexport default class HomePageContainer extends React.Component {\n  render() {\n    return (\n      <div>\n        <HomePage />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ManageDataContainer from \"./containers/manageDataContainer\";\nimport ManageUsersContainer from \"./containers/manageUsersContainer\";\nimport ManageDebtsContainer from \"./containers/manageDebtsContainer\";\nimport HomePageContainer from \"./containers/homePageContainer\";\nimport { HashRouter, Route, NavLink, Switch } from \"react-router-dom\";\nimport \"./App.css\";\n\nexport default class App extends React.Component {\n  render() {\n    return (\n      <div className=\"app-container\">\n        <h2 className=\"app-title\">How Much Do I Owe You?</h2>\n        <div className=\"main-content-wrapper\">\n          <HashRouter basename=\"/\">\n            <div>\n              <div className=\"nav\">\n                <NavLink\n                  className=\"non-selected-link\"\n                  activeClassName=\"selected\"\n                  exact\n                  to=\"/\"\n                >\n                  Home\n                </NavLink>\n\n                <NavLink\n                  className=\"non-selected-link\"\n                  activeClassName=\"selected\"\n                  exact\n                  to=\"/manageUsers\"\n                >\n                  Manage Users\n                </NavLink>\n\n                <NavLink\n                  className=\"non-selected-link\"\n                  activeClassName=\"selected\"\n                  exact\n                  to=\"/manageDebts\"\n                >\n                  Manage Debts\n                </NavLink>\n\n                <NavLink\n                  className=\"non-selected-link\"\n                  activeClassName=\"selected\"\n                  exact\n                  to=\"/manageData\"\n                >\n                  Manage Data\n                </NavLink>\n              </div>\n              <Switch>\n                <Route path=\"/manageDebts\" component={ManageDebtsContainer} />\n                <Route path=\"/manageUsers\" component={ManageUsersContainer} />\n                <Route path=\"/manageData\" component={ManageDataContainer} />\n                <Route path=\"/\" component={HomePageContainer} />\n              </Switch>\n            </div>\n          </HashRouter>\n        </div>\n      </div>\n    );\n  }\n}\n","import * as actionConst from \"../actions/action-constants\";\n\nimport { checkForDebtInstance } from \"../utils\";\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case actionConst.addDebtInstance: {\n      return {\n        ...state,\n        debtList: [...state.debtList, action.payload.key],\n        debtMap: {\n          ...state.debtMap,\n          [action.payload.key]: {\n            debts: action.payload.debts\n          }\n        }\n      };\n    }\n    case actionConst.deleteDebt: {\n      let id = action.payload.userIDOne + action.payload.userIDTwo;\n      return {\n        ...state,\n        debtMap: {\n          ...state.debtMap,\n          [id]: {\n            debts: [\n              ...state.debtMap[id].debts.slice(0, action.payload.index),\n              ...state.debtMap[id].debts.slice(action.payload.index + 1)\n            ]\n          }\n        }\n      };\n    }\n    case actionConst.deleteUser: {\n      let newUserMap = {};\n      state.emails.forEach(email => {\n        if (email !== action.payload.email) {\n          newUserMap[email] = state.users[email];\n        }\n      });\n      return {\n        ...state,\n        emails: state.emails.filter(email => email !== action.payload.email),\n        users: newUserMap\n      };\n    }\n    case actionConst.deleteDebtMap: {\n      let id = action.payload.userIDOne + action.payload.userIDTwo;\n      let newDebtMap = {};\n      state.debtList.forEach(debt => {\n        if (debt !== id) {\n          newDebtMap[debt] = state.debtMap[debt];\n        }\n      });\n      return {\n        ...state,\n        debtList: state.debtList.filter(debt => debt !== id),\n        debtMap: newDebtMap\n      };\n    }\n    case actionConst.clearData: {\n      return {\n        emails: [],\n        users: {},\n        debtMap: {},\n        debtList: []\n      };\n    }\n    case actionConst.addUser: {\n      return {\n        ...state,\n        emails: [...state.emails, action.email],\n        users: {\n          ...state.users,\n          [action.email]: action.payload\n        }\n      };\n    }\n    case actionConst.addDebt: {\n      let id = action.payload.userIDOne + action.payload.userIDTwo;\n\n      if (\n        checkForDebtInstance(\n          state.debtList,\n          action.payload.userIDOne,\n          action.payload.userIDTwo\n        )\n      ) {\n        return {\n          ...state,\n          debtMap: {\n            ...state.debtMap,\n            [id]: {\n              debts: [...state.debtMap[id].debts, action.payload]\n            }\n          }\n        };\n      } else {\n        return {\n          ...state,\n          debtList: [...state.debtList, id],\n          debtMap: {\n            ...state.debtMap,\n            [id]: {\n              debts: [action.payload]\n            }\n          }\n        };\n      }\n    }\n    default: {\n      return state;\n    }\n  }\n}\n\nexport default reducer;\n","import { createStore, applyMiddleware } from \"redux\";\nimport reducer from \"./reducers/reducer\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport reduxCookiesMiddleware from \"redux-cookies-middleware\";\nimport { getStateFromCookies } from \"redux-cookies-middleware\";\n\nconst defaultState = {\n  emails: [],\n  users: {},\n  debtMap: {},\n  debtList: []\n};\n\n\nconst cookiePaths = {\n    \"emails\": { name: \"HMDIOY_EMAILS\" },\n    \"users\": { name: \"HMDIOY_USERS\" },\n    \"debtMap\": { name: \"HMDIOY_DEBTMAP\" },\n    \"debtList\": { name: \"HMDIOY_DEBTLIST\" },\n}\n\nlet initialState = getStateFromCookies(defaultState, cookiePaths);\n\nif(!initialState.emails) {\n    initialState.emails = [];\n}\n\nif(!initialState.users) {\n    initialState.users = {};\n}\n\nif(!initialState.debtMap) {\n    initialState.debtMap = {};\n}\n\nif(!initialState.debtList) {\n    initialState.debtList = [];\n}\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(reduxCookiesMiddleware(cookiePaths)))\n);\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}