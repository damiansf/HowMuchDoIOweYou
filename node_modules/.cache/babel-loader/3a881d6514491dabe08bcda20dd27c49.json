{"ast":null,"code":"var _jsxFileName = \"/Users/damiansandhu-franceschi/Desktop/HowMuchDoIOweYou/src/containers/displayDebtsContainer.js\";\nimport { DisplayDebts } from \"../components/DisplayDebts/index\";\nimport { deleteDebtMap, deleteDebt } from \"../actions/actionDefs\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\n\nclass DisplayDebtsContainer extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      debtMapData: null,\n      ownerEmail: \"\",\n      slaveEmail: \"\",\n      singleSlaveEmail: \"\",\n      debtMapTotal: 0,\n      allDebtsData: null,\n      allDebtsTotal: 0,\n      singleOwnerEmail: \"\",\n      allCreditsTotal: 0,\n      allCreditsData: null,\n      numDebts: 0,\n      numCredits: 0\n    };\n    this.buildDebtMapTable = this.buildDebtMapTable.bind(this);\n    this.buildDebtsTable = this.buildDebtsTable.bind(this);\n    this.buildCreditsTable = this.buildCreditsTable.bind(this);\n  }\n\n  buildDebtsTable(ownerEmail, slaveEmail, amount) {\n    return React.createElement(\"tr\", {\n      key: ownerEmail + slaveEmail + amount,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, slaveEmail), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, ownerEmail), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, amount), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => {\n        this.props.deleteDebtMap({\n          ownerEmail: ownerEmail,\n          slaveEmail: slaveEmail\n        });\n\n        if (this.state.numDebts === 1) {\n          this.setState({\n            numDebts: 0,\n            allDebtsData: null,\n            allDebtsTotal: 0\n          });\n        } else {\n          this.setState({\n            numDebts: this.state.numDebts - 1\n          });\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    })));\n  }\n\n  buildCreditsTable(ownerEmail, slaveEmail, amount) {\n    return React.createElement(\"tr\", {\n      key: ownerEmail + slaveEmail + amount,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, ownerEmail), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, slaveEmail), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, amount), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => {\n        this.props.deleteDebtMap({\n          ownerEmail: ownerEmail,\n          slaveEmail: slaveEmail\n        });\n\n        if (this.state.numCredits === 1) {\n          this.setState({\n            numCredits: 0,\n            allCreditsData: null,\n            allCreditsTotal: 0\n          });\n        } else {\n          this.setState({\n            numCredits: this.state.numCredits - 1\n          });\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    })));\n  }\n\n  buildDebtMapTable(data, multiplier) {\n    if (multiplier === 1) {\n      return data.debts.map((debt, index) => {\n        return React.createElement(\"tr\", {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }, debt.userIDOne), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }, debt.userIDTwo), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }, debt.amount), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }, debt.notes), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          onClick: () => {\n            if (data.debts.length <= 1) {\n              this.props.deleteDebtMap({\n                ownerEmail: debt.userIDTwo,\n                slaveEmail: debt.userIDOne\n              });\n              this.setState({\n                debtMapData: null,\n                debtMapTotal: 0\n              });\n            } else {\n              this.props.deleteDebt({\n                index: index,\n                ownerEmail: debt.userIDTwo,\n                slaveEmail: debt.userIDOne\n              });\n              let newTotal = this.state.debtMapTotal - debt.amount;\n              let newData = data;\n              newData.debts.splice(index, 1);\n              this.setState({\n                debtMapData: this.buildDebtMapTable(newData, multiplier),\n                debtMapTotal: newTotal\n              });\n            }\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        })));\n      });\n    } else {\n      return data.debts.map((debt, index) => {\n        return React.createElement(\"tr\", {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133\n          },\n          __self: this\n        }, debt.userIDTwo), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134\n          },\n          __self: this\n        }, debt.userIDOne), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135\n          },\n          __self: this\n        }, debt.amount * multiplier), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136\n          },\n          __self: this\n        }, debt.notes), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          onClick: () => {\n            if (data.debts.length <= 1) {\n              this.props.deleteDebtMap({\n                ownerEmail: debt.userIDTwo,\n                slaveEmail: debt.userIDOne\n              });\n              this.setState({\n                debtMapData: null,\n                debtMapTotal: 0\n              });\n            } else {\n              this.props.deleteDebt({\n                index: index,\n                ownerEmail: debt.userIDTwo,\n                slaveEmail: debt.userIDOne\n              });\n              let newTotal = this.state.debtMapTotal + debt.amount;\n              let newData = data;\n              newData.debts.splice(index, 1);\n              this.setState({\n                debtMapData: this.buildDebtMapTable(newData, multiplier),\n                debtMapTotal: newTotal\n              });\n            }\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138\n          },\n          __self: this\n        })));\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(DisplayDebts, {\n      handleOwnerEmail: event => this.setState({\n        ownerEmail: event.target.value\n      }),\n      handleSlaveEmail: event => this.setState({\n        slaveEmail: event.target.value\n      }),\n      handleSingleSlaveEmail: event => this.setState({\n        singleSlaveEmail: event.target.value\n      }),\n      handleSingleOwnerEmail: event => this.setState({\n        singleOwnerEmail: event.target.value\n      }),\n      setTotalDebtMapAmount: debtMapTotal => this.setState({\n        debtMapTotal: debtMapTotal\n      }),\n      setDebtMapData: debtMapData => this.setState({\n        debtMapData: debtMapData\n      }),\n      setTotalDebtsAmount: allDebtsTotal => this.setState({\n        allDebtsTotal: allDebtsTotal\n      }),\n      setTotalCreditsAmount: allCreditsTotal => this.setState({\n        allCreditsTotal: allCreditsTotal\n      }),\n      setDebtsData: allDebtsData => this.setState({\n        allDebtsData: allDebtsData\n      }),\n      setCreditsData: allCreditsData => this.setState({\n        allCreditsData: allCreditsData\n      }),\n      setNumDebts: numDebts => this.setState({\n        numDebts: numDebts\n      }),\n      setNumCredits: numCredits => this.setState({\n        numCredits: numCredits\n      }),\n      buildDebtMapTable: this.buildDebtMapTable,\n      buildDebtsTable: this.buildDebtsTable,\n      buildCreditsTable: this.buildCreditsTable,\n      emails: this.props.emails,\n      users: this.props.users,\n      debtMap: this.props.debtMap,\n      debtList: this.props.debtList,\n      ownerEmail: this.state.ownerEmail,\n      slaveEmail: this.state.slaveEmail,\n      debtMapData: this.state.debtMapData,\n      debtMapTotal: this.state.debtMapTotal,\n      allDebtsData: this.state.allDebtsData,\n      allDebtsTotal: this.state.allDebtsTotal,\n      singleSlaveEmail: this.state.singleSlaveEmail,\n      singleOwnerEmail: this.state.singleOwnerEmail,\n      allCreditsTotal: this.state.allCreditsTotal,\n      allCreditsData: this.state.allCreditsData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    });\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  emails: state.emails,\n  users: state.users,\n  debtMap: state.debtMap,\n  debtList: state.debtList\n});\n\nconst mapDispatchToProps = dispatch => ({\n  deleteDebtMap: data => dispatch(deleteDebtMap(data)),\n  deleteDebt: data => dispatch(deleteDebt(data))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DisplayDebtsContainer);","map":{"version":3,"sources":["/Users/damiansandhu-franceschi/Desktop/HowMuchDoIOweYou/src/containers/displayDebtsContainer.js"],"names":["DisplayDebts","deleteDebtMap","deleteDebt","React","connect","DisplayDebtsContainer","Component","constructor","state","debtMapData","ownerEmail","slaveEmail","singleSlaveEmail","debtMapTotal","allDebtsData","allDebtsTotal","singleOwnerEmail","allCreditsTotal","allCreditsData","numDebts","numCredits","buildDebtMapTable","bind","buildDebtsTable","buildCreditsTable","amount","props","setState","data","multiplier","debts","map","debt","index","userIDOne","userIDTwo","notes","length","newTotal","newData","splice","render","event","target","value","emails","users","debtMap","debtList","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import { DisplayDebts } from \"../components/DisplayDebts/index\";\nimport { deleteDebtMap, deleteDebt } from \"../actions/actionDefs\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\n\nclass DisplayDebtsContainer extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      debtMapData: null,\n      ownerEmail: \"\",\n      slaveEmail: \"\",\n      singleSlaveEmail: \"\",\n      debtMapTotal: 0,\n      allDebtsData: null,\n      allDebtsTotal: 0,\n      singleOwnerEmail: \"\",\n      allCreditsTotal: 0,\n      allCreditsData: null,\n      numDebts: 0,\n      numCredits: 0\n    };\n\n    this.buildDebtMapTable = this.buildDebtMapTable.bind(this);\n    this.buildDebtsTable = this.buildDebtsTable.bind(this);\n    this.buildCreditsTable = this.buildCreditsTable.bind(this);\n  }\n\n  buildDebtsTable(ownerEmail, slaveEmail, amount) {\n    return (\n      <tr key={ownerEmail + slaveEmail + amount}>\n        <td>{slaveEmail}</td>\n        <td>{ownerEmail}</td>\n        <td>{amount}</td>\n        <td>\n          <button\n            onClick={() => {\n              this.props.deleteDebtMap({\n                ownerEmail: ownerEmail,\n                slaveEmail: slaveEmail\n              });\n              if (this.state.numDebts === 1) {\n                this.setState({\n                  numDebts: 0,\n                  allDebtsData: null,\n                  allDebtsTotal: 0\n                });\n              } else {\n                this.setState({ numDebts: this.state.numDebts - 1 });\n              }\n            }}\n          />\n        </td>\n      </tr>\n    );\n  }\n\n  buildCreditsTable(ownerEmail, slaveEmail, amount) {\n    return (\n      <tr key={ownerEmail + slaveEmail + amount}>\n        <td>{ownerEmail}</td>\n        <td>{slaveEmail}</td>\n        <td>{amount}</td>\n        <td>\n          <button\n            onClick={() => {\n              this.props.deleteDebtMap({\n                ownerEmail: ownerEmail,\n                slaveEmail: slaveEmail\n              });\n              if (this.state.numCredits === 1) {\n                this.setState({\n                  numCredits: 0,\n                  allCreditsData: null,\n                  allCreditsTotal: 0\n                });\n              } else {\n                this.setState({ numCredits: this.state.numCredits - 1 });\n              }\n            }}\n          />\n        </td>\n      </tr>\n    );\n  }\n\n  buildDebtMapTable(data, multiplier) {\n    if (multiplier === 1) {\n      return data.debts.map((debt, index) => {\n        return (\n          <tr key={index}>\n            <td>{debt.userIDOne}</td>\n            <td>{debt.userIDTwo}</td>\n            <td>{debt.amount}</td>\n            <td>{debt.notes}</td>\n            <td>\n              <button\n                onClick={() => {\n                  if (data.debts.length <= 1) {\n                    this.props.deleteDebtMap({\n                      ownerEmail: debt.userIDTwo,\n                      slaveEmail: debt.userIDOne\n                    });\n                    this.setState({\n                      debtMapData: null,\n                      debtMapTotal: 0\n                    });\n                  } else {\n                    this.props.deleteDebt({\n                      index: index,\n                      ownerEmail: debt.userIDTwo,\n                      slaveEmail: debt.userIDOne\n                    });\n                    let newTotal = this.state.debtMapTotal - debt.amount;\n                    let newData = data;\n                    newData.debts.splice(index, 1);\n                    this.setState({\n                      debtMapData: this.buildDebtMapTable(newData, multiplier),\n                      debtMapTotal: newTotal\n                    });\n                  }\n                }}\n              />\n            </td>\n          </tr>\n        );\n      });\n    } else {\n      return data.debts.map((debt, index) => {\n        return (\n          <tr key={index}>\n            <td>{debt.userIDTwo}</td>\n            <td>{debt.userIDOne}</td>\n            <td>{debt.amount * multiplier}</td>\n            <td>{debt.notes}</td>\n            <td>\n              <button\n                onClick={() => {\n                  if (data.debts.length <= 1) {\n                    this.props.deleteDebtMap({\n                      ownerEmail: debt.userIDTwo,\n                      slaveEmail: debt.userIDOne\n                    });\n                    this.setState({\n                      debtMapData: null,\n                      debtMapTotal: 0\n                    });\n                  } else {\n                    this.props.deleteDebt({\n                      index: index,\n                      ownerEmail: debt.userIDTwo,\n                      slaveEmail: debt.userIDOne\n                    });\n                    let newTotal = this.state.debtMapTotal + debt.amount;\n                    let newData = data;\n                    newData.debts.splice(index, 1);\n                    this.setState({\n                      debtMapData: this.buildDebtMapTable(newData, multiplier),\n                      debtMapTotal: newTotal\n                    });\n                  }\n                }}\n              />\n            </td>\n          </tr>\n        );\n      });\n    }\n  }\n\n  render() {\n    return (\n      <DisplayDebts\n        handleOwnerEmail={event =>\n          this.setState({ ownerEmail: event.target.value })\n        }\n        handleSlaveEmail={event =>\n          this.setState({ slaveEmail: event.target.value })\n        }\n        handleSingleSlaveEmail={event =>\n          this.setState({ singleSlaveEmail: event.target.value })\n        }\n        handleSingleOwnerEmail={event =>\n          this.setState({ singleOwnerEmail: event.target.value })\n        }\n        setTotalDebtMapAmount={debtMapTotal =>\n          this.setState({ debtMapTotal: debtMapTotal })\n        }\n        setDebtMapData={debtMapData =>\n          this.setState({ debtMapData: debtMapData })\n        }\n        setTotalDebtsAmount={allDebtsTotal =>\n          this.setState({ allDebtsTotal: allDebtsTotal })\n        }\n        setTotalCreditsAmount={allCreditsTotal =>\n          this.setState({ allCreditsTotal: allCreditsTotal })\n        }\n        setDebtsData={allDebtsData =>\n          this.setState({ allDebtsData: allDebtsData })\n        }\n        setCreditsData={allCreditsData =>\n          this.setState({ allCreditsData: allCreditsData })\n        }\n        setNumDebts={numDebts => this.setState({ numDebts: numDebts })}\n        setNumCredits={numCredits => this.setState({ numCredits: numCredits })}\n        buildDebtMapTable={this.buildDebtMapTable}\n        buildDebtsTable={this.buildDebtsTable}\n        buildCreditsTable={this.buildCreditsTable}\n        emails={this.props.emails}\n        users={this.props.users}\n        debtMap={this.props.debtMap}\n        debtList={this.props.debtList}\n        ownerEmail={this.state.ownerEmail}\n        slaveEmail={this.state.slaveEmail}\n        debtMapData={this.state.debtMapData}\n        debtMapTotal={this.state.debtMapTotal}\n        allDebtsData={this.state.allDebtsData}\n        allDebtsTotal={this.state.allDebtsTotal}\n        singleSlaveEmail={this.state.singleSlaveEmail}\n        singleOwnerEmail={this.state.singleOwnerEmail}\n        allCreditsTotal={this.state.allCreditsTotal}\n        allCreditsData={this.state.allCreditsData}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  emails: state.emails,\n  users: state.users,\n  debtMap: state.debtMap,\n  debtList: state.debtList\n});\n\nconst mapDispatchToProps = dispatch => ({\n  deleteDebtMap: data => dispatch(deleteDebtMap(data)),\n  deleteDebt: data => dispatch(deleteDebt(data))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(DisplayDebtsContainer);\n"]},"metadata":{},"sourceType":"module"}