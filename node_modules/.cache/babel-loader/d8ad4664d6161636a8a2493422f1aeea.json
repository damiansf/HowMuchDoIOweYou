{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _cookieApi = require('./cookieApi');\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n/**\n * safely get cookies\n * @param {Function} getCookie\n * @param {String} cookieName\n * @return {any} cookieValue\n */\n\n\nvar safeGetCookie = function safeGetCookie(getCookie, cookieName) {\n  try {\n    return JSON.parse(getCookie(cookieName));\n  } catch (_) {\n    return getCookie(cookieName);\n  }\n};\n/**\n * get State Object from Path String\n * @param {String} path\n * @param {any} valueFromCookie\n * @return {Object} new state\n */\n\n\nvar getStateFromPath = function getStateFromPath(path, valueFromCookie) {\n  var pathSplit = path.split('.');\n  return pathSplit.reverse().reduce(function (finalPathState, currPathKey) {\n    return _defineProperty({}, currPathKey, finalPathState);\n  }, valueFromCookie);\n};\n/**\n * read browser cookie into state\n * @param {Object} preloaded state\n * @param {Object} paths\n * @param {Object} get Cookie implementation\n * @return {Object} new state\n */\n\n\nvar getStateFromCookies = function getStateFromCookies() {\n  var preloadedState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var paths = arguments[1];\n  var getCookie = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _cookieApi.getCookie;\n  var pathStates = Object.keys(paths).map(function (path) {\n    var pathConfig = paths[path];\n    var valueFromCookie = safeGetCookie(getCookie, pathConfig.name);\n    return getStateFromPath(path, valueFromCookie);\n  });\n  return pathStates.reduce(function (finalState, pathState) {\n    return _extends({}, finalState, pathState);\n  }, preloadedState);\n};\n\nexports.default = getStateFromCookies;","map":null,"metadata":{},"sourceType":"script"}