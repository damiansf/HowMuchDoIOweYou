{"ast":null,"code":"var _jsxFileName = \"/Users/damiansandhu-franceschi/Desktop/HowMuchDoIOweYou/src/components/DisplayUsers/index.js\";\nimport React from \"react\";\nimport Modal from \"react-modal\";\nexport const DisplayUsers = ({\n  users,\n  emails,\n  debtList,\n  deleteUser,\n  deleteDebtMap,\n  checkForDebtInstance,\n  editUser,\n  orderEmails,\n  modalIsOpen,\n  editEmail,\n  firstName,\n  lastName,\n  email,\n  saveEdit,\n  cancelEdit,\n  handleLastName,\n  handleFirstName,\n  handleEmail,\n  addUser,\n  oldEmail\n}) => React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26\n  },\n  __self: this\n}, React.createElement(Modal, {\n  isOpen: modalIsOpen,\n  onRequestClose: cancelEdit,\n  contentLabel: \"Edit User\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27\n  },\n  __self: this\n}, React.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32\n  },\n  __self: this\n}, editEmail ? \"\" : \"Note, only the first and last name can be changed for this user as they are involved in debts\"), React.createElement(\"form\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37\n  },\n  __self: this\n}, React.createElement(\"label\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38\n  },\n  __self: this\n}, \"FirstName:\", React.createElement(\"input\", {\n  type: \"text\",\n  name: \"firstName\",\n  value: firstName,\n  onChange: e => handleFirstName(e),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40\n  },\n  __self: this\n})), React.createElement(\"label\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 47\n  },\n  __self: this\n}, \"LastName:\", React.createElement(\"input\", {\n  type: \"text\",\n  name: \"lastName\",\n  value: lastName,\n  onChange: e => handleLastName(e),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 49\n  },\n  __self: this\n})), React.createElement(\"label\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 56\n  },\n  __self: this\n}, \"Email:\", React.createElement(\"input\", {\n  type: \"text\",\n  name: \"email\",\n  value: email,\n  onChange: e => handleEmail(e),\n  disabled: editEmail ? \"\" : \"disabled\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 58\n  },\n  __self: this\n})), React.createElement(\"input\", {\n  type: \"button\",\n  value: \"Save\",\n  onClick: () => {\n    if (editEmail) {\n      if (!emails.includes(email)) {\n        deleteUser({\n          email: oldEmail\n        });\n        addUser({\n          firstName: firstName,\n          lastName: lastName,\n          email: email\n        });\n        saveEdit();\n      } else {\n        alert(\"User with same email already exists\");\n      }\n    } else {\n      deleteUser({\n        email: email\n      });\n      addUser({\n        firstName: firstName,\n        lastName: lastName,\n        email: email\n      });\n      saveEdit();\n    }\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 66\n  },\n  __self: this\n}), React.createElement(\"input\", {\n  type: \"button\",\n  value: \"Cancel\",\n  onClick: () => {\n    cancelEdit();\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 93\n  },\n  __self: this\n}))), React.createElement(\"table\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 102\n  },\n  __self: this\n}, React.createElement(\"thead\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 103\n  },\n  __self: this\n}, React.createElement(\"tr\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 104\n  },\n  __self: this\n}, React.createElement(\"th\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 105\n  },\n  __self: this\n}, \"First Name\"), React.createElement(\"th\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 106\n  },\n  __self: this\n}, \"Last Name\"), React.createElement(\"th\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 107\n  },\n  __self: this\n}, \"Email\"))), React.createElement(\"tbody\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 110\n  },\n  __self: this\n}, emails.map(email => {\n  return React.createElement(\"tr\", {\n    key: users[email].email,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, users[email].firstName), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, users[email].lastName), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, users[email].email), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: () => {\n      emails.forEach(emailTwo => {\n        let _orderEmails = orderEmails(email, emailTwo),\n            userOne = _orderEmails.userOne,\n            userTwo = _orderEmails.userTwo;\n\n        if (checkForDebtInstance(debtList, userOne, userTwo)) {\n          deleteDebtMap({\n            ownerEmail: userOne,\n            slaveEmail: userTwo\n          });\n        }\n      });\n      deleteUser({\n        email: email\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: () => {\n      let editEmail = false;\n      emails.forEach(emailTwo => {\n        let _orderEmails2 = orderEmails(email, emailTwo),\n            userOne = _orderEmails2.userOne,\n            userTwo = _orderEmails2.userTwo;\n\n        if (!checkForDebtInstance(debtList, userOne, userTwo)) {\n          editEmail = true;\n        } else {\n          editEmail = false;\n        }\n      });\n      editUser(email, editEmail);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, \"Edit\")));\n}))));","map":{"version":3,"sources":["/Users/damiansandhu-franceschi/Desktop/HowMuchDoIOweYou/src/components/DisplayUsers/index.js"],"names":["React","Modal","DisplayUsers","users","emails","debtList","deleteUser","deleteDebtMap","checkForDebtInstance","editUser","orderEmails","modalIsOpen","editEmail","firstName","lastName","email","saveEdit","cancelEdit","handleLastName","handleFirstName","handleEmail","addUser","oldEmail","e","includes","alert","map","forEach","emailTwo","userOne","userTwo","ownerEmail","slaveEmail"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAEA,OAAO,MAAMC,YAAY,GAAG,CAAC;AAC3BC,EAAAA,KAD2B;AAE3BC,EAAAA,MAF2B;AAG3BC,EAAAA,QAH2B;AAI3BC,EAAAA,UAJ2B;AAK3BC,EAAAA,aAL2B;AAM3BC,EAAAA,oBAN2B;AAO3BC,EAAAA,QAP2B;AAQ3BC,EAAAA,WAR2B;AAS3BC,EAAAA,WAT2B;AAU3BC,EAAAA,SAV2B;AAW3BC,EAAAA,SAX2B;AAY3BC,EAAAA,QAZ2B;AAa3BC,EAAAA,KAb2B;AAc3BC,EAAAA,QAd2B;AAe3BC,EAAAA,UAf2B;AAgB3BC,EAAAA,cAhB2B;AAiB3BC,EAAAA,eAjB2B;AAkB3BC,EAAAA,WAlB2B;AAmB3BC,EAAAA,OAnB2B;AAoB3BC,EAAAA;AApB2B,CAAD,KAsB1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,KAAD;AACE,EAAA,MAAM,EAAEX,WADV;AAEE,EAAA,cAAc,EAAEM,UAFlB;AAGE,EAAA,YAAY,EAAC,WAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGL,SAAS,GACN,EADM,GAEN,+FAHN,CALF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAEE;AACE,EAAA,IAAI,EAAC,MADP;AAEE,EAAA,IAAI,EAAC,WAFP;AAGE,EAAA,KAAK,EAAEC,SAHT;AAIE,EAAA,QAAQ,EAAEU,CAAC,IAAIJ,eAAe,CAACI,CAAD,CAJhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFF,CADF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAEE;AACE,EAAA,IAAI,EAAC,MADP;AAEE,EAAA,IAAI,EAAC,UAFP;AAGE,EAAA,KAAK,EAAET,QAHT;AAIE,EAAA,QAAQ,EAAES,CAAC,IAAIL,cAAc,CAACK,CAAD,CAJ/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFF,CAVF,EAmBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAEE;AACE,EAAA,IAAI,EAAC,MADP;AAEE,EAAA,IAAI,EAAC,OAFP;AAGE,EAAA,KAAK,EAAER,KAHT;AAIE,EAAA,QAAQ,EAAEQ,CAAC,IAAIH,WAAW,CAACG,CAAD,CAJ5B;AAKE,EAAA,QAAQ,EAAEX,SAAS,GAAG,EAAH,GAAQ,UAL7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFF,CAnBF,EA6BE;AACE,EAAA,IAAI,EAAC,QADP;AAEE,EAAA,KAAK,EAAC,MAFR;AAGE,EAAA,OAAO,EAAE,MAAM;AACb,QAAIA,SAAJ,EAAe;AACb,UAAI,CAACR,MAAM,CAACoB,QAAP,CAAgBT,KAAhB,CAAL,EAA6B;AAC3BT,QAAAA,UAAU,CAAC;AAAES,UAAAA,KAAK,EAAEO;AAAT,SAAD,CAAV;AACAD,QAAAA,OAAO,CAAC;AACNR,UAAAA,SAAS,EAAEA,SADL;AAENC,UAAAA,QAAQ,EAAEA,QAFJ;AAGNC,UAAAA,KAAK,EAAEA;AAHD,SAAD,CAAP;AAKAC,QAAAA,QAAQ;AACT,OARD,MAQO;AACLS,QAAAA,KAAK,CAAC,qCAAD,CAAL;AACD;AACF,KAZD,MAYO;AACLnB,MAAAA,UAAU,CAAC;AAAES,QAAAA,KAAK,EAAEA;AAAT,OAAD,CAAV;AACAM,MAAAA,OAAO,CAAC;AACNR,QAAAA,SAAS,EAAEA,SADL;AAENC,QAAAA,QAAQ,EAAEA,QAFJ;AAGNC,QAAAA,KAAK,EAAEA;AAHD,OAAD,CAAP;AAKAC,MAAAA,QAAQ;AACT;AACF,GAzBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EA7BF,EAwDE;AACE,EAAA,IAAI,EAAC,QADP;AAEE,EAAA,KAAK,EAAC,QAFR;AAGE,EAAA,OAAO,EAAE,MAAM;AACbC,IAAAA,UAAU;AACX,GALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAxDF,CAVF,CADF,EA4EE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAHF,CADF,CADF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGb,MAAM,CAACsB,GAAP,CAAWX,KAAK,IAAI;AACnB,SACE;AAAI,IAAA,GAAG,EAAEZ,KAAK,CAACY,KAAD,CAAL,CAAaA,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKZ,KAAK,CAACY,KAAD,CAAL,CAAaF,SAAlB,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKV,KAAK,CAACY,KAAD,CAAL,CAAaD,QAAlB,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKX,KAAK,CAACY,KAAD,CAAL,CAAaA,KAAlB,CAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,OAAO,EAAE,MAAM;AACbX,MAAAA,MAAM,CAACuB,OAAP,CAAeC,QAAQ,IAAI;AAAA,2BACElB,WAAW,CAACK,KAAD,EAAQa,QAAR,CADb;AAAA,YACnBC,OADmB,gBACnBA,OADmB;AAAA,YACVC,OADU,gBACVA,OADU;;AAEzB,YAAItB,oBAAoB,CAACH,QAAD,EAAWwB,OAAX,EAAoBC,OAApB,CAAxB,EAAsD;AACpDvB,UAAAA,aAAa,CAAC;AACZwB,YAAAA,UAAU,EAAEF,OADA;AAEZG,YAAAA,UAAU,EAAEF;AAFA,WAAD,CAAb;AAID;AACF,OARD;AAUAxB,MAAAA,UAAU,CAAC;AAAES,QAAAA,KAAK,EAAEA;AAAT,OAAD,CAAV;AACD,KAbH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAgBE;AACE,IAAA,OAAO,EAAE,MAAM;AACb,UAAIH,SAAS,GAAG,KAAhB;AACAR,MAAAA,MAAM,CAACuB,OAAP,CAAeC,QAAQ,IAAI;AAAA,4BACElB,WAAW,CAACK,KAAD,EAAQa,QAAR,CADb;AAAA,YACnBC,OADmB,iBACnBA,OADmB;AAAA,YACVC,OADU,iBACVA,OADU;;AAEzB,YAAI,CAACtB,oBAAoB,CAACH,QAAD,EAAWwB,OAAX,EAAoBC,OAApB,CAAzB,EAAuD;AACrDlB,UAAAA,SAAS,GAAG,IAAZ;AACD,SAFD,MAEO;AACLA,UAAAA,SAAS,GAAG,KAAZ;AACD;AACF,OAPD;AAQAH,MAAAA,QAAQ,CAACM,KAAD,EAAQH,SAAR,CAAR;AACD,KAZH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAhBF,CAJF,CADF;AAwCD,CAzCA,CADH,CARF,CA5EF,CAtBK","sourcesContent":["import React from \"react\";\nimport Modal from \"react-modal\";\n\nexport const DisplayUsers = ({\n  users,\n  emails,\n  debtList,\n  deleteUser,\n  deleteDebtMap,\n  checkForDebtInstance,\n  editUser,\n  orderEmails,\n  modalIsOpen,\n  editEmail,\n  firstName,\n  lastName,\n  email,\n  saveEdit,\n  cancelEdit,\n  handleLastName,\n  handleFirstName,\n  handleEmail,\n  addUser,\n  oldEmail\n}) => (\n  <div>\n    <Modal\n      isOpen={modalIsOpen}\n      onRequestClose={cancelEdit}\n      contentLabel=\"Edit User\"\n    >\n      <span>\n        {editEmail\n          ? \"\"\n          : \"Note, only the first and last name can be changed for this user as they are involved in debts\"}\n      </span>\n      <form>\n        <label>\n          FirstName:\n          <input\n            type=\"text\"\n            name=\"firstName\"\n            value={firstName}\n            onChange={e => handleFirstName(e)}\n          />\n        </label>\n        <label>\n          LastName:\n          <input\n            type=\"text\"\n            name=\"lastName\"\n            value={lastName}\n            onChange={e => handleLastName(e)}\n          />\n        </label>\n        <label>\n          Email:\n          <input\n            type=\"text\"\n            name=\"email\"\n            value={email}\n            onChange={e => handleEmail(e)}\n            disabled={editEmail ? \"\" : \"disabled\"}\n          />\n        </label>\n        <input\n          type=\"button\"\n          value=\"Save\"\n          onClick={() => {\n            if (editEmail) {\n              if (!emails.includes(email)) {\n                deleteUser({ email: oldEmail });\n                addUser({\n                  firstName: firstName,\n                  lastName: lastName,\n                  email: email\n                });\n                saveEdit();\n              } else {\n                alert(\"User with same email already exists\");\n              }\n            } else {\n              deleteUser({ email: email });\n              addUser({\n                firstName: firstName,\n                lastName: lastName,\n                email: email\n              });\n              saveEdit();\n            }\n          }}\n        />\n        <input\n          type=\"button\"\n          value=\"Cancel\"\n          onClick={() => {\n            cancelEdit();\n          }}\n        />\n      </form>\n    </Modal>\n    <table>\n      <thead>\n        <tr>\n          <th>First Name</th>\n          <th>Last Name</th>\n          <th>Email</th>\n        </tr>\n      </thead>\n      <tbody>\n        {emails.map(email => {\n          return (\n            <tr key={users[email].email}>\n              <td>{users[email].firstName}</td>\n              <td>{users[email].lastName}</td>\n              <td>{users[email].email}</td>\n              <td>\n                <button\n                  onClick={() => {\n                    emails.forEach(emailTwo => {\n                      let { userOne, userTwo } = orderEmails(email, emailTwo);\n                      if (checkForDebtInstance(debtList, userOne, userTwo)) {\n                        deleteDebtMap({\n                          ownerEmail: userOne,\n                          slaveEmail: userTwo\n                        });\n                      }\n                    });\n\n                    deleteUser({ email: email });\n                  }}\n                />\n                <button\n                  onClick={() => {\n                    let editEmail = false;\n                    emails.forEach(emailTwo => {\n                      let { userOne, userTwo } = orderEmails(email, emailTwo);\n                      if (!checkForDebtInstance(debtList, userOne, userTwo)) {\n                        editEmail = true;\n                      } else {\n                        editEmail = false;\n                      }\n                    });\n                    editUser(email, editEmail);\n                  }}\n                >\n                  Edit\n                </button>\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  </div>\n);\n"]},"metadata":{},"sourceType":"module"}