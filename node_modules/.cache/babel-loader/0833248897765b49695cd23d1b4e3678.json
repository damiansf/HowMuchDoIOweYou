{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _cookieApi = require('./cookieApi');\n\nvar _cookieApi2 = _interopRequireDefault(_cookieApi);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * Middleware to persist state in cookies.\n * @param {Object} paths\n * @param {Object} customOptions\n */\n\n\nvar reduxCookiesMiddleware = function reduxCookiesMiddleware() {\n  var paths = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var customOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  var options = _extends({\n    logger: console.error,\n    setCookie: _cookieApi2.default,\n    defaultEqualityCheck: function defaultEqualityCheck(a, b) {\n      return a === b;\n    },\n    defaultDeleteCheck: function defaultDeleteCheck(value) {\n      return typeof value === 'undefined';\n    }\n  }, customOptions);\n\n  var _getVal = function _getVal(state, path) {\n    var pathPartsList = path.split('.');\n    var value = state;\n    var index = void 0;\n\n    for (index = 0; index < pathPartsList.length; index += 1) {\n      var pathPart = pathPartsList[index];\n\n      if (Object.hasOwnProperty.call(value, pathPart)) {\n        value = value[pathPart];\n      } else {\n        options.logger('state not found at store.getState().' + path);\n        break;\n      }\n    }\n\n    return index === pathPartsList.length ? value : null;\n  };\n\n  return function (store) {\n    return function (next) {\n      return function (action) {\n        var prevState = store.getState();\n        var result = next(action);\n        var nextState = store.getState();\n        Object.keys(paths).forEach(function (pathToState) {\n          var prevVal = _getVal(prevState, pathToState);\n\n          var nextVal = _getVal(nextState, pathToState);\n\n          var state = paths[pathToState];\n          var equalityCheck = state.equalityCheck || options.defaultEqualityCheck;\n          var deleteCheck = state.deleteCheck || options.defaultDeleteCheck;\n\n          if (!equalityCheck(prevVal, nextVal)) {\n            if (deleteCheck(nextVal)) {\n              options.setCookie(state.name, JSON.stringify(nextVal), 0);\n            } else {\n              options.setCookie(state.name, JSON.stringify(nextVal));\n            }\n          }\n        });\n        return result;\n      };\n    };\n  };\n};\n\nexports.default = reduxCookiesMiddleware;","map":null,"metadata":{},"sourceType":"script"}