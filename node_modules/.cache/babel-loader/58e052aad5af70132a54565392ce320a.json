{"ast":null,"code":"import * as actionConst from \"./action-constants\";\nimport { orderEmails } from \"../utils\";\nexport function addUser(data) {\n  return {\n    type: actionConst.addUser,\n    payload: {\n      firstName: data.firstName,\n      lastName: data.lastName,\n      email: data.email\n    },\n    email: data.email\n  };\n}\nexport function clearData() {\n  return {\n    type: actionConst.clearData\n  };\n}\nexport function deleteDebt(data) {\n  let _orderEmails = orderEmails(data.ownerEmail, data.slaveEmail),\n      userOne = _orderEmails.userOne,\n      userTwo = _orderEmails.userTwo;\n\n  return {\n    type: actionConst.deleteDebt,\n    payload: {\n      userIDOne: userOne,\n      userIDTwo: userTwo,\n      index: data.index\n    }\n  };\n}\nexport function deleteUser(data) {\n  return {\n    type: actionConst.deleteUser,\n    payload: {\n      email: data.email\n    }\n  };\n}\nexport function deleteDebtMap(data) {\n  let _orderEmails2 = orderEmails(data.ownerEmail, data.slaveEmail),\n      userOne = _orderEmails2.userOne,\n      userTwo = _orderEmails2.userTwo;\n\n  return {\n    type: actionConst.deleteDebtMap,\n    payload: {\n      userIDOne: userOne,\n      userIDTwo: userTwo\n    }\n  };\n}\nexport function addDebt(data) {\n  let userOne = \"\";\n  let userTwo = \"\";\n  let multiplier = 1;\n\n  if (data.userOne.localeCompare(data.userTwo) < 0) {\n    userOne = data.userOne;\n    userTwo = data.userTwo;\n    multiplier = -1;\n  } else {\n    userOne = data.userTwo;\n    userTwo = data.userOne;\n  }\n\n  return {\n    type: actionConst.addDebt,\n    payload: {\n      userIDOne: userOne,\n      userIDTwo: userTwo,\n      amount: data.amount * multiplier,\n      notes: data.notes,\n      timeStamp: Date.now()\n    }\n  };\n}\nexport function addDebtInstance(data) {\n  return {\n    type: actionConst.addDebtInstance,\n    payload: {\n      key: data.key,\n      debts: data.debts\n    }\n  };\n}","map":{"version":3,"sources":["/Users/damiansandhu-franceschi/Desktop/HowMuchDoIOweYou/src/actions/actionDefs.js"],"names":["actionConst","orderEmails","addUser","data","type","payload","firstName","lastName","email","clearData","deleteDebt","ownerEmail","slaveEmail","userOne","userTwo","userIDOne","userIDTwo","index","deleteUser","deleteDebtMap","addDebt","multiplier","localeCompare","amount","notes","timeStamp","Date","now","addDebtInstance","key","debts"],"mappings":"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","sourcesContent":["import * as actionConst from \"./action-constants\";\nimport { orderEmails } from \"../utils\";\n\nexport function addUser(data) {\n  return {\n    type: actionConst.addUser,\n    payload: {\n      firstName: data.firstName,\n      lastName: data.lastName,\n      email: data.email\n    },\n    email: data.email\n  };\n}\n\nexport function clearData() {\n  return {\n    type: actionConst.clearData\n  };\n}\n\nexport function deleteDebt(data) {\n  let { userOne, userTwo } = orderEmails(data.ownerEmail, data.slaveEmail);\n\n  return {\n    type: actionConst.deleteDebt,\n    payload: { userIDOne: userOne, userIDTwo: userTwo, index: data.index }\n  };\n}\n\nexport function deleteUser(data) {\n  return {\n    type: actionConst.deleteUser,\n    payload: {\n      email: data.email\n    }\n  };\n}\n\nexport function deleteDebtMap(data) {\n  let { userOne, userTwo } = orderEmails(data.ownerEmail, data.slaveEmail);\n\n  return {\n    type: actionConst.deleteDebtMap,\n    payload: { userIDOne: userOne, userIDTwo: userTwo }\n  };\n}\n\nexport function addDebt(data) {\n  let userOne = \"\";\n  let userTwo = \"\";\n  let multiplier = 1;\n\n  if (data.userOne.localeCompare(data.userTwo) < 0) {\n    userOne = data.userOne;\n    userTwo = data.userTwo;\n    multiplier = -1;\n  } else {\n    userOne = data.userTwo;\n    userTwo = data.userOne;\n  }\n\n  return {\n    type: actionConst.addDebt,\n    payload: {\n      userIDOne: userOne,\n      userIDTwo: userTwo,\n      amount: data.amount * multiplier,\n      notes: data.notes,\n      timeStamp: Date.now()\n    }\n  };\n}\n\nexport function addDebtInstance(data) {\n  return {\n    type: actionConst.addDebtInstance,\n    payload: {\n      key: data.key,\n      debts: data.debts\n    }\n  };\n}\n"]},"metadata":{},"sourceType":"module"}