{"ast":null,"code":"var _jsxFileName = \"/Users/damiansandhu-franceschi/Desktop/HowMuchDoIOweYou/src/components/DisplayDebts/index.js\";\nimport React from \"react\";\nimport { getIdentifier } from \"../../utils\";\nexport const DisplayDebts = ({\n  handleOwnerEmail,\n  handleSlaveEmail,\n  setTotalDebtMapAmount,\n  setDebtMapData,\n  buildDebtMapTable,\n  emails,\n  users,\n  debtMap,\n  debtList,\n  ownerEmail,\n  slaveEmail,\n  debtMapData,\n  debtMapTotal,\n  allDebtsData,\n  allDebtsTotal,\n  handleSingleSlaveEmail,\n  singleSlaveEmail,\n  buildDebtsTable,\n  setDebtsData,\n  setTotalDebtsAmount,\n  handleSingleOwnerEmail,\n  setCreditsData,\n  singleOwnerEmail,\n  allCreditsTotal,\n  allCreditsData,\n  setTotalCreditsAmount,\n  buildCreditsTable,\n  setNumDebts,\n  setNumCredits\n}) => React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35\n  },\n  __self: this\n}, React.createElement(\"form\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36\n  },\n  __self: this\n}, React.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37\n  },\n  __self: this\n}, \"slave\"), React.createElement(\"select\", {\n  onChange: e => handleSlaveEmail(e),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38\n  },\n  __self: this\n}, React.createElement(\"option\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39\n  },\n  __self: this\n}, \"--\"), emails.map(email => {\n  return getIdentifier(email, users[email]);\n})), React.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 44\n  },\n  __self: this\n}, \"owner\"), React.createElement(\"select\", {\n  onChange: e => handleOwnerEmail(e),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 45\n  },\n  __self: this\n}, React.createElement(\"option\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 46\n  },\n  __self: this\n}, \"--\"), emails.map(email => {\n  return getIdentifier(email, users[email]);\n})), React.createElement(\"input\", {\n  type: \"button\",\n  value: \"Submit\",\n  onClick: () => {\n    let data = null;\n    let amount = 0;\n\n    if (ownerEmail.localeCompare(slaveEmail) < 0) {\n      if (debtList.includes(ownerEmail + slaveEmail)) {\n        data = buildDebtMapTable(debtMap[ownerEmail + slaveEmail], -1);\n        amount = debtMap[ownerEmail + slaveEmail].debts.reduce((prev, curr) => prev + curr.amount, 0) * -1;\n      }\n    } else {\n      if (debtList.includes(slaveEmail + ownerEmail)) {\n        data = buildDebtMapTable(debtMap[slaveEmail + ownerEmail], 1);\n        amount = debtMap[slaveEmail + ownerEmail].debts.reduce((prev, curr) => prev + curr.amount, 0);\n      }\n    }\n\n    setTotalDebtMapAmount(amount);\n    setDebtMapData(data);\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 51\n  },\n  __self: this\n})), React.createElement(\"table\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 80\n  },\n  __self: this\n}, React.createElement(\"thead\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 81\n  },\n  __self: this\n}, React.createElement(\"tr\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 82\n  },\n  __self: this\n}, React.createElement(\"th\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 83\n  },\n  __self: this\n}, \"User One\"), React.createElement(\"th\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 84\n  },\n  __self: this\n}, \"User Two\"), React.createElement(\"th\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 85\n  },\n  __self: this\n}, \"Amount\"), React.createElement(\"th\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 86\n  },\n  __self: this\n}, \"Notes\"), React.createElement(\"th\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 87\n  },\n  __self: this\n}, \"Delete Debt\"))), React.createElement(\"tbody\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 90\n  },\n  __self: this\n}, debtMapData)), React.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 92\n  },\n  __self: this\n}, debtMapTotal), React.createElement(\"br\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 93\n  },\n  __self: this\n}), React.createElement(\"form\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 94\n  },\n  __self: this\n}, React.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 95\n  },\n  __self: this\n}, \"slave\"), React.createElement(\"select\", {\n  onChange: e => handleSingleSlaveEmail(e),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 96\n  },\n  __self: this\n}, React.createElement(\"option\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 97\n  },\n  __self: this\n}, \"--\"), emails.map(email => {\n  return getIdentifier(email, users[email]);\n})), React.createElement(\"input\", {\n  type: \"button\",\n  value: \"Submit\",\n  onClick: () => {\n    let data = [];\n    let amount = 0;\n    let currAmount = 0;\n    let countDebts = 0;\n    emails.forEach(email => {\n      if (singleSlaveEmail.localeCompare(email) < 0) {\n        if (debtList.includes(singleSlaveEmail + email)) {\n          currAmount = debtMap[singleSlaveEmail + email].debts.reduce((prev, curr) => prev + curr.amount, 0);\n          amount += currAmount;\n          countDebts++;\n          data.push(buildDebtsTable(email, singleSlaveEmail, currAmount));\n        }\n      } else {\n        if (debtList.includes(email + singleSlaveEmail)) {\n          currAmount = debtMap[email + singleSlaveEmail].debts.reduce((prev, curr) => prev + curr.amount, 0) * -1;\n          amount += currAmount;\n          countDebts++;\n          data.push(buildDebtsTable(email, singleSlaveEmail, currAmount));\n        }\n      }\n    });\n    setNumDebts(countDebts);\n\n    if (amount > 0) {\n      setTotalDebtsAmount(amount);\n      setDebtsData(data);\n    } else {\n      setTotalDebtsAmount(0);\n      setDebtsData([]);\n    }\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 102\n  },\n  __self: this\n})), React.createElement(\"table\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 145\n  },\n  __self: this\n}, React.createElement(\"thead\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 146\n  },\n  __self: this\n}, React.createElement(\"tr\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 147\n  },\n  __self: this\n}, React.createElement(\"th\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 148\n  },\n  __self: this\n}, \"User One\"), React.createElement(\"th\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 149\n  },\n  __self: this\n}, \"User Two\"), React.createElement(\"th\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 150\n  },\n  __self: this\n}, \"Amount\"), React.createElement(\"th\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 151\n  },\n  __self: this\n}, \"Delete Debt\"))), React.createElement(\"tbody\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 154\n  },\n  __self: this\n}, allDebtsData)), React.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 156\n  },\n  __self: this\n}, allDebtsTotal), React.createElement(\"br\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 157\n  },\n  __self: this\n}), React.createElement(\"form\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 158\n  },\n  __self: this\n}, React.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 159\n  },\n  __self: this\n}, \"owner\"), React.createElement(\"select\", {\n  onChange: e => handleSingleOwnerEmail(e),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 160\n  },\n  __self: this\n}, React.createElement(\"option\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 161\n  },\n  __self: this\n}, \"--\"), emails.map(email => {\n  return getIdentifier(email, users[email]);\n})), React.createElement(\"input\", {\n  type: \"button\",\n  value: \"Submit\",\n  onClick: () => {\n    let data = [];\n    let amount = 0;\n    let currAmount = 0;\n    let countCredits = 0;\n    emails.forEach(email => {\n      if (singleOwnerEmail.localeCompare(email) < 0) {\n        if (debtList.includes(singleOwnerEmail + email)) {\n          currAmount = debtMap[singleOwnerEmail + email].debts.reduce((prev, curr) => prev + curr.amount, 0) * -1;\n          amount += currAmount;\n          countCredits++;\n          data.push(buildCreditsTable(singleOwnerEmail, email, currAmount));\n        }\n      } else {\n        if (debtList.includes(email + singleOwnerEmail)) {\n          currAmount = debtMap[email + singleOwnerEmail].debts.reduce((prev, curr) => prev + curr.amount, 0);\n          amount += currAmount;\n          countCredits++;\n          data.push(buildCreditsTable(singleOwnerEmail, email, currAmount));\n        }\n      }\n    });\n    setNumCredits(countCredits);\n\n    if (amount > 0) {\n      setTotalCreditsAmount(amount);\n      setCreditsData(data);\n    } else {\n      setTotalCreditsAmount(0);\n      setCreditsData([]);\n    }\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 166\n  },\n  __self: this\n})), React.createElement(\"table\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 213\n  },\n  __self: this\n}, React.createElement(\"thead\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 214\n  },\n  __self: this\n}, React.createElement(\"tr\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 215\n  },\n  __self: this\n}, React.createElement(\"th\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 216\n  },\n  __self: this\n}, \"User One\"), React.createElement(\"th\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 217\n  },\n  __self: this\n}, \"User Two\"), React.createElement(\"th\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 218\n  },\n  __self: this\n}, \"Amount\"), React.createElement(\"th\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 219\n  },\n  __self: this\n}, \"Delete Debt\"))), React.createElement(\"tbody\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 222\n  },\n  __self: this\n}, allCreditsData)), React.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 224\n  },\n  __self: this\n}, allCreditsTotal));","map":{"version":3,"sources":["/Users/damiansandhu-franceschi/Desktop/HowMuchDoIOweYou/src/components/DisplayDebts/index.js"],"names":["React","getIdentifier","DisplayDebts","handleOwnerEmail","handleSlaveEmail","setTotalDebtMapAmount","setDebtMapData","buildDebtMapTable","emails","users","debtMap","debtList","ownerEmail","slaveEmail","debtMapData","debtMapTotal","allDebtsData","allDebtsTotal","handleSingleSlaveEmail","singleSlaveEmail","buildDebtsTable","setDebtsData","setTotalDebtsAmount","handleSingleOwnerEmail","setCreditsData","singleOwnerEmail","allCreditsTotal","allCreditsData","setTotalCreditsAmount","buildCreditsTable","setNumDebts","setNumCredits","e","map","email","data","amount","localeCompare","includes","debts","reduce","prev","curr","currAmount","countDebts","forEach","push","countCredits"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { getIdentifier } from \"../../utils\";\n\nexport const DisplayDebts = ({\n  handleOwnerEmail,\n  handleSlaveEmail,\n  setTotalDebtMapAmount,\n  setDebtMapData,\n  buildDebtMapTable,\n  emails,\n  users,\n  debtMap,\n  debtList,\n  ownerEmail,\n  slaveEmail,\n  debtMapData,\n  debtMapTotal,\n  allDebtsData,\n  allDebtsTotal,\n  handleSingleSlaveEmail,\n  singleSlaveEmail,\n  buildDebtsTable,\n  setDebtsData,\n  setTotalDebtsAmount,\n  handleSingleOwnerEmail,\n  setCreditsData,\n  singleOwnerEmail,\n  allCreditsTotal,\n  allCreditsData,\n  setTotalCreditsAmount,\n  buildCreditsTable,\n  setNumDebts,\n  setNumCredits\n}) => (\n  <div>\n    <form>\n      <span>slave</span>\n      <select onChange={e => handleSlaveEmail(e)}>\n        <option>--</option>\n        {emails.map(email => {\n          return getIdentifier(email, users[email]);\n        })}\n      </select>\n      <span>owner</span>\n      <select onChange={e => handleOwnerEmail(e)}>\n        <option>--</option>\n        {emails.map(email => {\n          return getIdentifier(email, users[email]);\n        })}\n      </select>\n      <input\n        type=\"button\"\n        value=\"Submit\"\n        onClick={() => {\n          let data = null;\n          let amount = 0;\n          if (ownerEmail.localeCompare(slaveEmail) < 0) {\n            if (debtList.includes(ownerEmail + slaveEmail)) {\n              data = buildDebtMapTable(debtMap[ownerEmail + slaveEmail], -1);\n              amount =\n                debtMap[ownerEmail + slaveEmail].debts.reduce(\n                  (prev, curr) => prev + curr.amount,\n                  0\n                ) * -1;\n            }\n          } else {\n            if (debtList.includes(slaveEmail + ownerEmail)) {\n              data = buildDebtMapTable(debtMap[slaveEmail + ownerEmail], 1);\n              amount = debtMap[slaveEmail + ownerEmail].debts.reduce(\n                (prev, curr) => prev + curr.amount,\n                0\n              );\n            }\n          }\n          setTotalDebtMapAmount(amount);\n          setDebtMapData(data);\n        }}\n      />\n    </form>\n    <table>\n      <thead>\n        <tr>\n          <th>User One</th>\n          <th>User Two</th>\n          <th>Amount</th>\n          <th>Notes</th>\n          <th>Delete Debt</th>\n        </tr>\n      </thead>\n      <tbody>{debtMapData}</tbody>\n    </table>\n    <span>{debtMapTotal}</span>\n    <br />\n    <form>\n      <span>slave</span>\n      <select onChange={e => handleSingleSlaveEmail(e)}>\n        <option>--</option>\n        {emails.map(email => {\n          return getIdentifier(email, users[email]);\n        })}\n      </select>\n      <input\n        type=\"button\"\n        value=\"Submit\"\n        onClick={() => {\n          let data = [];\n          let amount = 0;\n          let currAmount = 0;\n          let countDebts = 0;\n          emails.forEach(email => {\n            if (singleSlaveEmail.localeCompare(email) < 0) {\n              if (debtList.includes(singleSlaveEmail + email)) {\n                currAmount = debtMap[singleSlaveEmail + email].debts.reduce(\n                  (prev, curr) => prev + curr.amount,\n                  0\n                );\n                amount += currAmount;\n                countDebts++;\n                data.push(buildDebtsTable(email, singleSlaveEmail, currAmount));\n              }\n            } else {\n              if (debtList.includes(email + singleSlaveEmail)) {\n                currAmount =\n                  debtMap[email + singleSlaveEmail].debts.reduce(\n                    (prev, curr) => prev + curr.amount,\n                    0\n                  ) * -1;\n                amount += currAmount;\n                countDebts++;\n                data.push(buildDebtsTable(email, singleSlaveEmail, currAmount));\n              }\n            }\n          });\n          setNumDebts(countDebts);\n          if (amount > 0) {\n            setTotalDebtsAmount(amount);\n            setDebtsData(data);\n          } else {\n            setTotalDebtsAmount(0);\n            setDebtsData([]);\n          }\n        }}\n      />\n    </form>\n    <table>\n      <thead>\n        <tr>\n          <th>User One</th>\n          <th>User Two</th>\n          <th>Amount</th>\n          <th>Delete Debt</th>\n        </tr>\n      </thead>\n      <tbody>{allDebtsData}</tbody>\n    </table>\n    <span>{allDebtsTotal}</span>\n    <br />\n    <form>\n      <span>owner</span>\n      <select onChange={e => handleSingleOwnerEmail(e)}>\n        <option>--</option>\n        {emails.map(email => {\n          return getIdentifier(email, users[email]);\n        })}\n      </select>\n      <input\n        type=\"button\"\n        value=\"Submit\"\n        onClick={() => {\n          let data = [];\n          let amount = 0;\n          let currAmount = 0;\n          let countCredits = 0;\n          emails.forEach(email => {\n            if (singleOwnerEmail.localeCompare(email) < 0) {\n              if (debtList.includes(singleOwnerEmail + email)) {\n                currAmount =\n                  debtMap[singleOwnerEmail + email].debts.reduce(\n                    (prev, curr) => prev + curr.amount,\n                    0\n                  ) * -1;\n                amount += currAmount;\n                countCredits++;\n                data.push(\n                  buildCreditsTable(singleOwnerEmail, email, currAmount)\n                );\n              }\n            } else {\n              if (debtList.includes(email + singleOwnerEmail)) {\n                currAmount = debtMap[email + singleOwnerEmail].debts.reduce(\n                  (prev, curr) => prev + curr.amount,\n                  0\n                );\n                amount += currAmount;\n                countCredits++;\n                data.push(\n                  buildCreditsTable(singleOwnerEmail, email, currAmount)\n                );\n              }\n            }\n          });\n          setNumCredits(countCredits);\n          if (amount > 0) {\n            setTotalCreditsAmount(amount);\n            setCreditsData(data);\n          } else {\n            setTotalCreditsAmount(0);\n            setCreditsData([]);\n          }\n        }}\n      />\n    </form>\n    <table>\n      <thead>\n        <tr>\n          <th>User One</th>\n          <th>User Two</th>\n          <th>Amount</th>\n          <th>Delete Debt</th>\n        </tr>\n      </thead>\n      <tbody>{allCreditsData}</tbody>\n    </table>\n    <span>{allCreditsTotal}</span>\n  </div>\n);\n"]},"metadata":{},"sourceType":"module"}